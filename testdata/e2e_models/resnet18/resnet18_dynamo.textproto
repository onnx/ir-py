ir_version: 8
producer_name: "pytorch"
producer_version: "2.2.0"
graph {
  node {
    input: "l_x_"
    input: "conv1.weight"
    output: "conv1_1"
    name: "torch_nn_modules_conv_Conv2d_conv1_1_1"
    op_type: "torch_nn_modules_conv_Conv2d_conv1_1"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  node {
    input: "conv1_1"
    input: "bn1.weight"
    input: "bn1.bias"
    input: "bn1.running_mean"
    input: "bn1.running_var"
    output: "bn1_1"
    name: "torch_nn_modules_batchnorm_BatchNorm2d_bn1_1_2"
    op_type: "torch_nn_modules_batchnorm_BatchNorm2d_bn1_1"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  node {
    input: "bn1_1"
    output: "relu_1"
    name: "torch_nn_modules_activation_ReLU_relu_1_3"
    op_type: "torch_nn_modules_activation_ReLU_relu_1"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  node {
    input: "relu_1"
    output: "maxpool_1"
    name: "torch_nn_modules_pooling_MaxPool2d_maxpool_1_4"
    op_type: "torch_nn_modules_pooling_MaxPool2d_maxpool_1"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  node {
    input: "maxpool_1"
    input: "layer1.0.conv1.weight"
    input: "layer1.0.bn1.weight"
    input: "layer1.0.bn1.bias"
    input: "layer1.0.bn1.running_mean"
    input: "layer1.0.bn1.running_var"
    input: "layer1.0.conv2.weight"
    input: "layer1.0.bn2.weight"
    input: "layer1.0.bn2.bias"
    input: "layer1.0.bn2.running_mean"
    input: "layer1.0.bn2.running_var"
    input: "layer1.1.conv1.weight"
    input: "layer1.1.bn1.weight"
    input: "layer1.1.bn1.bias"
    input: "layer1.1.bn1.running_mean"
    input: "layer1.1.bn1.running_var"
    input: "layer1.1.conv2.weight"
    input: "layer1.1.bn2.weight"
    input: "layer1.1.bn2.bias"
    input: "layer1.1.bn2.running_mean"
    input: "layer1.1.bn2.running_var"
    output: "layer1_1"
    name: "torch_nn_modules_container_Sequential_layer1_1_5"
    op_type: "torch_nn_modules_container_Sequential_layer1_1"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  node {
    input: "layer1_1"
    input: "layer2.0.conv1.weight"
    input: "layer2.0.bn1.weight"
    input: "layer2.0.bn1.bias"
    input: "layer2.0.bn1.running_mean"
    input: "layer2.0.bn1.running_var"
    input: "layer2.0.conv2.weight"
    input: "layer2.0.bn2.weight"
    input: "layer2.0.bn2.bias"
    input: "layer2.0.bn2.running_mean"
    input: "layer2.0.bn2.running_var"
    input: "layer2.0.downsample.0.weight"
    input: "layer2.0.downsample.1.weight"
    input: "layer2.0.downsample.1.bias"
    input: "layer2.0.downsample.1.running_mean"
    input: "layer2.0.downsample.1.running_var"
    input: "layer2.1.conv1.weight"
    input: "layer2.1.bn1.weight"
    input: "layer2.1.bn1.bias"
    input: "layer2.1.bn1.running_mean"
    input: "layer2.1.bn1.running_var"
    input: "layer2.1.conv2.weight"
    input: "layer2.1.bn2.weight"
    input: "layer2.1.bn2.bias"
    input: "layer2.1.bn2.running_mean"
    input: "layer2.1.bn2.running_var"
    output: "layer2_1"
    name: "torch_nn_modules_container_Sequential_layer2_1_6"
    op_type: "torch_nn_modules_container_Sequential_layer2_1"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  node {
    input: "layer2_1"
    input: "layer3.0.conv1.weight"
    input: "layer3.0.bn1.weight"
    input: "layer3.0.bn1.bias"
    input: "layer3.0.bn1.running_mean"
    input: "layer3.0.bn1.running_var"
    input: "layer3.0.conv2.weight"
    input: "layer3.0.bn2.weight"
    input: "layer3.0.bn2.bias"
    input: "layer3.0.bn2.running_mean"
    input: "layer3.0.bn2.running_var"
    input: "layer3.0.downsample.0.weight"
    input: "layer3.0.downsample.1.weight"
    input: "layer3.0.downsample.1.bias"
    input: "layer3.0.downsample.1.running_mean"
    input: "layer3.0.downsample.1.running_var"
    input: "layer3.1.conv1.weight"
    input: "layer3.1.bn1.weight"
    input: "layer3.1.bn1.bias"
    input: "layer3.1.bn1.running_mean"
    input: "layer3.1.bn1.running_var"
    input: "layer3.1.conv2.weight"
    input: "layer3.1.bn2.weight"
    input: "layer3.1.bn2.bias"
    input: "layer3.1.bn2.running_mean"
    input: "layer3.1.bn2.running_var"
    output: "layer3_1"
    name: "torch_nn_modules_container_Sequential_layer3_1_7"
    op_type: "torch_nn_modules_container_Sequential_layer3_1"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  node {
    input: "layer3_1"
    input: "layer4.0.conv1.weight"
    input: "layer4.0.bn1.weight"
    input: "layer4.0.bn1.bias"
    input: "layer4.0.bn1.running_mean"
    input: "layer4.0.bn1.running_var"
    input: "layer4.0.conv2.weight"
    input: "layer4.0.bn2.weight"
    input: "layer4.0.bn2.bias"
    input: "layer4.0.bn2.running_mean"
    input: "layer4.0.bn2.running_var"
    input: "layer4.0.downsample.0.weight"
    input: "layer4.0.downsample.1.weight"
    input: "layer4.0.downsample.1.bias"
    input: "layer4.0.downsample.1.running_mean"
    input: "layer4.0.downsample.1.running_var"
    input: "layer4.1.conv1.weight"
    input: "layer4.1.bn1.weight"
    input: "layer4.1.bn1.bias"
    input: "layer4.1.bn1.running_mean"
    input: "layer4.1.bn1.running_var"
    input: "layer4.1.conv2.weight"
    input: "layer4.1.bn2.weight"
    input: "layer4.1.bn2.bias"
    input: "layer4.1.bn2.running_mean"
    input: "layer4.1.bn2.running_var"
    output: "layer4_1"
    name: "torch_nn_modules_container_Sequential_layer4_1_8"
    op_type: "torch_nn_modules_container_Sequential_layer4_1"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  node {
    input: "layer4_1"
    output: "avgpool_1"
    name: "torch_nn_modules_pooling_AdaptiveAvgPool2d_avgpool_1_9"
    op_type: "torch_nn_modules_pooling_AdaptiveAvgPool2d_avgpool_1"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  node {
    output: "_val_110"
    name: "Constant_10"
    op_type: "Constant"
    attribute {
      name: "value"
      t {
        dims: 2
        data_type: 7
        raw_data: "\001\000\000\000\000\000\000\000\000\002\000\000\000\000\000\000"
      }
      type: TENSOR
    }
  }
  node {
    input: "avgpool_1"
    input: "_val_110"
    output: "view"
    name: "aten_view_11"
    op_type: "aten_view"
    domain: "pkg.onnxscript.torch_lib"
  }
  node {
    input: "view"
    input: "fc.weight"
    input: "fc.bias"
    output: "fc_1"
    name: "torch_nn_modules_linear_Linear_fc_1_12"
    op_type: "torch_nn_modules_linear_Linear_fc_1"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  name: "main_graph"
  initializer {
    dims: 64
    dims: 3
    dims: 7
    dims: 7
    data_type: 1
    name: "conv1.weight"
    raw_data: ""
  }
  initializer {
    dims: 64
    data_type: 1
    name: "bn1.weight"
    raw_data: ""
  }
  initializer {
    dims: 64
    data_type: 1
    name: "bn1.bias"
    raw_data: ""
  }
  initializer {
    dims: 64
    data_type: 1
    name: "bn1.running_mean"
    raw_data: ""
  }
  initializer {
    dims: 64
    data_type: 1
    name: "bn1.running_var"
    raw_data: ""
  }
  initializer {
    dims: 64
    dims: 64
    dims: 3
    dims: 3
    data_type: 1
    name: "layer1.0.conv1.weight"
    raw_data: ""
  }
  initializer {
    dims: 64
    data_type: 1
    name: "layer1.0.bn1.weight"
    raw_data: ""
  }
  initializer {
    dims: 64
    data_type: 1
    name: "layer1.0.bn1.bias"
    raw_data: ""
  }
  initializer {
    dims: 64
    data_type: 1
    name: "layer1.0.bn1.running_mean"
    raw_data: ""
  }
  initializer {
    dims: 64
    data_type: 1
    name: "layer1.0.bn1.running_var"
    raw_data: ""
  }
  initializer {
    dims: 64
    dims: 64
    dims: 3
    dims: 3
    data_type: 1
    name: "layer1.0.conv2.weight"
    raw_data: ""
  }
  initializer {
    dims: 64
    data_type: 1
    name: "layer1.0.bn2.weight"
    raw_data: ""
  }
  initializer {
    dims: 64
    data_type: 1
    name: "layer1.0.bn2.bias"
    raw_data: ""
  }
  initializer {
    dims: 64
    data_type: 1
    name: "layer1.0.bn2.running_mean"
    raw_data: ""
  }
  initializer {
    dims: 64
    data_type: 1
    name: "layer1.0.bn2.running_var"
    raw_data: ""
  }
  initializer {
    dims: 64
    dims: 64
    dims: 3
    dims: 3
    data_type: 1
    name: "layer1.1.conv1.weight"
    raw_data: ""
  }
  initializer {
    dims: 64
    data_type: 1
    name: "layer1.1.bn1.weight"
    raw_data: ""
  }
  initializer {
    dims: 64
    data_type: 1
    name: "layer1.1.bn1.bias"
    raw_data: ""
  }
  initializer {
    dims: 64
    data_type: 1
    name: "layer1.1.bn1.running_mean"
    raw_data: ""
  }
  initializer {
    dims: 64
    data_type: 1
    name: "layer1.1.bn1.running_var"
    raw_data: ""
  }
  initializer {
    dims: 64
    dims: 64
    dims: 3
    dims: 3
    data_type: 1
    name: "layer1.1.conv2.weight"
    raw_data: ""
  }
  initializer {
    dims: 64
    data_type: 1
    name: "layer1.1.bn2.weight"
    raw_data: ""
  }
  initializer {
    dims: 64
    data_type: 1
    name: "layer1.1.bn2.bias"
    raw_data: ""
  }
  initializer {
    dims: 64
    data_type: 1
    name: "layer1.1.bn2.running_mean"
    raw_data: ""
  }
  initializer {
    dims: 64
    data_type: 1
    name: "layer1.1.bn2.running_var"
    raw_data: ""
  }
  initializer {
    dims: 128
    dims: 64
    dims: 3
    dims: 3
    data_type: 1
    name: "layer2.0.conv1.weight"
    raw_data: ""
  }
  initializer {
    dims: 128
    data_type: 1
    name: "layer2.0.bn1.weight"
    raw_data: ""
  }
  initializer {
    dims: 128
    data_type: 1
    name: "layer2.0.bn1.bias"
    raw_data: ""
  }
  initializer {
    dims: 128
    data_type: 1
    name: "layer2.0.bn1.running_mean"
    raw_data: ""
  }
  initializer {
    dims: 128
    data_type: 1
    name: "layer2.0.bn1.running_var"
    raw_data: ""
  }
  initializer {
    dims: 128
    dims: 128
    dims: 3
    dims: 3
    data_type: 1
    name: "layer2.0.conv2.weight"
    raw_data: ""
  }
  initializer {
    dims: 128
    data_type: 1
    name: "layer2.0.bn2.weight"
    raw_data: ""
  }
  initializer {
    dims: 128
    data_type: 1
    name: "layer2.0.bn2.bias"
    raw_data: ""
  }
  initializer {
    dims: 128
    data_type: 1
    name: "layer2.0.bn2.running_mean"
    raw_data: ""
  }
  initializer {
    dims: 128
    data_type: 1
    name: "layer2.0.bn2.running_var"
    raw_data: ""
  }
  initializer {
    dims: 128
    dims: 64
    dims: 1
    dims: 1
    data_type: 1
    name: "layer2.0.downsample.0.weight"
    raw_data: ""
  }
  initializer {
    dims: 128
    data_type: 1
    name: "layer2.0.downsample.1.weight"
    raw_data: ""
  }
  initializer {
    dims: 128
    data_type: 1
    name: "layer2.0.downsample.1.bias"
    raw_data: ""
  }
  initializer {
    dims: 128
    data_type: 1
    name: "layer2.0.downsample.1.running_mean"
    raw_data: ""
  }
  initializer {
    dims: 128
    data_type: 1
    name: "layer2.0.downsample.1.running_var"
    raw_data: ""
  }
  initializer {
    dims: 128
    dims: 128
    dims: 3
    dims: 3
    data_type: 1
    name: "layer2.1.conv1.weight"
    raw_data: ""
  }
  initializer {
    dims: 128
    data_type: 1
    name: "layer2.1.bn1.weight"
    raw_data: ""
  }
  initializer {
    dims: 128
    data_type: 1
    name: "layer2.1.bn1.bias"
    raw_data: ""
  }
  initializer {
    dims: 128
    data_type: 1
    name: "layer2.1.bn1.running_mean"
    raw_data: ""
  }
  initializer {
    dims: 128
    data_type: 1
    name: "layer2.1.bn1.running_var"
    raw_data: ""
  }
  initializer {
    dims: 128
    dims: 128
    dims: 3
    dims: 3
    data_type: 1
    name: "layer2.1.conv2.weight"
    raw_data: ""
  }
  initializer {
    dims: 128
    data_type: 1
    name: "layer2.1.bn2.weight"
    raw_data: ""
  }
  initializer {
    dims: 128
    data_type: 1
    name: "layer2.1.bn2.bias"
    raw_data: ""
  }
  initializer {
    dims: 128
    data_type: 1
    name: "layer2.1.bn2.running_mean"
    raw_data: ""
  }
  initializer {
    dims: 128
    data_type: 1
    name: "layer2.1.bn2.running_var"
    raw_data: ""
  }
  initializer {
    dims: 256
    dims: 128
    dims: 3
    dims: 3
    data_type: 1
    name: "layer3.0.conv1.weight"
    raw_data: ""
  }
  initializer {
    dims: 256
    data_type: 1
    name: "layer3.0.bn1.weight"
    raw_data: ""
  }
  initializer {
    dims: 256
    data_type: 1
    name: "layer3.0.bn1.bias"
    raw_data: ""
  }
  initializer {
    dims: 256
    data_type: 1
    name: "layer3.0.bn1.running_mean"
    raw_data: ""
  }
  initializer {
    dims: 256
    data_type: 1
    name: "layer3.0.bn1.running_var"
    raw_data: ""
  }
  initializer {
    dims: 256
    dims: 256
    dims: 3
    dims: 3
    data_type: 1
    name: "layer3.0.conv2.weight"
    raw_data: ""
  }
  initializer {
    dims: 256
    data_type: 1
    name: "layer3.0.bn2.weight"
    raw_data: ""
  }
  initializer {
    dims: 256
    data_type: 1
    name: "layer3.0.bn2.bias"
    raw_data: ""
  }
  initializer {
    dims: 256
    data_type: 1
    name: "layer3.0.bn2.running_mean"
    raw_data: ""
  }
  initializer {
    dims: 256
    data_type: 1
    name: "layer3.0.bn2.running_var"
    raw_data: ""
  }
  initializer {
    dims: 256
    dims: 128
    dims: 1
    dims: 1
    data_type: 1
    name: "layer3.0.downsample.0.weight"
    raw_data: ""
  }
  initializer {
    dims: 256
    data_type: 1
    name: "layer3.0.downsample.1.weight"
    raw_data: ""
  }
  initializer {
    dims: 256
    data_type: 1
    name: "layer3.0.downsample.1.bias"
    raw_data: ""
  }
  initializer {
    dims: 256
    data_type: 1
    name: "layer3.0.downsample.1.running_mean"
    raw_data: ""
  }
  initializer {
    dims: 256
    data_type: 1
    name: "layer3.0.downsample.1.running_var"
    raw_data: ""
  }
  initializer {
    dims: 256
    dims: 256
    dims: 3
    dims: 3
    data_type: 1
    name: "layer3.1.conv1.weight"
    raw_data: ""
  }
  initializer {
    dims: 256
    data_type: 1
    name: "layer3.1.bn1.weight"
    raw_data: ""
  }
  initializer {
    dims: 256
    data_type: 1
    name: "layer3.1.bn1.bias"
    raw_data: ""
  }
  initializer {
    dims: 256
    data_type: 1
    name: "layer3.1.bn1.running_mean"
    raw_data: ""
  }
  initializer {
    dims: 256
    data_type: 1
    name: "layer3.1.bn1.running_var"
    raw_data: ""
  }
  initializer {
    dims: 256
    dims: 256
    dims: 3
    dims: 3
    data_type: 1
    name: "layer3.1.conv2.weight"
    raw_data: ""
  }
  initializer {
    dims: 256
    data_type: 1
    name: "layer3.1.bn2.weight"
    raw_data: ""
  }
  initializer {
    dims: 256
    data_type: 1
    name: "layer3.1.bn2.bias"
    raw_data: ""
  }
  initializer {
    dims: 256
    data_type: 1
    name: "layer3.1.bn2.running_mean"
    raw_data: ""
  }
  initializer {
    dims: 256
    data_type: 1
    name: "layer3.1.bn2.running_var"
    raw_data: ""
  }
  initializer {
    dims: 512
    dims: 256
    dims: 3
    dims: 3
    data_type: 1
    name: "layer4.0.conv1.weight"
    raw_data: ""
  }
  initializer {
    dims: 512
    data_type: 1
    name: "layer4.0.bn1.weight"
    raw_data: ""
  }
  initializer {
    dims: 512
    data_type: 1
    name: "layer4.0.bn1.bias"
    raw_data: ""
  }
  initializer {
    dims: 512
    data_type: 1
    name: "layer4.0.bn1.running_mean"
    raw_data: ""
  }
  initializer {
    dims: 512
    data_type: 1
    name: "layer4.0.bn1.running_var"
    raw_data: ""
  }
  initializer {
    dims: 512
    dims: 512
    dims: 3
    dims: 3
    data_type: 1
    name: "layer4.0.conv2.weight"
    raw_data: ""
  }
  initializer {
    dims: 512
    data_type: 1
    name: "layer4.0.bn2.weight"
    raw_data: ""
  }
  initializer {
    dims: 512
    data_type: 1
    name: "layer4.0.bn2.bias"
    raw_data: ""
  }
  initializer {
    dims: 512
    data_type: 1
    name: "layer4.0.bn2.running_mean"
    raw_data: ""
  }
  initializer {
    dims: 512
    data_type: 1
    name: "layer4.0.bn2.running_var"
    raw_data: ""
  }
  initializer {
    dims: 512
    dims: 256
    dims: 1
    dims: 1
    data_type: 1
    name: "layer4.0.downsample.0.weight"
    raw_data: ""
  }
  initializer {
    dims: 512
    data_type: 1
    name: "layer4.0.downsample.1.weight"
    raw_data: ""
  }
  initializer {
    dims: 512
    data_type: 1
    name: "layer4.0.downsample.1.bias"
    raw_data: ""
  }
  initializer {
    dims: 512
    data_type: 1
    name: "layer4.0.downsample.1.running_mean"
    raw_data: ""
  }
  initializer {
    dims: 512
    data_type: 1
    name: "layer4.0.downsample.1.running_var"
    raw_data: ""
  }
  initializer {
    dims: 512
    dims: 512
    dims: 3
    dims: 3
    data_type: 1
    name: "layer4.1.conv1.weight"
    raw_data: ""
  }
  initializer {
    dims: 512
    data_type: 1
    name: "layer4.1.bn1.weight"
    raw_data: ""
  }
  initializer {
    dims: 512
    data_type: 1
    name: "layer4.1.bn1.bias"
    raw_data: ""
  }
  initializer {
    dims: 512
    data_type: 1
    name: "layer4.1.bn1.running_mean"
    raw_data: ""
  }
  initializer {
    dims: 512
    data_type: 1
    name: "layer4.1.bn1.running_var"
    raw_data: ""
  }
  initializer {
    dims: 512
    dims: 512
    dims: 3
    dims: 3
    data_type: 1
    name: "layer4.1.conv2.weight"
    raw_data: ""
  }
  initializer {
    dims: 512
    data_type: 1
    name: "layer4.1.bn2.weight"
    raw_data: ""
  }
  initializer {
    dims: 512
    data_type: 1
    name: "layer4.1.bn2.bias"
    raw_data: ""
  }
  initializer {
    dims: 512
    data_type: 1
    name: "layer4.1.bn2.running_mean"
    raw_data: ""
  }
  initializer {
    dims: 512
    data_type: 1
    name: "layer4.1.bn2.running_var"
    raw_data: ""
  }
  initializer {
    dims: 1000
    dims: 512
    data_type: 1
    name: "fc.weight"
    raw_data: ""
  }
  initializer {
    dims: 1000
    data_type: 1
    name: "fc.bias"
    raw_data: ""
  }
  input {
    name: "l_x_"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 3
          }
          dim {
            dim_value: 224
          }
          dim {
            dim_value: 224
          }
        }
      }
    }
  }
  output {
    name: "fc_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 1000
          }
        }
      }
    }
  }
  value_info {
    name: "conv1.weight"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 3
          }
          dim {
            dim_value: 7
          }
          dim {
            dim_value: 7
          }
        }
      }
    }
  }
  value_info {
    name: "bn1.weight"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 64
          }
        }
      }
    }
  }
  value_info {
    name: "bn1.bias"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 64
          }
        }
      }
    }
  }
  value_info {
    name: "bn1.running_mean"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 64
          }
        }
      }
    }
  }
  value_info {
    name: "bn1.running_var"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 64
          }
        }
      }
    }
  }
  value_info {
    name: "layer1.0.conv1.weight"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 3
          }
          dim {
            dim_value: 3
          }
        }
      }
    }
  }
  value_info {
    name: "layer1.0.bn1.weight"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 64
          }
        }
      }
    }
  }
  value_info {
    name: "layer1.0.bn1.bias"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 64
          }
        }
      }
    }
  }
  value_info {
    name: "layer1.0.bn1.running_mean"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 64
          }
        }
      }
    }
  }
  value_info {
    name: "layer1.0.bn1.running_var"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 64
          }
        }
      }
    }
  }
  value_info {
    name: "layer1.0.conv2.weight"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 3
          }
          dim {
            dim_value: 3
          }
        }
      }
    }
  }
  value_info {
    name: "layer1.0.bn2.weight"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 64
          }
        }
      }
    }
  }
  value_info {
    name: "layer1.0.bn2.bias"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 64
          }
        }
      }
    }
  }
  value_info {
    name: "layer1.0.bn2.running_mean"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 64
          }
        }
      }
    }
  }
  value_info {
    name: "layer1.0.bn2.running_var"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 64
          }
        }
      }
    }
  }
  value_info {
    name: "layer1.1.conv1.weight"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 3
          }
          dim {
            dim_value: 3
          }
        }
      }
    }
  }
  value_info {
    name: "layer1.1.bn1.weight"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 64
          }
        }
      }
    }
  }
  value_info {
    name: "layer1.1.bn1.bias"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 64
          }
        }
      }
    }
  }
  value_info {
    name: "layer1.1.bn1.running_mean"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 64
          }
        }
      }
    }
  }
  value_info {
    name: "layer1.1.bn1.running_var"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 64
          }
        }
      }
    }
  }
  value_info {
    name: "layer1.1.conv2.weight"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 3
          }
          dim {
            dim_value: 3
          }
        }
      }
    }
  }
  value_info {
    name: "layer1.1.bn2.weight"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 64
          }
        }
      }
    }
  }
  value_info {
    name: "layer1.1.bn2.bias"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 64
          }
        }
      }
    }
  }
  value_info {
    name: "layer1.1.bn2.running_mean"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 64
          }
        }
      }
    }
  }
  value_info {
    name: "layer1.1.bn2.running_var"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 64
          }
        }
      }
    }
  }
  value_info {
    name: "layer2.0.conv1.weight"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 3
          }
          dim {
            dim_value: 3
          }
        }
      }
    }
  }
  value_info {
    name: "layer2.0.bn1.weight"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 128
          }
        }
      }
    }
  }
  value_info {
    name: "layer2.0.bn1.bias"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 128
          }
        }
      }
    }
  }
  value_info {
    name: "layer2.0.bn1.running_mean"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 128
          }
        }
      }
    }
  }
  value_info {
    name: "layer2.0.bn1.running_var"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 128
          }
        }
      }
    }
  }
  value_info {
    name: "layer2.0.conv2.weight"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 3
          }
          dim {
            dim_value: 3
          }
        }
      }
    }
  }
  value_info {
    name: "layer2.0.bn2.weight"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 128
          }
        }
      }
    }
  }
  value_info {
    name: "layer2.0.bn2.bias"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 128
          }
        }
      }
    }
  }
  value_info {
    name: "layer2.0.bn2.running_mean"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 128
          }
        }
      }
    }
  }
  value_info {
    name: "layer2.0.bn2.running_var"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 128
          }
        }
      }
    }
  }
  value_info {
    name: "layer2.0.downsample.0.weight"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 1
          }
        }
      }
    }
  }
  value_info {
    name: "layer2.0.downsample.1.weight"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 128
          }
        }
      }
    }
  }
  value_info {
    name: "layer2.0.downsample.1.bias"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 128
          }
        }
      }
    }
  }
  value_info {
    name: "layer2.0.downsample.1.running_mean"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 128
          }
        }
      }
    }
  }
  value_info {
    name: "layer2.0.downsample.1.running_var"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 128
          }
        }
      }
    }
  }
  value_info {
    name: "layer2.1.conv1.weight"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 3
          }
          dim {
            dim_value: 3
          }
        }
      }
    }
  }
  value_info {
    name: "layer2.1.bn1.weight"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 128
          }
        }
      }
    }
  }
  value_info {
    name: "layer2.1.bn1.bias"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 128
          }
        }
      }
    }
  }
  value_info {
    name: "layer2.1.bn1.running_mean"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 128
          }
        }
      }
    }
  }
  value_info {
    name: "layer2.1.bn1.running_var"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 128
          }
        }
      }
    }
  }
  value_info {
    name: "layer2.1.conv2.weight"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 3
          }
          dim {
            dim_value: 3
          }
        }
      }
    }
  }
  value_info {
    name: "layer2.1.bn2.weight"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 128
          }
        }
      }
    }
  }
  value_info {
    name: "layer2.1.bn2.bias"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 128
          }
        }
      }
    }
  }
  value_info {
    name: "layer2.1.bn2.running_mean"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 128
          }
        }
      }
    }
  }
  value_info {
    name: "layer2.1.bn2.running_var"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 128
          }
        }
      }
    }
  }
  value_info {
    name: "layer3.0.conv1.weight"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 3
          }
          dim {
            dim_value: 3
          }
        }
      }
    }
  }
  value_info {
    name: "layer3.0.bn1.weight"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 256
          }
        }
      }
    }
  }
  value_info {
    name: "layer3.0.bn1.bias"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 256
          }
        }
      }
    }
  }
  value_info {
    name: "layer3.0.bn1.running_mean"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 256
          }
        }
      }
    }
  }
  value_info {
    name: "layer3.0.bn1.running_var"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 256
          }
        }
      }
    }
  }
  value_info {
    name: "layer3.0.conv2.weight"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 3
          }
          dim {
            dim_value: 3
          }
        }
      }
    }
  }
  value_info {
    name: "layer3.0.bn2.weight"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 256
          }
        }
      }
    }
  }
  value_info {
    name: "layer3.0.bn2.bias"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 256
          }
        }
      }
    }
  }
  value_info {
    name: "layer3.0.bn2.running_mean"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 256
          }
        }
      }
    }
  }
  value_info {
    name: "layer3.0.bn2.running_var"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 256
          }
        }
      }
    }
  }
  value_info {
    name: "layer3.0.downsample.0.weight"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 1
          }
        }
      }
    }
  }
  value_info {
    name: "layer3.0.downsample.1.weight"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 256
          }
        }
      }
    }
  }
  value_info {
    name: "layer3.0.downsample.1.bias"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 256
          }
        }
      }
    }
  }
  value_info {
    name: "layer3.0.downsample.1.running_mean"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 256
          }
        }
      }
    }
  }
  value_info {
    name: "layer3.0.downsample.1.running_var"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 256
          }
        }
      }
    }
  }
  value_info {
    name: "layer3.1.conv1.weight"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 3
          }
          dim {
            dim_value: 3
          }
        }
      }
    }
  }
  value_info {
    name: "layer3.1.bn1.weight"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 256
          }
        }
      }
    }
  }
  value_info {
    name: "layer3.1.bn1.bias"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 256
          }
        }
      }
    }
  }
  value_info {
    name: "layer3.1.bn1.running_mean"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 256
          }
        }
      }
    }
  }
  value_info {
    name: "layer3.1.bn1.running_var"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 256
          }
        }
      }
    }
  }
  value_info {
    name: "layer3.1.conv2.weight"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 3
          }
          dim {
            dim_value: 3
          }
        }
      }
    }
  }
  value_info {
    name: "layer3.1.bn2.weight"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 256
          }
        }
      }
    }
  }
  value_info {
    name: "layer3.1.bn2.bias"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 256
          }
        }
      }
    }
  }
  value_info {
    name: "layer3.1.bn2.running_mean"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 256
          }
        }
      }
    }
  }
  value_info {
    name: "layer3.1.bn2.running_var"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 256
          }
        }
      }
    }
  }
  value_info {
    name: "layer4.0.conv1.weight"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 3
          }
          dim {
            dim_value: 3
          }
        }
      }
    }
  }
  value_info {
    name: "layer4.0.bn1.weight"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 512
          }
        }
      }
    }
  }
  value_info {
    name: "layer4.0.bn1.bias"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 512
          }
        }
      }
    }
  }
  value_info {
    name: "layer4.0.bn1.running_mean"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 512
          }
        }
      }
    }
  }
  value_info {
    name: "layer4.0.bn1.running_var"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 512
          }
        }
      }
    }
  }
  value_info {
    name: "layer4.0.conv2.weight"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 3
          }
          dim {
            dim_value: 3
          }
        }
      }
    }
  }
  value_info {
    name: "layer4.0.bn2.weight"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 512
          }
        }
      }
    }
  }
  value_info {
    name: "layer4.0.bn2.bias"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 512
          }
        }
      }
    }
  }
  value_info {
    name: "layer4.0.bn2.running_mean"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 512
          }
        }
      }
    }
  }
  value_info {
    name: "layer4.0.bn2.running_var"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 512
          }
        }
      }
    }
  }
  value_info {
    name: "layer4.0.downsample.0.weight"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 1
          }
        }
      }
    }
  }
  value_info {
    name: "layer4.0.downsample.1.weight"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 512
          }
        }
      }
    }
  }
  value_info {
    name: "layer4.0.downsample.1.bias"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 512
          }
        }
      }
    }
  }
  value_info {
    name: "layer4.0.downsample.1.running_mean"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 512
          }
        }
      }
    }
  }
  value_info {
    name: "layer4.0.downsample.1.running_var"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 512
          }
        }
      }
    }
  }
  value_info {
    name: "layer4.1.conv1.weight"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 3
          }
          dim {
            dim_value: 3
          }
        }
      }
    }
  }
  value_info {
    name: "layer4.1.bn1.weight"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 512
          }
        }
      }
    }
  }
  value_info {
    name: "layer4.1.bn1.bias"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 512
          }
        }
      }
    }
  }
  value_info {
    name: "layer4.1.bn1.running_mean"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 512
          }
        }
      }
    }
  }
  value_info {
    name: "layer4.1.bn1.running_var"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 512
          }
        }
      }
    }
  }
  value_info {
    name: "layer4.1.conv2.weight"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 3
          }
          dim {
            dim_value: 3
          }
        }
      }
    }
  }
  value_info {
    name: "layer4.1.bn2.weight"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 512
          }
        }
      }
    }
  }
  value_info {
    name: "layer4.1.bn2.bias"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 512
          }
        }
      }
    }
  }
  value_info {
    name: "layer4.1.bn2.running_mean"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 512
          }
        }
      }
    }
  }
  value_info {
    name: "layer4.1.bn2.running_var"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 512
          }
        }
      }
    }
  }
  value_info {
    name: "fc.weight"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1000
          }
          dim {
            dim_value: 512
          }
        }
      }
    }
  }
  value_info {
    name: "fc.bias"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1000
          }
        }
      }
    }
  }
  value_info {
    name: "conv1_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 112
          }
          dim {
            dim_value: 112
          }
        }
      }
    }
  }
  value_info {
    name: "bn1_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 112
          }
          dim {
            dim_value: 112
          }
        }
      }
    }
  }
  value_info {
    name: "relu_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 112
          }
          dim {
            dim_value: 112
          }
        }
      }
    }
  }
  value_info {
    name: "maxpool_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 56
          }
          dim {
            dim_value: 56
          }
        }
      }
    }
  }
  value_info {
    name: "layer1_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 56
          }
          dim {
            dim_value: 56
          }
        }
      }
    }
  }
  value_info {
    name: "layer2_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 28
          }
          dim {
            dim_value: 28
          }
        }
      }
    }
  }
  value_info {
    name: "layer3_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 14
          }
          dim {
            dim_value: 14
          }
        }
      }
    }
  }
  value_info {
    name: "layer4_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 7
          }
          dim {
            dim_value: 7
          }
        }
      }
    }
  }
  value_info {
    name: "avgpool_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 1
          }
        }
      }
    }
  }
  value_info {
    name: "_val_110"
    type {
      tensor_type {
        elem_type: 7
        shape {
          dim {
            dim_value: 2
          }
        }
      }
    }
  }
  value_info {
    name: "view"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 512
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_conv_Conv2d_conv1_1/l_x_"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 3
          }
          dim {
            dim_value: 224
          }
          dim {
            dim_value: 224
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_conv_Conv2d_conv1_1/convolution"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 112
          }
          dim {
            dim_value: 112
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_bn1_1/convolution"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 112
          }
          dim {
            dim_value: 112
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_bn1_1/_native_batch_norm_legit_no_training"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 112
          }
          dim {
            dim_value: 112
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_bn1_1/_native_batch_norm_legit_no_training_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 0
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_bn1_1/_native_batch_norm_legit_no_training_2"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 0
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_activation_ReLU_relu_1/getitem"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 112
          }
          dim {
            dim_value: 112
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_activation_ReLU_relu_1/relu"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 112
          }
          dim {
            dim_value: 112
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_activation_ReLU_relu_1/copy"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 112
          }
          dim {
            dim_value: 112
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_pooling_MaxPool2d_maxpool_1/copy"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 112
          }
          dim {
            dim_value: 112
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_pooling_MaxPool2d_maxpool_1/max_pool2d_with_indices"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 56
          }
          dim {
            dim_value: 56
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_pooling_MaxPool2d_maxpool_1/max_pool2d_with_indices_1"
    type {
      tensor_type {
        elem_type: 7
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 56
          }
          dim {
            dim_value: 56
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_conv_Conv2d_getattr_L__self___layer1___0___conv1_1/getitem_3"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 56
          }
          dim {
            dim_value: 56
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_conv_Conv2d_getattr_L__self___layer1___0___conv1_1/convolution_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 56
          }
          dim {
            dim_value: 56
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer1___0___bn1_1/convolution_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 56
          }
          dim {
            dim_value: 56
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer1___0___bn1_1/_native_batch_norm_legit_no_training_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 56
          }
          dim {
            dim_value: 56
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer1___0___bn1_1/_native_batch_norm_legit_no_training_1_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 0
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer1___0___bn1_1/_native_batch_norm_legit_no_training_1_2"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 0
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_activation_ReLU_getattr_L__self___layer1___0___relu_1/getitem_5"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 56
          }
          dim {
            dim_value: 56
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_activation_ReLU_getattr_L__self___layer1___0___relu_1/relu_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 56
          }
          dim {
            dim_value: 56
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_activation_ReLU_getattr_L__self___layer1___0___relu_1/copy_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 56
          }
          dim {
            dim_value: 56
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_conv_Conv2d_getattr_L__self___layer1___0___conv2_1/copy_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 56
          }
          dim {
            dim_value: 56
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_conv_Conv2d_getattr_L__self___layer1___0___conv2_1/convolution_2"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 56
          }
          dim {
            dim_value: 56
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer1___0___bn2_1/convolution_2"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 56
          }
          dim {
            dim_value: 56
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer1___0___bn2_1/_native_batch_norm_legit_no_training_2"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 56
          }
          dim {
            dim_value: 56
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer1___0___bn2_1/_native_batch_norm_legit_no_training_2_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 0
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer1___0___bn2_1/_native_batch_norm_legit_no_training_2_2"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 0
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_activation_ReLU_getattr_L__self___layer1___0___relu_2/add"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 56
          }
          dim {
            dim_value: 56
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_activation_ReLU_getattr_L__self___layer1___0___relu_2/relu_2"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 56
          }
          dim {
            dim_value: 56
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_activation_ReLU_getattr_L__self___layer1___0___relu_2/copy_2"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 56
          }
          dim {
            dim_value: 56
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer1_0_1/getitem_3"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 56
          }
          dim {
            dim_value: 56
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer1_0_1/getattr_l__self___layer1___0___conv1_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 56
          }
          dim {
            dim_value: 56
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer1_0_1/getattr_l__self___layer1___0___bn1_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 56
          }
          dim {
            dim_value: 56
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer1_0_1/getattr_l__self___layer1___0___relu_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 56
          }
          dim {
            dim_value: 56
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer1_0_1/getattr_l__self___layer1___0___conv2_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 56
          }
          dim {
            dim_value: 56
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer1_0_1/getattr_l__self___layer1___0___bn2_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 56
          }
          dim {
            dim_value: 56
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer1_0_1/add"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 56
          }
          dim {
            dim_value: 56
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer1_0_1/getattr_l__self___layer1___0___relu_2"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 56
          }
          dim {
            dim_value: 56
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_conv_Conv2d_getattr_L__self___layer1___1___conv1_1/copy_2"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 56
          }
          dim {
            dim_value: 56
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_conv_Conv2d_getattr_L__self___layer1___1___conv1_1/convolution_3"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 56
          }
          dim {
            dim_value: 56
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer1___1___bn1_1/convolution_3"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 56
          }
          dim {
            dim_value: 56
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer1___1___bn1_1/_native_batch_norm_legit_no_training_3"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 56
          }
          dim {
            dim_value: 56
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer1___1___bn1_1/_native_batch_norm_legit_no_training_3_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 0
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer1___1___bn1_1/_native_batch_norm_legit_no_training_3_2"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 0
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_activation_ReLU_getattr_L__self___layer1___1___relu_1/getitem_11"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 56
          }
          dim {
            dim_value: 56
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_activation_ReLU_getattr_L__self___layer1___1___relu_1/relu_3"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 56
          }
          dim {
            dim_value: 56
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_activation_ReLU_getattr_L__self___layer1___1___relu_1/copy_3"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 56
          }
          dim {
            dim_value: 56
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_conv_Conv2d_getattr_L__self___layer1___1___conv2_1/copy_3"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 56
          }
          dim {
            dim_value: 56
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_conv_Conv2d_getattr_L__self___layer1___1___conv2_1/convolution_4"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 56
          }
          dim {
            dim_value: 56
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer1___1___bn2_1/convolution_4"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 56
          }
          dim {
            dim_value: 56
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer1___1___bn2_1/_native_batch_norm_legit_no_training_4"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 56
          }
          dim {
            dim_value: 56
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer1___1___bn2_1/_native_batch_norm_legit_no_training_4_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 0
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer1___1___bn2_1/_native_batch_norm_legit_no_training_4_2"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 0
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_activation_ReLU_getattr_L__self___layer1___1___relu_2/add_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 56
          }
          dim {
            dim_value: 56
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_activation_ReLU_getattr_L__self___layer1___1___relu_2/relu_4"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 56
          }
          dim {
            dim_value: 56
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_activation_ReLU_getattr_L__self___layer1___1___relu_2/copy_4"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 56
          }
          dim {
            dim_value: 56
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer1_1_1/copy_2"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 56
          }
          dim {
            dim_value: 56
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer1_1_1/getattr_l__self___layer1___1___conv1_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 56
          }
          dim {
            dim_value: 56
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer1_1_1/getattr_l__self___layer1___1___bn1_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 56
          }
          dim {
            dim_value: 56
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer1_1_1/getattr_l__self___layer1___1___relu_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 56
          }
          dim {
            dim_value: 56
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer1_1_1/getattr_l__self___layer1___1___conv2_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 56
          }
          dim {
            dim_value: 56
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer1_1_1/getattr_l__self___layer1___1___bn2_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 56
          }
          dim {
            dim_value: 56
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer1_1_1/add_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 56
          }
          dim {
            dim_value: 56
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer1_1_1/getattr_l__self___layer1___1___relu_2"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 56
          }
          dim {
            dim_value: 56
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_container_Sequential_layer1_1/getitem_3"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 56
          }
          dim {
            dim_value: 56
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_container_Sequential_layer1_1/layer1_0_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 56
          }
          dim {
            dim_value: 56
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_container_Sequential_layer1_1/layer1_1_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 56
          }
          dim {
            dim_value: 56
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_conv_Conv2d_getattr_L__self___layer2___0___conv1_1/copy_4"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 56
          }
          dim {
            dim_value: 56
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_conv_Conv2d_getattr_L__self___layer2___0___conv1_1/convolution_5"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 28
          }
          dim {
            dim_value: 28
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer2___0___bn1_1/convolution_5"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 28
          }
          dim {
            dim_value: 28
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer2___0___bn1_1/_native_batch_norm_legit_no_training_5"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 28
          }
          dim {
            dim_value: 28
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer2___0___bn1_1/_native_batch_norm_legit_no_training_5_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 0
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer2___0___bn1_1/_native_batch_norm_legit_no_training_5_2"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 0
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_activation_ReLU_getattr_L__self___layer2___0___relu_1/getitem_17"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 28
          }
          dim {
            dim_value: 28
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_activation_ReLU_getattr_L__self___layer2___0___relu_1/relu_5"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 28
          }
          dim {
            dim_value: 28
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_activation_ReLU_getattr_L__self___layer2___0___relu_1/copy_5"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 28
          }
          dim {
            dim_value: 28
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_conv_Conv2d_getattr_L__self___layer2___0___conv2_1/copy_5"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 28
          }
          dim {
            dim_value: 28
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_conv_Conv2d_getattr_L__self___layer2___0___conv2_1/convolution_6"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 28
          }
          dim {
            dim_value: 28
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer2___0___bn2_1/convolution_6"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 28
          }
          dim {
            dim_value: 28
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer2___0___bn2_1/_native_batch_norm_legit_no_training_6"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 28
          }
          dim {
            dim_value: 28
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer2___0___bn2_1/_native_batch_norm_legit_no_training_6_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 0
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer2___0___bn2_1/_native_batch_norm_legit_no_training_6_2"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 0
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_conv_Conv2d_getattr_L__self___layer2___0___downsample_0_1/copy_4"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 56
          }
          dim {
            dim_value: 56
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_conv_Conv2d_getattr_L__self___layer2___0___downsample_0_1/convolution_7"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 28
          }
          dim {
            dim_value: 28
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer2___0___downsample_1_1/convolution_7"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 28
          }
          dim {
            dim_value: 28
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer2___0___downsample_1_1/_native_batch_norm_legit_no_training_7"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 28
          }
          dim {
            dim_value: 28
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer2___0___downsample_1_1/_native_batch_norm_legit_no_training_7_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 0
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer2___0___downsample_1_1/_native_batch_norm_legit_no_training_7_2"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 0
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_container_Sequential_getattr_L__self___layer2___0___downsample_1/copy_4"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 56
          }
          dim {
            dim_value: 56
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_container_Sequential_getattr_L__self___layer2___0___downsample_1/getattr_l__self___layer2___0___downsample_0_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 28
          }
          dim {
            dim_value: 28
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_container_Sequential_getattr_L__self___layer2___0___downsample_1/getattr_l__self___layer2___0___downsample_1_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 28
          }
          dim {
            dim_value: 28
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_activation_ReLU_getattr_L__self___layer2___0___relu_2/add_2"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 28
          }
          dim {
            dim_value: 28
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_activation_ReLU_getattr_L__self___layer2___0___relu_2/relu_6"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 28
          }
          dim {
            dim_value: 28
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_activation_ReLU_getattr_L__self___layer2___0___relu_2/copy_6"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 28
          }
          dim {
            dim_value: 28
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer2_0_1/copy_4"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 56
          }
          dim {
            dim_value: 56
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer2_0_1/getattr_l__self___layer2___0___conv1_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 28
          }
          dim {
            dim_value: 28
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer2_0_1/getattr_l__self___layer2___0___bn1_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 28
          }
          dim {
            dim_value: 28
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer2_0_1/getattr_l__self___layer2___0___relu_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 28
          }
          dim {
            dim_value: 28
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer2_0_1/getattr_l__self___layer2___0___conv2_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 28
          }
          dim {
            dim_value: 28
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer2_0_1/getattr_l__self___layer2___0___bn2_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 28
          }
          dim {
            dim_value: 28
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer2_0_1/getattr_l__self___layer2___0___downsample_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 28
          }
          dim {
            dim_value: 28
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer2_0_1/add_2"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 28
          }
          dim {
            dim_value: 28
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer2_0_1/getattr_l__self___layer2___0___relu_2"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 28
          }
          dim {
            dim_value: 28
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_conv_Conv2d_getattr_L__self___layer2___1___conv1_1/copy_6"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 28
          }
          dim {
            dim_value: 28
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_conv_Conv2d_getattr_L__self___layer2___1___conv1_1/convolution_8"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 28
          }
          dim {
            dim_value: 28
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer2___1___bn1_1/convolution_8"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 28
          }
          dim {
            dim_value: 28
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer2___1___bn1_1/_native_batch_norm_legit_no_training_8"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 28
          }
          dim {
            dim_value: 28
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer2___1___bn1_1/_native_batch_norm_legit_no_training_8_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 0
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer2___1___bn1_1/_native_batch_norm_legit_no_training_8_2"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 0
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_activation_ReLU_getattr_L__self___layer2___1___relu_1/getitem_26"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 28
          }
          dim {
            dim_value: 28
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_activation_ReLU_getattr_L__self___layer2___1___relu_1/relu_7"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 28
          }
          dim {
            dim_value: 28
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_activation_ReLU_getattr_L__self___layer2___1___relu_1/copy_7"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 28
          }
          dim {
            dim_value: 28
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_conv_Conv2d_getattr_L__self___layer2___1___conv2_1/copy_7"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 28
          }
          dim {
            dim_value: 28
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_conv_Conv2d_getattr_L__self___layer2___1___conv2_1/convolution_9"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 28
          }
          dim {
            dim_value: 28
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer2___1___bn2_1/convolution_9"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 28
          }
          dim {
            dim_value: 28
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer2___1___bn2_1/_native_batch_norm_legit_no_training_9"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 28
          }
          dim {
            dim_value: 28
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer2___1___bn2_1/_native_batch_norm_legit_no_training_9_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 0
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer2___1___bn2_1/_native_batch_norm_legit_no_training_9_2"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 0
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_activation_ReLU_getattr_L__self___layer2___1___relu_2/add_3"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 28
          }
          dim {
            dim_value: 28
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_activation_ReLU_getattr_L__self___layer2___1___relu_2/relu_8"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 28
          }
          dim {
            dim_value: 28
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_activation_ReLU_getattr_L__self___layer2___1___relu_2/copy_8"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 28
          }
          dim {
            dim_value: 28
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer2_1_1/copy_6"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 28
          }
          dim {
            dim_value: 28
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer2_1_1/getattr_l__self___layer2___1___conv1_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 28
          }
          dim {
            dim_value: 28
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer2_1_1/getattr_l__self___layer2___1___bn1_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 28
          }
          dim {
            dim_value: 28
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer2_1_1/getattr_l__self___layer2___1___relu_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 28
          }
          dim {
            dim_value: 28
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer2_1_1/getattr_l__self___layer2___1___conv2_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 28
          }
          dim {
            dim_value: 28
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer2_1_1/getattr_l__self___layer2___1___bn2_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 28
          }
          dim {
            dim_value: 28
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer2_1_1/add_3"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 28
          }
          dim {
            dim_value: 28
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer2_1_1/getattr_l__self___layer2___1___relu_2"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 28
          }
          dim {
            dim_value: 28
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_container_Sequential_layer2_1/copy_4"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 64
          }
          dim {
            dim_value: 56
          }
          dim {
            dim_value: 56
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_container_Sequential_layer2_1/layer2_0_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 28
          }
          dim {
            dim_value: 28
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_container_Sequential_layer2_1/layer2_1_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 28
          }
          dim {
            dim_value: 28
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_conv_Conv2d_getattr_L__self___layer3___0___conv1_1/copy_8"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 28
          }
          dim {
            dim_value: 28
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_conv_Conv2d_getattr_L__self___layer3___0___conv1_1/convolution_10"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 14
          }
          dim {
            dim_value: 14
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer3___0___bn1_1/convolution_10"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 14
          }
          dim {
            dim_value: 14
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer3___0___bn1_1/_native_batch_norm_legit_no_training_10"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 14
          }
          dim {
            dim_value: 14
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer3___0___bn1_1/_native_batch_norm_legit_no_training_10_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 0
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer3___0___bn1_1/_native_batch_norm_legit_no_training_10_2"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 0
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_activation_ReLU_getattr_L__self___layer3___0___relu_1/getitem_32"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 14
          }
          dim {
            dim_value: 14
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_activation_ReLU_getattr_L__self___layer3___0___relu_1/relu_9"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 14
          }
          dim {
            dim_value: 14
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_activation_ReLU_getattr_L__self___layer3___0___relu_1/copy_9"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 14
          }
          dim {
            dim_value: 14
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_conv_Conv2d_getattr_L__self___layer3___0___conv2_1/copy_9"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 14
          }
          dim {
            dim_value: 14
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_conv_Conv2d_getattr_L__self___layer3___0___conv2_1/convolution_11"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 14
          }
          dim {
            dim_value: 14
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer3___0___bn2_1/convolution_11"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 14
          }
          dim {
            dim_value: 14
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer3___0___bn2_1/_native_batch_norm_legit_no_training_11"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 14
          }
          dim {
            dim_value: 14
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer3___0___bn2_1/_native_batch_norm_legit_no_training_11_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 0
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer3___0___bn2_1/_native_batch_norm_legit_no_training_11_2"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 0
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_conv_Conv2d_getattr_L__self___layer3___0___downsample_0_1/copy_8"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 28
          }
          dim {
            dim_value: 28
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_conv_Conv2d_getattr_L__self___layer3___0___downsample_0_1/convolution_12"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 14
          }
          dim {
            dim_value: 14
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer3___0___downsample_1_1/convolution_12"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 14
          }
          dim {
            dim_value: 14
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer3___0___downsample_1_1/_native_batch_norm_legit_no_training_12"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 14
          }
          dim {
            dim_value: 14
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer3___0___downsample_1_1/_native_batch_norm_legit_no_training_12_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 0
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer3___0___downsample_1_1/_native_batch_norm_legit_no_training_12_2"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 0
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_container_Sequential_getattr_L__self___layer3___0___downsample_1/copy_8"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 28
          }
          dim {
            dim_value: 28
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_container_Sequential_getattr_L__self___layer3___0___downsample_1/getattr_l__self___layer3___0___downsample_0_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 14
          }
          dim {
            dim_value: 14
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_container_Sequential_getattr_L__self___layer3___0___downsample_1/getattr_l__self___layer3___0___downsample_1_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 14
          }
          dim {
            dim_value: 14
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_activation_ReLU_getattr_L__self___layer3___0___relu_2/add_4"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 14
          }
          dim {
            dim_value: 14
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_activation_ReLU_getattr_L__self___layer3___0___relu_2/relu_10"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 14
          }
          dim {
            dim_value: 14
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_activation_ReLU_getattr_L__self___layer3___0___relu_2/copy_10"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 14
          }
          dim {
            dim_value: 14
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer3_0_1/copy_8"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 28
          }
          dim {
            dim_value: 28
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer3_0_1/getattr_l__self___layer3___0___conv1_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 14
          }
          dim {
            dim_value: 14
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer3_0_1/getattr_l__self___layer3___0___bn1_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 14
          }
          dim {
            dim_value: 14
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer3_0_1/getattr_l__self___layer3___0___relu_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 14
          }
          dim {
            dim_value: 14
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer3_0_1/getattr_l__self___layer3___0___conv2_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 14
          }
          dim {
            dim_value: 14
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer3_0_1/getattr_l__self___layer3___0___bn2_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 14
          }
          dim {
            dim_value: 14
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer3_0_1/getattr_l__self___layer3___0___downsample_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 14
          }
          dim {
            dim_value: 14
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer3_0_1/add_4"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 14
          }
          dim {
            dim_value: 14
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer3_0_1/getattr_l__self___layer3___0___relu_2"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 14
          }
          dim {
            dim_value: 14
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_conv_Conv2d_getattr_L__self___layer3___1___conv1_1/copy_10"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 14
          }
          dim {
            dim_value: 14
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_conv_Conv2d_getattr_L__self___layer3___1___conv1_1/convolution_13"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 14
          }
          dim {
            dim_value: 14
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer3___1___bn1_1/convolution_13"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 14
          }
          dim {
            dim_value: 14
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer3___1___bn1_1/_native_batch_norm_legit_no_training_13"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 14
          }
          dim {
            dim_value: 14
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer3___1___bn1_1/_native_batch_norm_legit_no_training_13_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 0
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer3___1___bn1_1/_native_batch_norm_legit_no_training_13_2"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 0
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_activation_ReLU_getattr_L__self___layer3___1___relu_1/getitem_41"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 14
          }
          dim {
            dim_value: 14
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_activation_ReLU_getattr_L__self___layer3___1___relu_1/relu_11"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 14
          }
          dim {
            dim_value: 14
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_activation_ReLU_getattr_L__self___layer3___1___relu_1/copy_11"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 14
          }
          dim {
            dim_value: 14
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_conv_Conv2d_getattr_L__self___layer3___1___conv2_1/copy_11"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 14
          }
          dim {
            dim_value: 14
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_conv_Conv2d_getattr_L__self___layer3___1___conv2_1/convolution_14"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 14
          }
          dim {
            dim_value: 14
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer3___1___bn2_1/convolution_14"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 14
          }
          dim {
            dim_value: 14
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer3___1___bn2_1/_native_batch_norm_legit_no_training_14"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 14
          }
          dim {
            dim_value: 14
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer3___1___bn2_1/_native_batch_norm_legit_no_training_14_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 0
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer3___1___bn2_1/_native_batch_norm_legit_no_training_14_2"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 0
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_activation_ReLU_getattr_L__self___layer3___1___relu_2/add_5"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 14
          }
          dim {
            dim_value: 14
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_activation_ReLU_getattr_L__self___layer3___1___relu_2/relu_12"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 14
          }
          dim {
            dim_value: 14
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_activation_ReLU_getattr_L__self___layer3___1___relu_2/copy_12"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 14
          }
          dim {
            dim_value: 14
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer3_1_1/copy_10"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 14
          }
          dim {
            dim_value: 14
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer3_1_1/getattr_l__self___layer3___1___conv1_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 14
          }
          dim {
            dim_value: 14
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer3_1_1/getattr_l__self___layer3___1___bn1_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 14
          }
          dim {
            dim_value: 14
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer3_1_1/getattr_l__self___layer3___1___relu_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 14
          }
          dim {
            dim_value: 14
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer3_1_1/getattr_l__self___layer3___1___conv2_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 14
          }
          dim {
            dim_value: 14
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer3_1_1/getattr_l__self___layer3___1___bn2_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 14
          }
          dim {
            dim_value: 14
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer3_1_1/add_5"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 14
          }
          dim {
            dim_value: 14
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer3_1_1/getattr_l__self___layer3___1___relu_2"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 14
          }
          dim {
            dim_value: 14
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_container_Sequential_layer3_1/copy_8"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 128
          }
          dim {
            dim_value: 28
          }
          dim {
            dim_value: 28
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_container_Sequential_layer3_1/layer3_0_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 14
          }
          dim {
            dim_value: 14
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_container_Sequential_layer3_1/layer3_1_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 14
          }
          dim {
            dim_value: 14
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_conv_Conv2d_getattr_L__self___layer4___0___conv1_1/copy_12"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 14
          }
          dim {
            dim_value: 14
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_conv_Conv2d_getattr_L__self___layer4___0___conv1_1/convolution_15"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 7
          }
          dim {
            dim_value: 7
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer4___0___bn1_1/convolution_15"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 7
          }
          dim {
            dim_value: 7
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer4___0___bn1_1/_native_batch_norm_legit_no_training_15"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 7
          }
          dim {
            dim_value: 7
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer4___0___bn1_1/_native_batch_norm_legit_no_training_15_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 0
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer4___0___bn1_1/_native_batch_norm_legit_no_training_15_2"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 0
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_activation_ReLU_getattr_L__self___layer4___0___relu_1/getitem_47"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 7
          }
          dim {
            dim_value: 7
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_activation_ReLU_getattr_L__self___layer4___0___relu_1/relu_13"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 7
          }
          dim {
            dim_value: 7
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_activation_ReLU_getattr_L__self___layer4___0___relu_1/copy_13"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 7
          }
          dim {
            dim_value: 7
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_conv_Conv2d_getattr_L__self___layer4___0___conv2_1/copy_13"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 7
          }
          dim {
            dim_value: 7
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_conv_Conv2d_getattr_L__self___layer4___0___conv2_1/convolution_16"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 7
          }
          dim {
            dim_value: 7
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer4___0___bn2_1/convolution_16"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 7
          }
          dim {
            dim_value: 7
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer4___0___bn2_1/_native_batch_norm_legit_no_training_16"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 7
          }
          dim {
            dim_value: 7
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer4___0___bn2_1/_native_batch_norm_legit_no_training_16_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 0
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer4___0___bn2_1/_native_batch_norm_legit_no_training_16_2"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 0
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_conv_Conv2d_getattr_L__self___layer4___0___downsample_0_1/copy_12"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 14
          }
          dim {
            dim_value: 14
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_conv_Conv2d_getattr_L__self___layer4___0___downsample_0_1/convolution_17"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 7
          }
          dim {
            dim_value: 7
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer4___0___downsample_1_1/convolution_17"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 7
          }
          dim {
            dim_value: 7
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer4___0___downsample_1_1/_native_batch_norm_legit_no_training_17"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 7
          }
          dim {
            dim_value: 7
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer4___0___downsample_1_1/_native_batch_norm_legit_no_training_17_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 0
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer4___0___downsample_1_1/_native_batch_norm_legit_no_training_17_2"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 0
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_container_Sequential_getattr_L__self___layer4___0___downsample_1/copy_12"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 14
          }
          dim {
            dim_value: 14
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_container_Sequential_getattr_L__self___layer4___0___downsample_1/getattr_l__self___layer4___0___downsample_0_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 7
          }
          dim {
            dim_value: 7
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_container_Sequential_getattr_L__self___layer4___0___downsample_1/getattr_l__self___layer4___0___downsample_1_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 7
          }
          dim {
            dim_value: 7
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_activation_ReLU_getattr_L__self___layer4___0___relu_2/add_6"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 7
          }
          dim {
            dim_value: 7
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_activation_ReLU_getattr_L__self___layer4___0___relu_2/relu_14"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 7
          }
          dim {
            dim_value: 7
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_activation_ReLU_getattr_L__self___layer4___0___relu_2/copy_14"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 7
          }
          dim {
            dim_value: 7
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer4_0_1/copy_12"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 14
          }
          dim {
            dim_value: 14
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer4_0_1/getattr_l__self___layer4___0___conv1_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 7
          }
          dim {
            dim_value: 7
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer4_0_1/getattr_l__self___layer4___0___bn1_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 7
          }
          dim {
            dim_value: 7
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer4_0_1/getattr_l__self___layer4___0___relu_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 7
          }
          dim {
            dim_value: 7
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer4_0_1/getattr_l__self___layer4___0___conv2_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 7
          }
          dim {
            dim_value: 7
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer4_0_1/getattr_l__self___layer4___0___bn2_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 7
          }
          dim {
            dim_value: 7
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer4_0_1/getattr_l__self___layer4___0___downsample_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 7
          }
          dim {
            dim_value: 7
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer4_0_1/add_6"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 7
          }
          dim {
            dim_value: 7
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer4_0_1/getattr_l__self___layer4___0___relu_2"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 7
          }
          dim {
            dim_value: 7
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_conv_Conv2d_getattr_L__self___layer4___1___conv1_1/copy_14"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 7
          }
          dim {
            dim_value: 7
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_conv_Conv2d_getattr_L__self___layer4___1___conv1_1/convolution_18"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 7
          }
          dim {
            dim_value: 7
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer4___1___bn1_1/convolution_18"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 7
          }
          dim {
            dim_value: 7
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer4___1___bn1_1/_native_batch_norm_legit_no_training_18"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 7
          }
          dim {
            dim_value: 7
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer4___1___bn1_1/_native_batch_norm_legit_no_training_18_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 0
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer4___1___bn1_1/_native_batch_norm_legit_no_training_18_2"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 0
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_activation_ReLU_getattr_L__self___layer4___1___relu_1/getitem_56"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 7
          }
          dim {
            dim_value: 7
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_activation_ReLU_getattr_L__self___layer4___1___relu_1/relu_15"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 7
          }
          dim {
            dim_value: 7
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_activation_ReLU_getattr_L__self___layer4___1___relu_1/copy_15"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 7
          }
          dim {
            dim_value: 7
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_conv_Conv2d_getattr_L__self___layer4___1___conv2_1/copy_15"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 7
          }
          dim {
            dim_value: 7
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_conv_Conv2d_getattr_L__self___layer4___1___conv2_1/convolution_19"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 7
          }
          dim {
            dim_value: 7
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer4___1___bn2_1/convolution_19"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 7
          }
          dim {
            dim_value: 7
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer4___1___bn2_1/_native_batch_norm_legit_no_training_19"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 7
          }
          dim {
            dim_value: 7
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer4___1___bn2_1/_native_batch_norm_legit_no_training_19_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 0
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer4___1___bn2_1/_native_batch_norm_legit_no_training_19_2"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 0
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_activation_ReLU_getattr_L__self___layer4___1___relu_2/add_7"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 7
          }
          dim {
            dim_value: 7
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_activation_ReLU_getattr_L__self___layer4___1___relu_2/relu_16"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 7
          }
          dim {
            dim_value: 7
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_activation_ReLU_getattr_L__self___layer4___1___relu_2/copy_16"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 7
          }
          dim {
            dim_value: 7
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer4_1_1/copy_14"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 7
          }
          dim {
            dim_value: 7
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer4_1_1/getattr_l__self___layer4___1___conv1_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 7
          }
          dim {
            dim_value: 7
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer4_1_1/getattr_l__self___layer4___1___bn1_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 7
          }
          dim {
            dim_value: 7
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer4_1_1/getattr_l__self___layer4___1___relu_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 7
          }
          dim {
            dim_value: 7
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer4_1_1/getattr_l__self___layer4___1___conv2_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 7
          }
          dim {
            dim_value: 7
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer4_1_1/getattr_l__self___layer4___1___bn2_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 7
          }
          dim {
            dim_value: 7
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer4_1_1/add_7"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 7
          }
          dim {
            dim_value: 7
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torchvision.0.16.0a0+0370134::torchvision_models_resnet_BasicBlock_layer4_1_1/getattr_l__self___layer4___1___relu_2"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 7
          }
          dim {
            dim_value: 7
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_container_Sequential_layer4_1/copy_12"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 256
          }
          dim {
            dim_value: 14
          }
          dim {
            dim_value: 14
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_container_Sequential_layer4_1/layer4_0_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 7
          }
          dim {
            dim_value: 7
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_container_Sequential_layer4_1/layer4_1_1"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 7
          }
          dim {
            dim_value: 7
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_pooling_AdaptiveAvgPool2d_avgpool_1/copy_16"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 7
          }
          dim {
            dim_value: 7
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_pooling_AdaptiveAvgPool2d_avgpool_1/mean"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 1
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_linear_Linear_fc_1/view"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 512
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_linear_Linear_fc_1/t"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 512
          }
          dim {
            dim_value: 1000
          }
        }
      }
    }
  }
  value_info {
    name: "pkg.torch.2.2.0a0+git4ab5507::torch_nn_modules_linear_Linear_fc_1/addmm"
    type {
      tensor_type {
        elem_type: 1
        shape {
          dim {
            dim_value: 1
          }
          dim {
            dim_value: 1000
          }
        }
      }
    }
  }
}
opset_import {
  domain: "pkg.onnxscript.torch_lib"
  version: 1
}
opset_import {
  domain: "pkg.torch.2.2.0a0+git4ab5507"
  version: 1
}
opset_import {
  domain: "pkg.torchvision.0.16.0a0+0370134"
  version: 1
}
opset_import {
  domain: ""
  version: 18
}
opset_import {
  domain: "pkg.onnxscript.torch_lib.common"
  version: 1
}
functions {
  name: "_aten_convolution_onnx"
  input: "input"
  input: "weight"
  input: "bias"
  input: "transposed"
  output: "result_12"
  attribute: "strides"
  attribute: "pads"
  attribute: "dilations"
  node {
    input: "weight"
    output: "tmp"
    name: "n0"
    op_type: "Shape"
  }
  node {
    input: "tmp"
    output: "weight_size"
    name: "n1"
    op_type: "Size"
  }
  node {
    input: "input"
    output: "tmp_0"
    name: "n2"
    op_type: "Shape"
  }
  node {
    input: "tmp_0"
    output: "tmp_1"
    name: "n3"
    op_type: "Size"
  }
  node {
    input: "tmp_1"
    input: "weight_size"
    output: "tmp_2"
    name: "n4"
    op_type: "Equal"
  }
  node {
    input: "tmp_2"
    output: "no_batch"
    name: "n5"
    op_type: "Not"
  }
  node {
    input: "no_batch"
    output: "input_6"
    name: "n6"
    op_type: "If"
    attribute {
      name: "then_branch"
      g {
        node {
          output: "tmp_3"
          name: "n0"
          op_type: "Constant"
          attribute {
            name: "value_ints"
            ints: 0
            type: INTS
          }
        }
        node {
          input: "input"
          input: "tmp_3"
          output: "input_4"
          name: "n1"
          op_type: "Unsqueeze"
        }
        name: "thenGraph_23"
        output {
          name: "input_4"
        }
      }
      type: GRAPH
    }
    attribute {
      name: "else_branch"
      g {
        node {
          input: "input"
          output: "input_5"
          name: "n0"
          op_type: "Identity"
        }
        name: "elseGraph_23"
        output {
          name: "input_5"
        }
      }
      type: GRAPH
    }
  }
  node {
    input: "transposed"
    output: "result_8"
    name: "n7"
    op_type: "If"
    attribute {
      name: "then_branch"
      g {
        node {
          input: "input_6"
          input: "weight"
          input: "bias"
          output: "result"
          name: "n0"
          op_type: "ConvTranspose"
          attribute {
            name: "dilations"
            type: INTS
            ref_attr_name: "dilations"
          }
          attribute {
            name: "group"
            type: INT
            ref_attr_name: "groups"
          }
          attribute {
            name: "output_padding"
            type: INTS
            ref_attr_name: "output_padding"
          }
          attribute {
            name: "pads"
            type: INTS
            ref_attr_name: "pads"
          }
          attribute {
            name: "strides"
            type: INTS
            ref_attr_name: "strides"
          }
        }
        name: "thenGraph_26"
        output {
          name: "result"
        }
      }
      type: GRAPH
    }
    attribute {
      name: "else_branch"
      g {
        node {
          input: "input_6"
          input: "weight"
          input: "bias"
          output: "result_7"
          name: "n0"
          op_type: "Conv"
          attribute {
            name: "dilations"
            type: INTS
            ref_attr_name: "dilations"
          }
          attribute {
            name: "group"
            type: INT
            ref_attr_name: "groups"
          }
          attribute {
            name: "pads"
            type: INTS
            ref_attr_name: "pads"
          }
          attribute {
            name: "strides"
            type: INTS
            ref_attr_name: "strides"
          }
        }
        name: "elseGraph_26"
        output {
          name: "result_7"
        }
      }
      type: GRAPH
    }
  }
  node {
    input: "no_batch"
    output: "result_12"
    name: "n8"
    op_type: "If"
    attribute {
      name: "then_branch"
      g {
        node {
          output: "tmp_9"
          name: "n0"
          op_type: "Constant"
          attribute {
            name: "value_ints"
            ints: 0
            type: INTS
          }
        }
        node {
          input: "result_8"
          input: "tmp_9"
          output: "result_10"
          name: "n1"
          op_type: "Squeeze"
        }
        name: "thenGraph_48"
        output {
          name: "result_10"
        }
      }
      type: GRAPH
    }
    attribute {
      name: "else_branch"
      g {
        node {
          input: "result_8"
          output: "result_11"
          name: "n0"
          op_type: "Identity"
        }
        name: "elseGraph_48"
        output {
          name: "result_11"
        }
      }
      type: GRAPH
    }
  }
  doc_string: "ConvXd with attributes pre-computed to fit the ONNX spec."
  opset_import {
    domain: ""
    version: 18
  }
  domain: "pkg.onnxscript.torch_lib"
  attribute_proto {
    name: "output_padding"
    ints: 0
    type: INTS
  }
  attribute_proto {
    name: "groups"
    i: 1
    type: INT
  }
}
functions {
  name: "torch_nn_modules_conv_Conv2d_conv1_1"
  input: "l_x_"
  input: "conv1.weight"
  output: "convolution"
  node {
    input: "conv1.weight"
    output: "_val_2"
    name: "Shape_2"
    op_type: "Shape"
    attribute {
      name: "end"
      i: 1
      type: INT
    }
    attribute {
      name: "start"
      i: 0
      type: INT
    }
  }
  node {
    output: "_val_3"
    name: "Constant_3"
    op_type: "Constant"
    attribute {
      name: "value_ints"
      ints: 1
      type: INTS
    }
  }
  node {
    input: "_val_2"
    input: "_val_3"
    output: "_val_4"
    name: "Expand_4"
    op_type: "Expand"
  }
  node {
    output: "_val_5"
    name: "Constant_5"
    op_type: "Constant"
    attribute {
      name: "value"
      t {
        data_type: 1
        raw_data: "\000\000\000\000"
      }
      type: TENSOR
    }
  }
  node {
    input: "_val_5"
    input: "l_x_"
    output: "_val_6"
    name: "CastLike_6"
    op_type: "CastLike"
  }
  node {
    input: "_val_6"
    input: "_val_4"
    output: "_val_7"
    name: "Expand_7"
    op_type: "Expand"
  }
  node {
    output: "_val_8"
    name: "Constant_8"
    op_type: "Constant"
    attribute {
      name: "value"
      t {
        data_type: 9
        raw_data: "\000"
      }
      type: TENSOR
    }
  }
  node {
    input: "l_x_"
    input: "conv1.weight"
    input: "_val_7"
    input: "_val_8"
    output: "convolution"
    name: "_aten_convolution_onnx_9"
    op_type: "_aten_convolution_onnx"
    attribute {
      name: "dilations"
      ints: 1
      ints: 1
      type: INTS
    }
    attribute {
      name: "groups"
      i: 1
      type: INT
    }
    attribute {
      name: "output_padding"
      ints: 0
      ints: 0
      type: INTS
    }
    attribute {
      name: "pads"
      ints: 3
      ints: 3
      ints: 3
      ints: 3
      type: INTS
    }
    attribute {
      name: "strides"
      ints: 2
      ints: 2
      type: INTS
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "_aten_native_batch_norm_inference_onnx"
  input: "input"
  input: "weight"
  input: "bias"
  input: "running_mean"
  input: "running_var"
  output: "norm"
  output: "empty_mean"
  output: "empty_var"
  attribute: "training"
  attribute: "momentum"
  attribute: "eps"
  node {
    input: "input"
    input: "weight"
    input: "bias"
    input: "running_mean"
    input: "running_var"
    output: "norm"
    name: "n0"
    op_type: "BatchNormalization"
    attribute {
      name: "epsilon"
      type: FLOAT
      ref_attr_name: "eps"
    }
    attribute {
      name: "momentum"
      type: FLOAT
      ref_attr_name: "momentum"
    }
    attribute {
      name: "training_mode"
      type: INT
      ref_attr_name: "training"
    }
  }
  node {
    input: "input"
    output: "tmp"
    name: "n1"
    op_type: "Shape"
    attribute {
      name: "end"
      i: 0
      type: INT
    }
    attribute {
      name: "start"
      i: 0
      type: INT
    }
  }
  node {
    input: "tmp"
    output: "empty_mean"
    name: "n2"
    op_type: "Cast"
    attribute {
      name: "to"
      i: 1
      type: INT
    }
  }
  node {
    input: "input"
    output: "tmp_0"
    name: "n3"
    op_type: "Shape"
    attribute {
      name: "end"
      i: 0
      type: INT
    }
    attribute {
      name: "start"
      i: 0
      type: INT
    }
  }
  node {
    input: "tmp_0"
    output: "empty_var"
    name: "n4"
    op_type: "Cast"
    attribute {
      name: "to"
      i: 1
      type: INT
    }
  }
  opset_import {
    domain: ""
    version: 18
  }
  domain: "pkg.onnxscript.torch_lib"
}
functions {
  name: "torch_nn_modules_batchnorm_BatchNorm2d_bn1_1"
  input: "convolution"
  input: "bn1.weight"
  input: "bn1.bias"
  input: "bn1.running_mean"
  input: "bn1.running_var"
  output: "_native_batch_norm_legit_no_training"
  node {
    output: "_val_5"
    name: "Constant_0"
    op_type: "Constant"
    attribute {
      name: "value_ints"
      ints: 0
      ints: 2
      ints: 3
      type: INTS
    }
  }
  node {
    input: "convolution"
    input: "bn1.weight"
    input: "bn1.bias"
    input: "bn1.running_mean"
    input: "bn1.running_var"
    output: "_native_batch_norm_legit_no_training"
    output: "_native_batch_norm_legit_no_training_1"
    output: "_native_batch_norm_legit_no_training_2"
    name: "_aten_native_batch_norm_inference_onnx_1"
    op_type: "_aten_native_batch_norm_inference_onnx"
    attribute {
      name: "eps"
      f: 1e-05
      type: FLOAT
    }
    attribute {
      name: "momentum"
      f: 0.1
      type: FLOAT
    }
    attribute {
      name: "training"
      i: 0
      type: INT
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "aten_relu"
  input: "self"
  output: "return_val"
  node {
    input: "self"
    output: "return_val"
    name: "n0"
    op_type: "Relu"
  }
  doc_string: "relu(Tensor self) -> Tensor"
  opset_import {
    domain: ""
    version: 18
  }
  domain: "pkg.onnxscript.torch_lib"
}
functions {
  name: "aten_copy"
  input: "self"
  input: "src"
  output: "self_0"
  node {
    input: "src"
    output: "self_0"
    name: "n0"
    op_type: "Identity"
  }
  doc_string: "copy(Tensor self, Tensor src, bool non_blocking=False) -> Tensor"
  opset_import {
    domain: ""
    version: 18
  }
  domain: "pkg.onnxscript.torch_lib"
  attribute_proto {
    name: "non_blocking"
    i: 0
    type: INT
  }
}
functions {
  name: "torch_nn_modules_activation_ReLU_relu_1"
  input: "getitem"
  output: "copy"
  node {
    input: "getitem"
    output: "relu"
    name: "aten_relu_0"
    op_type: "aten_relu"
    domain: "pkg.onnxscript.torch_lib"
  }
  node {
    input: "getitem"
    input: "relu"
    output: "copy"
    name: "aten_copy_1"
    op_type: "aten_copy"
    attribute {
      name: "non_blocking"
      i: 0
      type: INT
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "_aten_max_pool_with_indices_onnx"
  input: "self"
  output: "pool_result_13"
  output: "indices_12"
  attribute: "kernel_size"
  attribute: "stride"
  attribute: "padding"
  attribute: "dilation"
  attribute: "ceil_mode"
  attribute: "unbatched_rank"
  attribute: "n_dims_one"
  attribute: "n_dims_zero"
  attribute: "n_dims_axes"
  node {
    input: "self"
    output: "tmp"
    name: "n0"
    op_type: "Shape"
  }
  node {
    input: "tmp"
    output: "self_rank"
    name: "n1"
    op_type: "Size"
  }
  node {
    output: "unbatched_rank"
    name: "n2"
    op_type: "Constant"
    attribute {
      name: "value_int"
      type: INT
      ref_attr_name: "unbatched_rank"
    }
  }
  node {
    input: "unbatched_rank"
    input: "self_rank"
    output: "unbatched_rank_cast"
    name: "n3"
    op_type: "CastLike"
  }
  node {
    input: "self_rank"
    input: "unbatched_rank_cast"
    output: "cond"
    name: "n4"
    op_type: "Equal"
  }
  node {
    input: "cond"
    output: "self_2"
    name: "n5"
    op_type: "If"
    attribute {
      name: "then_branch"
      g {
        node {
          output: "int64_0"
          name: "n0"
          op_type: "Constant"
          attribute {
            name: "value"
            t {
              data_type: 7
              int64_data: 0
              name: "int64_0"
            }
            type: TENSOR
          }
        }
        node {
          input: "self"
          input: "int64_0"
          output: "self_0"
          name: "n1"
          op_type: "Unsqueeze"
        }
        name: "thenGraph_15"
        output {
          name: "self_0"
        }
      }
      type: GRAPH
    }
    attribute {
      name: "else_branch"
      g {
        node {
          input: "self"
          output: "self_1"
          name: "n0"
          op_type: "Identity"
        }
        name: "elseGraph_15"
        output {
          name: "self_1"
        }
      }
      type: GRAPH
    }
  }
  node {
    input: "self_2"
    output: "pool_result"
    output: "indices"
    name: "n6"
    op_type: "MaxPool"
    attribute {
      name: "ceil_mode"
      type: INT
      ref_attr_name: "ceil_mode"
    }
    attribute {
      name: "dilations"
      type: INTS
      ref_attr_name: "dilation"
    }
    attribute {
      name: "kernel_shape"
      type: INTS
      ref_attr_name: "kernel_size"
    }
    attribute {
      name: "pads"
      type: INTS
      ref_attr_name: "padding"
    }
    attribute {
      name: "strides"
      type: INTS
      ref_attr_name: "stride"
    }
  }
  node {
    input: "self_2"
    output: "_"
    output: "flatten_indices"
    name: "n7"
    op_type: "MaxPool"
    attribute {
      name: "dilations"
      type: INTS
      ref_attr_name: "dilation"
    }
    attribute {
      name: "kernel_shape"
      type: INTS
      ref_attr_name: "n_dims_one"
    }
    attribute {
      name: "strides"
      type: INTS
      ref_attr_name: "n_dims_one"
    }
  }
  node {
    output: "ends"
    name: "n8"
    op_type: "Constant"
    attribute {
      name: "value_ints"
      type: INTS
      ref_attr_name: "n_dims_one"
    }
  }
  node {
    output: "starts"
    name: "n9"
    op_type: "Constant"
    attribute {
      name: "value_ints"
      type: INTS
      ref_attr_name: "n_dims_zero"
    }
  }
  node {
    output: "axes"
    name: "n10"
    op_type: "Constant"
    attribute {
      name: "value_ints"
      type: INTS
      ref_attr_name: "n_dims_axes"
    }
  }
  node {
    input: "flatten_indices"
    input: "starts"
    input: "ends"
    input: "axes"
    output: "delta"
    name: "n11"
    op_type: "Slice"
  }
  node {
    input: "indices"
    input: "delta"
    output: "indices_3"
    name: "n12"
    op_type: "Sub"
  }
  node {
    output: "unbatched_rank_4"
    name: "n13"
    op_type: "Constant"
    attribute {
      name: "value_int"
      type: INT
      ref_attr_name: "unbatched_rank"
    }
  }
  node {
    input: "unbatched_rank_4"
    input: "self_rank"
    output: "unbatched_rank_4_cast"
    name: "n14"
    op_type: "CastLike"
  }
  node {
    input: "self_rank"
    input: "unbatched_rank_4_cast"
    output: "cond_5"
    name: "n15"
    op_type: "Equal"
  }
  node {
    input: "cond_5"
    output: "indices_12"
    output: "pool_result_13"
    name: "n16"
    op_type: "If"
    attribute {
      name: "then_branch"
      g {
        node {
          output: "tmp_6"
          name: "n0"
          op_type: "Constant"
          attribute {
            name: "value_ints"
            ints: 0
            type: INTS
          }
        }
        node {
          input: "pool_result"
          input: "tmp_6"
          output: "pool_result_7"
          name: "n1"
          op_type: "Squeeze"
        }
        node {
          output: "tmp_8"
          name: "n2"
          op_type: "Constant"
          attribute {
            name: "value_ints"
            ints: 0
            type: INTS
          }
        }
        node {
          input: "indices_3"
          input: "tmp_8"
          output: "indices_9"
          name: "n3"
          op_type: "Squeeze"
        }
        name: "thenGraph_70"
        output {
          name: "indices_9"
        }
        output {
          name: "pool_result_7"
        }
      }
      type: GRAPH
    }
    attribute {
      name: "else_branch"
      g {
        node {
          input: "indices_3"
          output: "indices_10"
          name: "n0"
          op_type: "Identity"
        }
        node {
          input: "pool_result"
          output: "pool_result_11"
          name: "n1"
          op_type: "Identity"
        }
        name: "elseGraph_70"
        output {
          name: "indices_10"
        }
        output {
          name: "pool_result_11"
        }
      }
      type: GRAPH
    }
  }
  opset_import {
    domain: ""
    version: 18
  }
  domain: "pkg.onnxscript.torch_lib"
}
functions {
  name: "torch_nn_modules_pooling_MaxPool2d_maxpool_1"
  input: "copy"
  output: "max_pool2d_with_indices"
  node {
    input: "copy"
    output: "max_pool2d_with_indices"
    output: "max_pool2d_with_indices_1"
    name: "_aten_max_pool_with_indices_onnx_0"
    op_type: "_aten_max_pool_with_indices_onnx"
    attribute {
      name: "ceil_mode"
      i: 0
      type: INT
    }
    attribute {
      name: "dilation"
      ints: 1
      ints: 1
      type: INTS
    }
    attribute {
      name: "kernel_size"
      ints: 3
      ints: 3
      type: INTS
    }
    attribute {
      name: "n_dims_axes"
      ints: 2
      ints: 3
      type: INTS
    }
    attribute {
      name: "n_dims_one"
      ints: 1
      ints: 1
      type: INTS
    }
    attribute {
      name: "n_dims_zero"
      ints: 0
      ints: 0
      type: INTS
    }
    attribute {
      name: "padding"
      ints: 1
      ints: 1
      ints: 1
      ints: 1
      type: INTS
    }
    attribute {
      name: "stride"
      ints: 2
      ints: 2
      type: INTS
    }
    attribute {
      name: "unbatched_rank"
      i: 3
      type: INT
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torch_nn_modules_conv_Conv2d_getattr_L__self___layer1___0___conv1_1"
  input: "getitem_3"
  input: "layer1.0.conv1.weight"
  output: "convolution_1"
  node {
    input: "layer1.0.conv1.weight"
    output: "_val_2"
    name: "Shape_2"
    op_type: "Shape"
    attribute {
      name: "end"
      i: 1
      type: INT
    }
    attribute {
      name: "start"
      i: 0
      type: INT
    }
  }
  node {
    output: "_val_3"
    name: "Constant_3"
    op_type: "Constant"
    attribute {
      name: "value_ints"
      ints: 1
      type: INTS
    }
  }
  node {
    input: "_val_2"
    input: "_val_3"
    output: "_val_4"
    name: "Expand_4"
    op_type: "Expand"
  }
  node {
    output: "_val_5"
    name: "Constant_5"
    op_type: "Constant"
    attribute {
      name: "value"
      t {
        data_type: 1
        raw_data: "\000\000\000\000"
      }
      type: TENSOR
    }
  }
  node {
    input: "_val_5"
    input: "getitem_3"
    output: "_val_6"
    name: "CastLike_6"
    op_type: "CastLike"
  }
  node {
    input: "_val_6"
    input: "_val_4"
    output: "_val_7"
    name: "Expand_7"
    op_type: "Expand"
  }
  node {
    output: "_val_8"
    name: "Constant_8"
    op_type: "Constant"
    attribute {
      name: "value"
      t {
        data_type: 9
        raw_data: "\000"
      }
      type: TENSOR
    }
  }
  node {
    input: "getitem_3"
    input: "layer1.0.conv1.weight"
    input: "_val_7"
    input: "_val_8"
    output: "convolution_1"
    name: "_aten_convolution_onnx_9"
    op_type: "_aten_convolution_onnx"
    attribute {
      name: "dilations"
      ints: 1
      ints: 1
      type: INTS
    }
    attribute {
      name: "groups"
      i: 1
      type: INT
    }
    attribute {
      name: "output_padding"
      ints: 0
      ints: 0
      type: INTS
    }
    attribute {
      name: "pads"
      ints: 1
      ints: 1
      ints: 1
      ints: 1
      type: INTS
    }
    attribute {
      name: "strides"
      ints: 1
      ints: 1
      type: INTS
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer1___0___bn1_1"
  input: "convolution_1"
  input: "layer1.0.bn1.weight"
  input: "layer1.0.bn1.bias"
  input: "layer1.0.bn1.running_mean"
  input: "layer1.0.bn1.running_var"
  output: "_native_batch_norm_legit_no_training_1"
  node {
    output: "_val_5"
    name: "Constant_0"
    op_type: "Constant"
    attribute {
      name: "value_ints"
      ints: 0
      ints: 2
      ints: 3
      type: INTS
    }
  }
  node {
    input: "convolution_1"
    input: "layer1.0.bn1.weight"
    input: "layer1.0.bn1.bias"
    input: "layer1.0.bn1.running_mean"
    input: "layer1.0.bn1.running_var"
    output: "_native_batch_norm_legit_no_training_1"
    output: "_native_batch_norm_legit_no_training_1_1"
    output: "_native_batch_norm_legit_no_training_1_2"
    name: "_aten_native_batch_norm_inference_onnx_1"
    op_type: "_aten_native_batch_norm_inference_onnx"
    attribute {
      name: "eps"
      f: 1e-05
      type: FLOAT
    }
    attribute {
      name: "momentum"
      f: 0.1
      type: FLOAT
    }
    attribute {
      name: "training"
      i: 0
      type: INT
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torch_nn_modules_activation_ReLU_getattr_L__self___layer1___0___relu_1"
  input: "getitem_5"
  output: "copy_1"
  node {
    input: "getitem_5"
    output: "relu_1"
    name: "aten_relu_0"
    op_type: "aten_relu"
    domain: "pkg.onnxscript.torch_lib"
  }
  node {
    input: "getitem_5"
    input: "relu_1"
    output: "copy_1"
    name: "aten_copy_1"
    op_type: "aten_copy"
    attribute {
      name: "non_blocking"
      i: 0
      type: INT
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torch_nn_modules_conv_Conv2d_getattr_L__self___layer1___0___conv2_1"
  input: "copy_1"
  input: "layer1.0.conv2.weight"
  output: "convolution_2"
  node {
    input: "layer1.0.conv2.weight"
    output: "_val_2"
    name: "Shape_2"
    op_type: "Shape"
    attribute {
      name: "end"
      i: 1
      type: INT
    }
    attribute {
      name: "start"
      i: 0
      type: INT
    }
  }
  node {
    output: "_val_3"
    name: "Constant_3"
    op_type: "Constant"
    attribute {
      name: "value_ints"
      ints: 1
      type: INTS
    }
  }
  node {
    input: "_val_2"
    input: "_val_3"
    output: "_val_4"
    name: "Expand_4"
    op_type: "Expand"
  }
  node {
    output: "_val_5"
    name: "Constant_5"
    op_type: "Constant"
    attribute {
      name: "value"
      t {
        data_type: 1
        raw_data: "\000\000\000\000"
      }
      type: TENSOR
    }
  }
  node {
    input: "_val_5"
    input: "copy_1"
    output: "_val_6"
    name: "CastLike_6"
    op_type: "CastLike"
  }
  node {
    input: "_val_6"
    input: "_val_4"
    output: "_val_7"
    name: "Expand_7"
    op_type: "Expand"
  }
  node {
    output: "_val_8"
    name: "Constant_8"
    op_type: "Constant"
    attribute {
      name: "value"
      t {
        data_type: 9
        raw_data: "\000"
      }
      type: TENSOR
    }
  }
  node {
    input: "copy_1"
    input: "layer1.0.conv2.weight"
    input: "_val_7"
    input: "_val_8"
    output: "convolution_2"
    name: "_aten_convolution_onnx_9"
    op_type: "_aten_convolution_onnx"
    attribute {
      name: "dilations"
      ints: 1
      ints: 1
      type: INTS
    }
    attribute {
      name: "groups"
      i: 1
      type: INT
    }
    attribute {
      name: "output_padding"
      ints: 0
      ints: 0
      type: INTS
    }
    attribute {
      name: "pads"
      ints: 1
      ints: 1
      ints: 1
      ints: 1
      type: INTS
    }
    attribute {
      name: "strides"
      ints: 1
      ints: 1
      type: INTS
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer1___0___bn2_1"
  input: "convolution_2"
  input: "layer1.0.bn2.weight"
  input: "layer1.0.bn2.bias"
  input: "layer1.0.bn2.running_mean"
  input: "layer1.0.bn2.running_var"
  output: "_native_batch_norm_legit_no_training_2"
  node {
    output: "_val_5"
    name: "Constant_0"
    op_type: "Constant"
    attribute {
      name: "value_ints"
      ints: 0
      ints: 2
      ints: 3
      type: INTS
    }
  }
  node {
    input: "convolution_2"
    input: "layer1.0.bn2.weight"
    input: "layer1.0.bn2.bias"
    input: "layer1.0.bn2.running_mean"
    input: "layer1.0.bn2.running_var"
    output: "_native_batch_norm_legit_no_training_2"
    output: "_native_batch_norm_legit_no_training_2_1"
    output: "_native_batch_norm_legit_no_training_2_2"
    name: "_aten_native_batch_norm_inference_onnx_1"
    op_type: "_aten_native_batch_norm_inference_onnx"
    attribute {
      name: "eps"
      f: 1e-05
      type: FLOAT
    }
    attribute {
      name: "momentum"
      f: 0.1
      type: FLOAT
    }
    attribute {
      name: "training"
      i: 0
      type: INT
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torch_nn_modules_activation_ReLU_getattr_L__self___layer1___0___relu_2"
  input: "add"
  output: "copy_2"
  node {
    input: "add"
    output: "relu_2"
    name: "aten_relu_0"
    op_type: "aten_relu"
    domain: "pkg.onnxscript.torch_lib"
  }
  node {
    input: "add"
    input: "relu_2"
    output: "copy_2"
    name: "aten_copy_1"
    op_type: "aten_copy"
    attribute {
      name: "non_blocking"
      i: 0
      type: INT
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "aten_add"
  input: "self"
  input: "other"
  output: "return_val"
  node {
    output: "alpha"
    name: "n0"
    op_type: "Constant"
    attribute {
      name: "value_float"
      type: FLOAT
      ref_attr_name: "alpha"
    }
  }
  node {
    input: "alpha"
    input: "other"
    output: "alpha_0"
    name: "n1"
    op_type: "CastLike"
  }
  node {
    input: "other"
    input: "alpha_0"
    output: "other_1"
    name: "n2"
    op_type: "Mul"
  }
  node {
    input: "self"
    input: "other_1"
    output: "return_val"
    name: "n3"
    op_type: "Add"
  }
  doc_string: "add.Tensor(Tensor self, Tensor other, *, Scalar alpha=1) -> Tensor"
  opset_import {
    domain: ""
    version: 18
  }
  domain: "pkg.onnxscript.torch_lib"
  attribute_proto {
    name: "alpha"
    f: 1.0
    type: FLOAT
  }
}
functions {
  name: "torchvision_models_resnet_BasicBlock_layer1_0_1"
  input: "getitem_3"
  input: "layer1.0.conv1.weight"
  input: "layer1.0.bn1.weight"
  input: "layer1.0.bn1.bias"
  input: "layer1.0.bn1.running_mean"
  input: "layer1.0.bn1.running_var"
  input: "layer1.0.conv2.weight"
  input: "layer1.0.bn2.weight"
  input: "layer1.0.bn2.bias"
  input: "layer1.0.bn2.running_mean"
  input: "layer1.0.bn2.running_var"
  output: "getattr_l__self___layer1___0___relu_2"
  node {
    input: "getitem_3"
    input: "layer1.0.conv1.weight"
    output: "getattr_l__self___layer1___0___conv1_1"
    name: "torch_nn_modules_conv_Conv2d_getattr_L__self___layer1___0___conv1_1_0"
    op_type: "torch_nn_modules_conv_Conv2d_getattr_L__self___layer1___0___conv1_1"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  node {
    input: "getattr_l__self___layer1___0___conv1_1"
    input: "layer1.0.bn1.weight"
    input: "layer1.0.bn1.bias"
    input: "layer1.0.bn1.running_mean"
    input: "layer1.0.bn1.running_var"
    output: "getattr_l__self___layer1___0___bn1_1"
    name: "torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer1___0___bn1_1_1"
    op_type: "torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer1___0___bn1_1"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  node {
    input: "getattr_l__self___layer1___0___bn1_1"
    output: "getattr_l__self___layer1___0___relu_1"
    name: "torch_nn_modules_activation_ReLU_getattr_L__self___layer1___0___relu_1_2"
    op_type: "torch_nn_modules_activation_ReLU_getattr_L__self___layer1___0___relu_1"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  node {
    input: "getattr_l__self___layer1___0___relu_1"
    input: "layer1.0.conv2.weight"
    output: "getattr_l__self___layer1___0___conv2_1"
    name: "torch_nn_modules_conv_Conv2d_getattr_L__self___layer1___0___conv2_1_3"
    op_type: "torch_nn_modules_conv_Conv2d_getattr_L__self___layer1___0___conv2_1"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  node {
    input: "getattr_l__self___layer1___0___conv2_1"
    input: "layer1.0.bn2.weight"
    input: "layer1.0.bn2.bias"
    input: "layer1.0.bn2.running_mean"
    input: "layer1.0.bn2.running_var"
    output: "getattr_l__self___layer1___0___bn2_1"
    name: "torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer1___0___bn2_1_4"
    op_type: "torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer1___0___bn2_1"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  node {
    input: "getattr_l__self___layer1___0___bn2_1"
    input: "getitem_3"
    output: "add"
    name: "aten_add_5"
    op_type: "aten_add"
    attribute {
      name: "alpha"
      f: 1.0
      type: FLOAT
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  node {
    input: "add"
    output: "getattr_l__self___layer1___0___relu_2"
    name: "torch_nn_modules_activation_ReLU_getattr_L__self___layer1___0___relu_2_6"
    op_type: "torch_nn_modules_activation_ReLU_getattr_L__self___layer1___0___relu_2"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  opset_import {
    domain: "pkg.torch.2.2.0a0+git4ab5507"
    version: 1
  }
  domain: "pkg.torchvision.0.16.0a0+0370134"
}
functions {
  name: "torch_nn_modules_conv_Conv2d_getattr_L__self___layer1___1___conv1_1"
  input: "copy_2"
  input: "layer1.1.conv1.weight"
  output: "convolution_3"
  node {
    input: "layer1.1.conv1.weight"
    output: "_val_2"
    name: "Shape_2"
    op_type: "Shape"
    attribute {
      name: "end"
      i: 1
      type: INT
    }
    attribute {
      name: "start"
      i: 0
      type: INT
    }
  }
  node {
    output: "_val_3"
    name: "Constant_3"
    op_type: "Constant"
    attribute {
      name: "value_ints"
      ints: 1
      type: INTS
    }
  }
  node {
    input: "_val_2"
    input: "_val_3"
    output: "_val_4"
    name: "Expand_4"
    op_type: "Expand"
  }
  node {
    output: "_val_5"
    name: "Constant_5"
    op_type: "Constant"
    attribute {
      name: "value"
      t {
        data_type: 1
        raw_data: "\000\000\000\000"
      }
      type: TENSOR
    }
  }
  node {
    input: "_val_5"
    input: "copy_2"
    output: "_val_6"
    name: "CastLike_6"
    op_type: "CastLike"
  }
  node {
    input: "_val_6"
    input: "_val_4"
    output: "_val_7"
    name: "Expand_7"
    op_type: "Expand"
  }
  node {
    output: "_val_8"
    name: "Constant_8"
    op_type: "Constant"
    attribute {
      name: "value"
      t {
        data_type: 9
        raw_data: "\000"
      }
      type: TENSOR
    }
  }
  node {
    input: "copy_2"
    input: "layer1.1.conv1.weight"
    input: "_val_7"
    input: "_val_8"
    output: "convolution_3"
    name: "_aten_convolution_onnx_9"
    op_type: "_aten_convolution_onnx"
    attribute {
      name: "dilations"
      ints: 1
      ints: 1
      type: INTS
    }
    attribute {
      name: "groups"
      i: 1
      type: INT
    }
    attribute {
      name: "output_padding"
      ints: 0
      ints: 0
      type: INTS
    }
    attribute {
      name: "pads"
      ints: 1
      ints: 1
      ints: 1
      ints: 1
      type: INTS
    }
    attribute {
      name: "strides"
      ints: 1
      ints: 1
      type: INTS
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer1___1___bn1_1"
  input: "convolution_3"
  input: "layer1.1.bn1.weight"
  input: "layer1.1.bn1.bias"
  input: "layer1.1.bn1.running_mean"
  input: "layer1.1.bn1.running_var"
  output: "_native_batch_norm_legit_no_training_3"
  node {
    output: "_val_5"
    name: "Constant_0"
    op_type: "Constant"
    attribute {
      name: "value_ints"
      ints: 0
      ints: 2
      ints: 3
      type: INTS
    }
  }
  node {
    input: "convolution_3"
    input: "layer1.1.bn1.weight"
    input: "layer1.1.bn1.bias"
    input: "layer1.1.bn1.running_mean"
    input: "layer1.1.bn1.running_var"
    output: "_native_batch_norm_legit_no_training_3"
    output: "_native_batch_norm_legit_no_training_3_1"
    output: "_native_batch_norm_legit_no_training_3_2"
    name: "_aten_native_batch_norm_inference_onnx_1"
    op_type: "_aten_native_batch_norm_inference_onnx"
    attribute {
      name: "eps"
      f: 1e-05
      type: FLOAT
    }
    attribute {
      name: "momentum"
      f: 0.1
      type: FLOAT
    }
    attribute {
      name: "training"
      i: 0
      type: INT
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torch_nn_modules_activation_ReLU_getattr_L__self___layer1___1___relu_1"
  input: "getitem_11"
  output: "copy_3"
  node {
    input: "getitem_11"
    output: "relu_3"
    name: "aten_relu_0"
    op_type: "aten_relu"
    domain: "pkg.onnxscript.torch_lib"
  }
  node {
    input: "getitem_11"
    input: "relu_3"
    output: "copy_3"
    name: "aten_copy_1"
    op_type: "aten_copy"
    attribute {
      name: "non_blocking"
      i: 0
      type: INT
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torch_nn_modules_conv_Conv2d_getattr_L__self___layer1___1___conv2_1"
  input: "copy_3"
  input: "layer1.1.conv2.weight"
  output: "convolution_4"
  node {
    input: "layer1.1.conv2.weight"
    output: "_val_2"
    name: "Shape_2"
    op_type: "Shape"
    attribute {
      name: "end"
      i: 1
      type: INT
    }
    attribute {
      name: "start"
      i: 0
      type: INT
    }
  }
  node {
    output: "_val_3"
    name: "Constant_3"
    op_type: "Constant"
    attribute {
      name: "value_ints"
      ints: 1
      type: INTS
    }
  }
  node {
    input: "_val_2"
    input: "_val_3"
    output: "_val_4"
    name: "Expand_4"
    op_type: "Expand"
  }
  node {
    output: "_val_5"
    name: "Constant_5"
    op_type: "Constant"
    attribute {
      name: "value"
      t {
        data_type: 1
        raw_data: "\000\000\000\000"
      }
      type: TENSOR
    }
  }
  node {
    input: "_val_5"
    input: "copy_3"
    output: "_val_6"
    name: "CastLike_6"
    op_type: "CastLike"
  }
  node {
    input: "_val_6"
    input: "_val_4"
    output: "_val_7"
    name: "Expand_7"
    op_type: "Expand"
  }
  node {
    output: "_val_8"
    name: "Constant_8"
    op_type: "Constant"
    attribute {
      name: "value"
      t {
        data_type: 9
        raw_data: "\000"
      }
      type: TENSOR
    }
  }
  node {
    input: "copy_3"
    input: "layer1.1.conv2.weight"
    input: "_val_7"
    input: "_val_8"
    output: "convolution_4"
    name: "_aten_convolution_onnx_9"
    op_type: "_aten_convolution_onnx"
    attribute {
      name: "dilations"
      ints: 1
      ints: 1
      type: INTS
    }
    attribute {
      name: "groups"
      i: 1
      type: INT
    }
    attribute {
      name: "output_padding"
      ints: 0
      ints: 0
      type: INTS
    }
    attribute {
      name: "pads"
      ints: 1
      ints: 1
      ints: 1
      ints: 1
      type: INTS
    }
    attribute {
      name: "strides"
      ints: 1
      ints: 1
      type: INTS
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer1___1___bn2_1"
  input: "convolution_4"
  input: "layer1.1.bn2.weight"
  input: "layer1.1.bn2.bias"
  input: "layer1.1.bn2.running_mean"
  input: "layer1.1.bn2.running_var"
  output: "_native_batch_norm_legit_no_training_4"
  node {
    output: "_val_5"
    name: "Constant_0"
    op_type: "Constant"
    attribute {
      name: "value_ints"
      ints: 0
      ints: 2
      ints: 3
      type: INTS
    }
  }
  node {
    input: "convolution_4"
    input: "layer1.1.bn2.weight"
    input: "layer1.1.bn2.bias"
    input: "layer1.1.bn2.running_mean"
    input: "layer1.1.bn2.running_var"
    output: "_native_batch_norm_legit_no_training_4"
    output: "_native_batch_norm_legit_no_training_4_1"
    output: "_native_batch_norm_legit_no_training_4_2"
    name: "_aten_native_batch_norm_inference_onnx_1"
    op_type: "_aten_native_batch_norm_inference_onnx"
    attribute {
      name: "eps"
      f: 1e-05
      type: FLOAT
    }
    attribute {
      name: "momentum"
      f: 0.1
      type: FLOAT
    }
    attribute {
      name: "training"
      i: 0
      type: INT
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torch_nn_modules_activation_ReLU_getattr_L__self___layer1___1___relu_2"
  input: "add_1"
  output: "copy_4"
  node {
    input: "add_1"
    output: "relu_4"
    name: "aten_relu_0"
    op_type: "aten_relu"
    domain: "pkg.onnxscript.torch_lib"
  }
  node {
    input: "add_1"
    input: "relu_4"
    output: "copy_4"
    name: "aten_copy_1"
    op_type: "aten_copy"
    attribute {
      name: "non_blocking"
      i: 0
      type: INT
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torchvision_models_resnet_BasicBlock_layer1_1_1"
  input: "copy_2"
  input: "layer1.1.conv1.weight"
  input: "layer1.1.bn1.weight"
  input: "layer1.1.bn1.bias"
  input: "layer1.1.bn1.running_mean"
  input: "layer1.1.bn1.running_var"
  input: "layer1.1.conv2.weight"
  input: "layer1.1.bn2.weight"
  input: "layer1.1.bn2.bias"
  input: "layer1.1.bn2.running_mean"
  input: "layer1.1.bn2.running_var"
  output: "getattr_l__self___layer1___1___relu_2"
  node {
    input: "copy_2"
    input: "layer1.1.conv1.weight"
    output: "getattr_l__self___layer1___1___conv1_1"
    name: "torch_nn_modules_conv_Conv2d_getattr_L__self___layer1___1___conv1_1_0"
    op_type: "torch_nn_modules_conv_Conv2d_getattr_L__self___layer1___1___conv1_1"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  node {
    input: "getattr_l__self___layer1___1___conv1_1"
    input: "layer1.1.bn1.weight"
    input: "layer1.1.bn1.bias"
    input: "layer1.1.bn1.running_mean"
    input: "layer1.1.bn1.running_var"
    output: "getattr_l__self___layer1___1___bn1_1"
    name: "torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer1___1___bn1_1_1"
    op_type: "torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer1___1___bn1_1"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  node {
    input: "getattr_l__self___layer1___1___bn1_1"
    output: "getattr_l__self___layer1___1___relu_1"
    name: "torch_nn_modules_activation_ReLU_getattr_L__self___layer1___1___relu_1_2"
    op_type: "torch_nn_modules_activation_ReLU_getattr_L__self___layer1___1___relu_1"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  node {
    input: "getattr_l__self___layer1___1___relu_1"
    input: "layer1.1.conv2.weight"
    output: "getattr_l__self___layer1___1___conv2_1"
    name: "torch_nn_modules_conv_Conv2d_getattr_L__self___layer1___1___conv2_1_3"
    op_type: "torch_nn_modules_conv_Conv2d_getattr_L__self___layer1___1___conv2_1"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  node {
    input: "getattr_l__self___layer1___1___conv2_1"
    input: "layer1.1.bn2.weight"
    input: "layer1.1.bn2.bias"
    input: "layer1.1.bn2.running_mean"
    input: "layer1.1.bn2.running_var"
    output: "getattr_l__self___layer1___1___bn2_1"
    name: "torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer1___1___bn2_1_4"
    op_type: "torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer1___1___bn2_1"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  node {
    input: "getattr_l__self___layer1___1___bn2_1"
    input: "copy_2"
    output: "add_1"
    name: "aten_add_5"
    op_type: "aten_add"
    attribute {
      name: "alpha"
      f: 1.0
      type: FLOAT
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  node {
    input: "add_1"
    output: "getattr_l__self___layer1___1___relu_2"
    name: "torch_nn_modules_activation_ReLU_getattr_L__self___layer1___1___relu_2_6"
    op_type: "torch_nn_modules_activation_ReLU_getattr_L__self___layer1___1___relu_2"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  opset_import {
    domain: "pkg.torch.2.2.0a0+git4ab5507"
    version: 1
  }
  domain: "pkg.torchvision.0.16.0a0+0370134"
}
functions {
  name: "torch_nn_modules_container_Sequential_layer1_1"
  input: "getitem_3"
  input: "layer1.0.conv1.weight"
  input: "layer1.0.bn1.weight"
  input: "layer1.0.bn1.bias"
  input: "layer1.0.bn1.running_mean"
  input: "layer1.0.bn1.running_var"
  input: "layer1.0.conv2.weight"
  input: "layer1.0.bn2.weight"
  input: "layer1.0.bn2.bias"
  input: "layer1.0.bn2.running_mean"
  input: "layer1.0.bn2.running_var"
  input: "layer1.1.conv1.weight"
  input: "layer1.1.bn1.weight"
  input: "layer1.1.bn1.bias"
  input: "layer1.1.bn1.running_mean"
  input: "layer1.1.bn1.running_var"
  input: "layer1.1.conv2.weight"
  input: "layer1.1.bn2.weight"
  input: "layer1.1.bn2.bias"
  input: "layer1.1.bn2.running_mean"
  input: "layer1.1.bn2.running_var"
  output: "layer1_1_1"
  node {
    input: "getitem_3"
    input: "layer1.0.conv1.weight"
    input: "layer1.0.bn1.weight"
    input: "layer1.0.bn1.bias"
    input: "layer1.0.bn1.running_mean"
    input: "layer1.0.bn1.running_var"
    input: "layer1.0.conv2.weight"
    input: "layer1.0.bn2.weight"
    input: "layer1.0.bn2.bias"
    input: "layer1.0.bn2.running_mean"
    input: "layer1.0.bn2.running_var"
    output: "layer1_0_1"
    name: "torchvision_models_resnet_BasicBlock_layer1_0_1_0"
    op_type: "torchvision_models_resnet_BasicBlock_layer1_0_1"
    domain: "pkg.torchvision.0.16.0a0+0370134"
  }
  node {
    input: "layer1_0_1"
    input: "layer1.1.conv1.weight"
    input: "layer1.1.bn1.weight"
    input: "layer1.1.bn1.bias"
    input: "layer1.1.bn1.running_mean"
    input: "layer1.1.bn1.running_var"
    input: "layer1.1.conv2.weight"
    input: "layer1.1.bn2.weight"
    input: "layer1.1.bn2.bias"
    input: "layer1.1.bn2.running_mean"
    input: "layer1.1.bn2.running_var"
    output: "layer1_1_1"
    name: "torchvision_models_resnet_BasicBlock_layer1_1_1_1"
    op_type: "torchvision_models_resnet_BasicBlock_layer1_1_1"
    domain: "pkg.torchvision.0.16.0a0+0370134"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.torchvision.0.16.0a0+0370134"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torch_nn_modules_conv_Conv2d_getattr_L__self___layer2___0___conv1_1"
  input: "copy_4"
  input: "layer2.0.conv1.weight"
  output: "convolution_5"
  node {
    input: "layer2.0.conv1.weight"
    output: "_val_2"
    name: "Shape_2"
    op_type: "Shape"
    attribute {
      name: "end"
      i: 1
      type: INT
    }
    attribute {
      name: "start"
      i: 0
      type: INT
    }
  }
  node {
    output: "_val_3"
    name: "Constant_3"
    op_type: "Constant"
    attribute {
      name: "value_ints"
      ints: 1
      type: INTS
    }
  }
  node {
    input: "_val_2"
    input: "_val_3"
    output: "_val_4"
    name: "Expand_4"
    op_type: "Expand"
  }
  node {
    output: "_val_5"
    name: "Constant_5"
    op_type: "Constant"
    attribute {
      name: "value"
      t {
        data_type: 1
        raw_data: "\000\000\000\000"
      }
      type: TENSOR
    }
  }
  node {
    input: "_val_5"
    input: "copy_4"
    output: "_val_6"
    name: "CastLike_6"
    op_type: "CastLike"
  }
  node {
    input: "_val_6"
    input: "_val_4"
    output: "_val_7"
    name: "Expand_7"
    op_type: "Expand"
  }
  node {
    output: "_val_8"
    name: "Constant_8"
    op_type: "Constant"
    attribute {
      name: "value"
      t {
        data_type: 9
        raw_data: "\000"
      }
      type: TENSOR
    }
  }
  node {
    input: "copy_4"
    input: "layer2.0.conv1.weight"
    input: "_val_7"
    input: "_val_8"
    output: "convolution_5"
    name: "_aten_convolution_onnx_9"
    op_type: "_aten_convolution_onnx"
    attribute {
      name: "dilations"
      ints: 1
      ints: 1
      type: INTS
    }
    attribute {
      name: "groups"
      i: 1
      type: INT
    }
    attribute {
      name: "output_padding"
      ints: 0
      ints: 0
      type: INTS
    }
    attribute {
      name: "pads"
      ints: 1
      ints: 1
      ints: 1
      ints: 1
      type: INTS
    }
    attribute {
      name: "strides"
      ints: 2
      ints: 2
      type: INTS
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer2___0___bn1_1"
  input: "convolution_5"
  input: "layer2.0.bn1.weight"
  input: "layer2.0.bn1.bias"
  input: "layer2.0.bn1.running_mean"
  input: "layer2.0.bn1.running_var"
  output: "_native_batch_norm_legit_no_training_5"
  node {
    output: "_val_5"
    name: "Constant_0"
    op_type: "Constant"
    attribute {
      name: "value_ints"
      ints: 0
      ints: 2
      ints: 3
      type: INTS
    }
  }
  node {
    input: "convolution_5"
    input: "layer2.0.bn1.weight"
    input: "layer2.0.bn1.bias"
    input: "layer2.0.bn1.running_mean"
    input: "layer2.0.bn1.running_var"
    output: "_native_batch_norm_legit_no_training_5"
    output: "_native_batch_norm_legit_no_training_5_1"
    output: "_native_batch_norm_legit_no_training_5_2"
    name: "_aten_native_batch_norm_inference_onnx_1"
    op_type: "_aten_native_batch_norm_inference_onnx"
    attribute {
      name: "eps"
      f: 1e-05
      type: FLOAT
    }
    attribute {
      name: "momentum"
      f: 0.1
      type: FLOAT
    }
    attribute {
      name: "training"
      i: 0
      type: INT
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torch_nn_modules_activation_ReLU_getattr_L__self___layer2___0___relu_1"
  input: "getitem_17"
  output: "copy_5"
  node {
    input: "getitem_17"
    output: "relu_5"
    name: "aten_relu_0"
    op_type: "aten_relu"
    domain: "pkg.onnxscript.torch_lib"
  }
  node {
    input: "getitem_17"
    input: "relu_5"
    output: "copy_5"
    name: "aten_copy_1"
    op_type: "aten_copy"
    attribute {
      name: "non_blocking"
      i: 0
      type: INT
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torch_nn_modules_conv_Conv2d_getattr_L__self___layer2___0___conv2_1"
  input: "copy_5"
  input: "layer2.0.conv2.weight"
  output: "convolution_6"
  node {
    input: "layer2.0.conv2.weight"
    output: "_val_2"
    name: "Shape_2"
    op_type: "Shape"
    attribute {
      name: "end"
      i: 1
      type: INT
    }
    attribute {
      name: "start"
      i: 0
      type: INT
    }
  }
  node {
    output: "_val_3"
    name: "Constant_3"
    op_type: "Constant"
    attribute {
      name: "value_ints"
      ints: 1
      type: INTS
    }
  }
  node {
    input: "_val_2"
    input: "_val_3"
    output: "_val_4"
    name: "Expand_4"
    op_type: "Expand"
  }
  node {
    output: "_val_5"
    name: "Constant_5"
    op_type: "Constant"
    attribute {
      name: "value"
      t {
        data_type: 1
        raw_data: "\000\000\000\000"
      }
      type: TENSOR
    }
  }
  node {
    input: "_val_5"
    input: "copy_5"
    output: "_val_6"
    name: "CastLike_6"
    op_type: "CastLike"
  }
  node {
    input: "_val_6"
    input: "_val_4"
    output: "_val_7"
    name: "Expand_7"
    op_type: "Expand"
  }
  node {
    output: "_val_8"
    name: "Constant_8"
    op_type: "Constant"
    attribute {
      name: "value"
      t {
        data_type: 9
        raw_data: "\000"
      }
      type: TENSOR
    }
  }
  node {
    input: "copy_5"
    input: "layer2.0.conv2.weight"
    input: "_val_7"
    input: "_val_8"
    output: "convolution_6"
    name: "_aten_convolution_onnx_9"
    op_type: "_aten_convolution_onnx"
    attribute {
      name: "dilations"
      ints: 1
      ints: 1
      type: INTS
    }
    attribute {
      name: "groups"
      i: 1
      type: INT
    }
    attribute {
      name: "output_padding"
      ints: 0
      ints: 0
      type: INTS
    }
    attribute {
      name: "pads"
      ints: 1
      ints: 1
      ints: 1
      ints: 1
      type: INTS
    }
    attribute {
      name: "strides"
      ints: 1
      ints: 1
      type: INTS
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer2___0___bn2_1"
  input: "convolution_6"
  input: "layer2.0.bn2.weight"
  input: "layer2.0.bn2.bias"
  input: "layer2.0.bn2.running_mean"
  input: "layer2.0.bn2.running_var"
  output: "_native_batch_norm_legit_no_training_6"
  node {
    output: "_val_5"
    name: "Constant_0"
    op_type: "Constant"
    attribute {
      name: "value_ints"
      ints: 0
      ints: 2
      ints: 3
      type: INTS
    }
  }
  node {
    input: "convolution_6"
    input: "layer2.0.bn2.weight"
    input: "layer2.0.bn2.bias"
    input: "layer2.0.bn2.running_mean"
    input: "layer2.0.bn2.running_var"
    output: "_native_batch_norm_legit_no_training_6"
    output: "_native_batch_norm_legit_no_training_6_1"
    output: "_native_batch_norm_legit_no_training_6_2"
    name: "_aten_native_batch_norm_inference_onnx_1"
    op_type: "_aten_native_batch_norm_inference_onnx"
    attribute {
      name: "eps"
      f: 1e-05
      type: FLOAT
    }
    attribute {
      name: "momentum"
      f: 0.1
      type: FLOAT
    }
    attribute {
      name: "training"
      i: 0
      type: INT
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torch_nn_modules_conv_Conv2d_getattr_L__self___layer2___0___downsample_0_1"
  input: "copy_4"
  input: "layer2.0.downsample.0.weight"
  output: "convolution_7"
  node {
    input: "layer2.0.downsample.0.weight"
    output: "_val_2"
    name: "Shape_2"
    op_type: "Shape"
    attribute {
      name: "end"
      i: 1
      type: INT
    }
    attribute {
      name: "start"
      i: 0
      type: INT
    }
  }
  node {
    output: "_val_3"
    name: "Constant_3"
    op_type: "Constant"
    attribute {
      name: "value_ints"
      ints: 1
      type: INTS
    }
  }
  node {
    input: "_val_2"
    input: "_val_3"
    output: "_val_4"
    name: "Expand_4"
    op_type: "Expand"
  }
  node {
    output: "_val_5"
    name: "Constant_5"
    op_type: "Constant"
    attribute {
      name: "value"
      t {
        data_type: 1
        raw_data: "\000\000\000\000"
      }
      type: TENSOR
    }
  }
  node {
    input: "_val_5"
    input: "copy_4"
    output: "_val_6"
    name: "CastLike_6"
    op_type: "CastLike"
  }
  node {
    input: "_val_6"
    input: "_val_4"
    output: "_val_7"
    name: "Expand_7"
    op_type: "Expand"
  }
  node {
    output: "_val_8"
    name: "Constant_8"
    op_type: "Constant"
    attribute {
      name: "value"
      t {
        data_type: 9
        raw_data: "\000"
      }
      type: TENSOR
    }
  }
  node {
    input: "copy_4"
    input: "layer2.0.downsample.0.weight"
    input: "_val_7"
    input: "_val_8"
    output: "convolution_7"
    name: "_aten_convolution_onnx_9"
    op_type: "_aten_convolution_onnx"
    attribute {
      name: "dilations"
      ints: 1
      ints: 1
      type: INTS
    }
    attribute {
      name: "groups"
      i: 1
      type: INT
    }
    attribute {
      name: "output_padding"
      ints: 0
      ints: 0
      type: INTS
    }
    attribute {
      name: "pads"
      ints: 0
      ints: 0
      ints: 0
      ints: 0
      type: INTS
    }
    attribute {
      name: "strides"
      ints: 2
      ints: 2
      type: INTS
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer2___0___downsample_1_1"
  input: "convolution_7"
  input: "layer2.0.downsample.1.weight"
  input: "layer2.0.downsample.1.bias"
  input: "layer2.0.downsample.1.running_mean"
  input: "layer2.0.downsample.1.running_var"
  output: "_native_batch_norm_legit_no_training_7"
  node {
    output: "_val_5"
    name: "Constant_0"
    op_type: "Constant"
    attribute {
      name: "value_ints"
      ints: 0
      ints: 2
      ints: 3
      type: INTS
    }
  }
  node {
    input: "convolution_7"
    input: "layer2.0.downsample.1.weight"
    input: "layer2.0.downsample.1.bias"
    input: "layer2.0.downsample.1.running_mean"
    input: "layer2.0.downsample.1.running_var"
    output: "_native_batch_norm_legit_no_training_7"
    output: "_native_batch_norm_legit_no_training_7_1"
    output: "_native_batch_norm_legit_no_training_7_2"
    name: "_aten_native_batch_norm_inference_onnx_1"
    op_type: "_aten_native_batch_norm_inference_onnx"
    attribute {
      name: "eps"
      f: 1e-05
      type: FLOAT
    }
    attribute {
      name: "momentum"
      f: 0.1
      type: FLOAT
    }
    attribute {
      name: "training"
      i: 0
      type: INT
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torch_nn_modules_container_Sequential_getattr_L__self___layer2___0___downsample_1"
  input: "copy_4"
  input: "layer2.0.downsample.0.weight"
  input: "layer2.0.downsample.1.weight"
  input: "layer2.0.downsample.1.bias"
  input: "layer2.0.downsample.1.running_mean"
  input: "layer2.0.downsample.1.running_var"
  output: "getattr_l__self___layer2___0___downsample_1_1"
  node {
    input: "copy_4"
    input: "layer2.0.downsample.0.weight"
    output: "getattr_l__self___layer2___0___downsample_0_1"
    name: "torch_nn_modules_conv_Conv2d_getattr_L__self___layer2___0___downsample_0_1_0"
    op_type: "torch_nn_modules_conv_Conv2d_getattr_L__self___layer2___0___downsample_0_1"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  node {
    input: "getattr_l__self___layer2___0___downsample_0_1"
    input: "layer2.0.downsample.1.weight"
    input: "layer2.0.downsample.1.bias"
    input: "layer2.0.downsample.1.running_mean"
    input: "layer2.0.downsample.1.running_var"
    output: "getattr_l__self___layer2___0___downsample_1_1"
    name: "torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer2___0___downsample_1_1_1"
    op_type: "torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer2___0___downsample_1_1"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.torch.2.2.0a0+git4ab5507"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torch_nn_modules_activation_ReLU_getattr_L__self___layer2___0___relu_2"
  input: "add_2"
  output: "copy_6"
  node {
    input: "add_2"
    output: "relu_6"
    name: "aten_relu_0"
    op_type: "aten_relu"
    domain: "pkg.onnxscript.torch_lib"
  }
  node {
    input: "add_2"
    input: "relu_6"
    output: "copy_6"
    name: "aten_copy_1"
    op_type: "aten_copy"
    attribute {
      name: "non_blocking"
      i: 0
      type: INT
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torchvision_models_resnet_BasicBlock_layer2_0_1"
  input: "copy_4"
  input: "layer2.0.conv1.weight"
  input: "layer2.0.bn1.weight"
  input: "layer2.0.bn1.bias"
  input: "layer2.0.bn1.running_mean"
  input: "layer2.0.bn1.running_var"
  input: "layer2.0.conv2.weight"
  input: "layer2.0.bn2.weight"
  input: "layer2.0.bn2.bias"
  input: "layer2.0.bn2.running_mean"
  input: "layer2.0.bn2.running_var"
  input: "layer2.0.downsample.0.weight"
  input: "layer2.0.downsample.1.weight"
  input: "layer2.0.downsample.1.bias"
  input: "layer2.0.downsample.1.running_mean"
  input: "layer2.0.downsample.1.running_var"
  output: "getattr_l__self___layer2___0___relu_2"
  node {
    input: "copy_4"
    input: "layer2.0.conv1.weight"
    output: "getattr_l__self___layer2___0___conv1_1"
    name: "torch_nn_modules_conv_Conv2d_getattr_L__self___layer2___0___conv1_1_0"
    op_type: "torch_nn_modules_conv_Conv2d_getattr_L__self___layer2___0___conv1_1"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  node {
    input: "getattr_l__self___layer2___0___conv1_1"
    input: "layer2.0.bn1.weight"
    input: "layer2.0.bn1.bias"
    input: "layer2.0.bn1.running_mean"
    input: "layer2.0.bn1.running_var"
    output: "getattr_l__self___layer2___0___bn1_1"
    name: "torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer2___0___bn1_1_1"
    op_type: "torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer2___0___bn1_1"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  node {
    input: "getattr_l__self___layer2___0___bn1_1"
    output: "getattr_l__self___layer2___0___relu_1"
    name: "torch_nn_modules_activation_ReLU_getattr_L__self___layer2___0___relu_1_2"
    op_type: "torch_nn_modules_activation_ReLU_getattr_L__self___layer2___0___relu_1"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  node {
    input: "getattr_l__self___layer2___0___relu_1"
    input: "layer2.0.conv2.weight"
    output: "getattr_l__self___layer2___0___conv2_1"
    name: "torch_nn_modules_conv_Conv2d_getattr_L__self___layer2___0___conv2_1_3"
    op_type: "torch_nn_modules_conv_Conv2d_getattr_L__self___layer2___0___conv2_1"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  node {
    input: "getattr_l__self___layer2___0___conv2_1"
    input: "layer2.0.bn2.weight"
    input: "layer2.0.bn2.bias"
    input: "layer2.0.bn2.running_mean"
    input: "layer2.0.bn2.running_var"
    output: "getattr_l__self___layer2___0___bn2_1"
    name: "torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer2___0___bn2_1_4"
    op_type: "torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer2___0___bn2_1"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  node {
    input: "copy_4"
    input: "layer2.0.downsample.0.weight"
    input: "layer2.0.downsample.1.weight"
    input: "layer2.0.downsample.1.bias"
    input: "layer2.0.downsample.1.running_mean"
    input: "layer2.0.downsample.1.running_var"
    output: "getattr_l__self___layer2___0___downsample_1"
    name: "torch_nn_modules_container_Sequential_getattr_L__self___layer2___0___downsample_1_5"
    op_type: "torch_nn_modules_container_Sequential_getattr_L__self___layer2___0___downsample_1"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  node {
    input: "getattr_l__self___layer2___0___bn2_1"
    input: "getattr_l__self___layer2___0___downsample_1"
    output: "add_2"
    name: "aten_add_6"
    op_type: "aten_add"
    attribute {
      name: "alpha"
      f: 1.0
      type: FLOAT
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  node {
    input: "add_2"
    output: "getattr_l__self___layer2___0___relu_2"
    name: "torch_nn_modules_activation_ReLU_getattr_L__self___layer2___0___relu_2_7"
    op_type: "torch_nn_modules_activation_ReLU_getattr_L__self___layer2___0___relu_2"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  opset_import {
    domain: "pkg.torch.2.2.0a0+git4ab5507"
    version: 1
  }
  domain: "pkg.torchvision.0.16.0a0+0370134"
}
functions {
  name: "torch_nn_modules_conv_Conv2d_getattr_L__self___layer2___1___conv1_1"
  input: "copy_6"
  input: "layer2.1.conv1.weight"
  output: "convolution_8"
  node {
    input: "layer2.1.conv1.weight"
    output: "_val_2"
    name: "Shape_2"
    op_type: "Shape"
    attribute {
      name: "end"
      i: 1
      type: INT
    }
    attribute {
      name: "start"
      i: 0
      type: INT
    }
  }
  node {
    output: "_val_3"
    name: "Constant_3"
    op_type: "Constant"
    attribute {
      name: "value_ints"
      ints: 1
      type: INTS
    }
  }
  node {
    input: "_val_2"
    input: "_val_3"
    output: "_val_4"
    name: "Expand_4"
    op_type: "Expand"
  }
  node {
    output: "_val_5"
    name: "Constant_5"
    op_type: "Constant"
    attribute {
      name: "value"
      t {
        data_type: 1
        raw_data: "\000\000\000\000"
      }
      type: TENSOR
    }
  }
  node {
    input: "_val_5"
    input: "copy_6"
    output: "_val_6"
    name: "CastLike_6"
    op_type: "CastLike"
  }
  node {
    input: "_val_6"
    input: "_val_4"
    output: "_val_7"
    name: "Expand_7"
    op_type: "Expand"
  }
  node {
    output: "_val_8"
    name: "Constant_8"
    op_type: "Constant"
    attribute {
      name: "value"
      t {
        data_type: 9
        raw_data: "\000"
      }
      type: TENSOR
    }
  }
  node {
    input: "copy_6"
    input: "layer2.1.conv1.weight"
    input: "_val_7"
    input: "_val_8"
    output: "convolution_8"
    name: "_aten_convolution_onnx_9"
    op_type: "_aten_convolution_onnx"
    attribute {
      name: "dilations"
      ints: 1
      ints: 1
      type: INTS
    }
    attribute {
      name: "groups"
      i: 1
      type: INT
    }
    attribute {
      name: "output_padding"
      ints: 0
      ints: 0
      type: INTS
    }
    attribute {
      name: "pads"
      ints: 1
      ints: 1
      ints: 1
      ints: 1
      type: INTS
    }
    attribute {
      name: "strides"
      ints: 1
      ints: 1
      type: INTS
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer2___1___bn1_1"
  input: "convolution_8"
  input: "layer2.1.bn1.weight"
  input: "layer2.1.bn1.bias"
  input: "layer2.1.bn1.running_mean"
  input: "layer2.1.bn1.running_var"
  output: "_native_batch_norm_legit_no_training_8"
  node {
    output: "_val_5"
    name: "Constant_0"
    op_type: "Constant"
    attribute {
      name: "value_ints"
      ints: 0
      ints: 2
      ints: 3
      type: INTS
    }
  }
  node {
    input: "convolution_8"
    input: "layer2.1.bn1.weight"
    input: "layer2.1.bn1.bias"
    input: "layer2.1.bn1.running_mean"
    input: "layer2.1.bn1.running_var"
    output: "_native_batch_norm_legit_no_training_8"
    output: "_native_batch_norm_legit_no_training_8_1"
    output: "_native_batch_norm_legit_no_training_8_2"
    name: "_aten_native_batch_norm_inference_onnx_1"
    op_type: "_aten_native_batch_norm_inference_onnx"
    attribute {
      name: "eps"
      f: 1e-05
      type: FLOAT
    }
    attribute {
      name: "momentum"
      f: 0.1
      type: FLOAT
    }
    attribute {
      name: "training"
      i: 0
      type: INT
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torch_nn_modules_activation_ReLU_getattr_L__self___layer2___1___relu_1"
  input: "getitem_26"
  output: "copy_7"
  node {
    input: "getitem_26"
    output: "relu_7"
    name: "aten_relu_0"
    op_type: "aten_relu"
    domain: "pkg.onnxscript.torch_lib"
  }
  node {
    input: "getitem_26"
    input: "relu_7"
    output: "copy_7"
    name: "aten_copy_1"
    op_type: "aten_copy"
    attribute {
      name: "non_blocking"
      i: 0
      type: INT
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torch_nn_modules_conv_Conv2d_getattr_L__self___layer2___1___conv2_1"
  input: "copy_7"
  input: "layer2.1.conv2.weight"
  output: "convolution_9"
  node {
    input: "layer2.1.conv2.weight"
    output: "_val_2"
    name: "Shape_2"
    op_type: "Shape"
    attribute {
      name: "end"
      i: 1
      type: INT
    }
    attribute {
      name: "start"
      i: 0
      type: INT
    }
  }
  node {
    output: "_val_3"
    name: "Constant_3"
    op_type: "Constant"
    attribute {
      name: "value_ints"
      ints: 1
      type: INTS
    }
  }
  node {
    input: "_val_2"
    input: "_val_3"
    output: "_val_4"
    name: "Expand_4"
    op_type: "Expand"
  }
  node {
    output: "_val_5"
    name: "Constant_5"
    op_type: "Constant"
    attribute {
      name: "value"
      t {
        data_type: 1
        raw_data: "\000\000\000\000"
      }
      type: TENSOR
    }
  }
  node {
    input: "_val_5"
    input: "copy_7"
    output: "_val_6"
    name: "CastLike_6"
    op_type: "CastLike"
  }
  node {
    input: "_val_6"
    input: "_val_4"
    output: "_val_7"
    name: "Expand_7"
    op_type: "Expand"
  }
  node {
    output: "_val_8"
    name: "Constant_8"
    op_type: "Constant"
    attribute {
      name: "value"
      t {
        data_type: 9
        raw_data: "\000"
      }
      type: TENSOR
    }
  }
  node {
    input: "copy_7"
    input: "layer2.1.conv2.weight"
    input: "_val_7"
    input: "_val_8"
    output: "convolution_9"
    name: "_aten_convolution_onnx_9"
    op_type: "_aten_convolution_onnx"
    attribute {
      name: "dilations"
      ints: 1
      ints: 1
      type: INTS
    }
    attribute {
      name: "groups"
      i: 1
      type: INT
    }
    attribute {
      name: "output_padding"
      ints: 0
      ints: 0
      type: INTS
    }
    attribute {
      name: "pads"
      ints: 1
      ints: 1
      ints: 1
      ints: 1
      type: INTS
    }
    attribute {
      name: "strides"
      ints: 1
      ints: 1
      type: INTS
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer2___1___bn2_1"
  input: "convolution_9"
  input: "layer2.1.bn2.weight"
  input: "layer2.1.bn2.bias"
  input: "layer2.1.bn2.running_mean"
  input: "layer2.1.bn2.running_var"
  output: "_native_batch_norm_legit_no_training_9"
  node {
    output: "_val_5"
    name: "Constant_0"
    op_type: "Constant"
    attribute {
      name: "value_ints"
      ints: 0
      ints: 2
      ints: 3
      type: INTS
    }
  }
  node {
    input: "convolution_9"
    input: "layer2.1.bn2.weight"
    input: "layer2.1.bn2.bias"
    input: "layer2.1.bn2.running_mean"
    input: "layer2.1.bn2.running_var"
    output: "_native_batch_norm_legit_no_training_9"
    output: "_native_batch_norm_legit_no_training_9_1"
    output: "_native_batch_norm_legit_no_training_9_2"
    name: "_aten_native_batch_norm_inference_onnx_1"
    op_type: "_aten_native_batch_norm_inference_onnx"
    attribute {
      name: "eps"
      f: 1e-05
      type: FLOAT
    }
    attribute {
      name: "momentum"
      f: 0.1
      type: FLOAT
    }
    attribute {
      name: "training"
      i: 0
      type: INT
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torch_nn_modules_activation_ReLU_getattr_L__self___layer2___1___relu_2"
  input: "add_3"
  output: "copy_8"
  node {
    input: "add_3"
    output: "relu_8"
    name: "aten_relu_0"
    op_type: "aten_relu"
    domain: "pkg.onnxscript.torch_lib"
  }
  node {
    input: "add_3"
    input: "relu_8"
    output: "copy_8"
    name: "aten_copy_1"
    op_type: "aten_copy"
    attribute {
      name: "non_blocking"
      i: 0
      type: INT
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torchvision_models_resnet_BasicBlock_layer2_1_1"
  input: "copy_6"
  input: "layer2.1.conv1.weight"
  input: "layer2.1.bn1.weight"
  input: "layer2.1.bn1.bias"
  input: "layer2.1.bn1.running_mean"
  input: "layer2.1.bn1.running_var"
  input: "layer2.1.conv2.weight"
  input: "layer2.1.bn2.weight"
  input: "layer2.1.bn2.bias"
  input: "layer2.1.bn2.running_mean"
  input: "layer2.1.bn2.running_var"
  output: "getattr_l__self___layer2___1___relu_2"
  node {
    input: "copy_6"
    input: "layer2.1.conv1.weight"
    output: "getattr_l__self___layer2___1___conv1_1"
    name: "torch_nn_modules_conv_Conv2d_getattr_L__self___layer2___1___conv1_1_0"
    op_type: "torch_nn_modules_conv_Conv2d_getattr_L__self___layer2___1___conv1_1"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  node {
    input: "getattr_l__self___layer2___1___conv1_1"
    input: "layer2.1.bn1.weight"
    input: "layer2.1.bn1.bias"
    input: "layer2.1.bn1.running_mean"
    input: "layer2.1.bn1.running_var"
    output: "getattr_l__self___layer2___1___bn1_1"
    name: "torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer2___1___bn1_1_1"
    op_type: "torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer2___1___bn1_1"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  node {
    input: "getattr_l__self___layer2___1___bn1_1"
    output: "getattr_l__self___layer2___1___relu_1"
    name: "torch_nn_modules_activation_ReLU_getattr_L__self___layer2___1___relu_1_2"
    op_type: "torch_nn_modules_activation_ReLU_getattr_L__self___layer2___1___relu_1"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  node {
    input: "getattr_l__self___layer2___1___relu_1"
    input: "layer2.1.conv2.weight"
    output: "getattr_l__self___layer2___1___conv2_1"
    name: "torch_nn_modules_conv_Conv2d_getattr_L__self___layer2___1___conv2_1_3"
    op_type: "torch_nn_modules_conv_Conv2d_getattr_L__self___layer2___1___conv2_1"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  node {
    input: "getattr_l__self___layer2___1___conv2_1"
    input: "layer2.1.bn2.weight"
    input: "layer2.1.bn2.bias"
    input: "layer2.1.bn2.running_mean"
    input: "layer2.1.bn2.running_var"
    output: "getattr_l__self___layer2___1___bn2_1"
    name: "torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer2___1___bn2_1_4"
    op_type: "torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer2___1___bn2_1"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  node {
    input: "getattr_l__self___layer2___1___bn2_1"
    input: "copy_6"
    output: "add_3"
    name: "aten_add_5"
    op_type: "aten_add"
    attribute {
      name: "alpha"
      f: 1.0
      type: FLOAT
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  node {
    input: "add_3"
    output: "getattr_l__self___layer2___1___relu_2"
    name: "torch_nn_modules_activation_ReLU_getattr_L__self___layer2___1___relu_2_6"
    op_type: "torch_nn_modules_activation_ReLU_getattr_L__self___layer2___1___relu_2"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  opset_import {
    domain: "pkg.torch.2.2.0a0+git4ab5507"
    version: 1
  }
  domain: "pkg.torchvision.0.16.0a0+0370134"
}
functions {
  name: "torch_nn_modules_container_Sequential_layer2_1"
  input: "copy_4"
  input: "layer2.0.conv1.weight"
  input: "layer2.0.bn1.weight"
  input: "layer2.0.bn1.bias"
  input: "layer2.0.bn1.running_mean"
  input: "layer2.0.bn1.running_var"
  input: "layer2.0.conv2.weight"
  input: "layer2.0.bn2.weight"
  input: "layer2.0.bn2.bias"
  input: "layer2.0.bn2.running_mean"
  input: "layer2.0.bn2.running_var"
  input: "layer2.0.downsample.0.weight"
  input: "layer2.0.downsample.1.weight"
  input: "layer2.0.downsample.1.bias"
  input: "layer2.0.downsample.1.running_mean"
  input: "layer2.0.downsample.1.running_var"
  input: "layer2.1.conv1.weight"
  input: "layer2.1.bn1.weight"
  input: "layer2.1.bn1.bias"
  input: "layer2.1.bn1.running_mean"
  input: "layer2.1.bn1.running_var"
  input: "layer2.1.conv2.weight"
  input: "layer2.1.bn2.weight"
  input: "layer2.1.bn2.bias"
  input: "layer2.1.bn2.running_mean"
  input: "layer2.1.bn2.running_var"
  output: "layer2_1_1"
  node {
    input: "copy_4"
    input: "layer2.0.conv1.weight"
    input: "layer2.0.bn1.weight"
    input: "layer2.0.bn1.bias"
    input: "layer2.0.bn1.running_mean"
    input: "layer2.0.bn1.running_var"
    input: "layer2.0.conv2.weight"
    input: "layer2.0.bn2.weight"
    input: "layer2.0.bn2.bias"
    input: "layer2.0.bn2.running_mean"
    input: "layer2.0.bn2.running_var"
    input: "layer2.0.downsample.0.weight"
    input: "layer2.0.downsample.1.weight"
    input: "layer2.0.downsample.1.bias"
    input: "layer2.0.downsample.1.running_mean"
    input: "layer2.0.downsample.1.running_var"
    output: "layer2_0_1"
    name: "torchvision_models_resnet_BasicBlock_layer2_0_1_0"
    op_type: "torchvision_models_resnet_BasicBlock_layer2_0_1"
    domain: "pkg.torchvision.0.16.0a0+0370134"
  }
  node {
    input: "layer2_0_1"
    input: "layer2.1.conv1.weight"
    input: "layer2.1.bn1.weight"
    input: "layer2.1.bn1.bias"
    input: "layer2.1.bn1.running_mean"
    input: "layer2.1.bn1.running_var"
    input: "layer2.1.conv2.weight"
    input: "layer2.1.bn2.weight"
    input: "layer2.1.bn2.bias"
    input: "layer2.1.bn2.running_mean"
    input: "layer2.1.bn2.running_var"
    output: "layer2_1_1"
    name: "torchvision_models_resnet_BasicBlock_layer2_1_1_1"
    op_type: "torchvision_models_resnet_BasicBlock_layer2_1_1"
    domain: "pkg.torchvision.0.16.0a0+0370134"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.torchvision.0.16.0a0+0370134"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torch_nn_modules_conv_Conv2d_getattr_L__self___layer3___0___conv1_1"
  input: "copy_8"
  input: "layer3.0.conv1.weight"
  output: "convolution_10"
  node {
    input: "layer3.0.conv1.weight"
    output: "_val_2"
    name: "Shape_2"
    op_type: "Shape"
    attribute {
      name: "end"
      i: 1
      type: INT
    }
    attribute {
      name: "start"
      i: 0
      type: INT
    }
  }
  node {
    output: "_val_3"
    name: "Constant_3"
    op_type: "Constant"
    attribute {
      name: "value_ints"
      ints: 1
      type: INTS
    }
  }
  node {
    input: "_val_2"
    input: "_val_3"
    output: "_val_4"
    name: "Expand_4"
    op_type: "Expand"
  }
  node {
    output: "_val_5"
    name: "Constant_5"
    op_type: "Constant"
    attribute {
      name: "value"
      t {
        data_type: 1
        raw_data: "\000\000\000\000"
      }
      type: TENSOR
    }
  }
  node {
    input: "_val_5"
    input: "copy_8"
    output: "_val_6"
    name: "CastLike_6"
    op_type: "CastLike"
  }
  node {
    input: "_val_6"
    input: "_val_4"
    output: "_val_7"
    name: "Expand_7"
    op_type: "Expand"
  }
  node {
    output: "_val_8"
    name: "Constant_8"
    op_type: "Constant"
    attribute {
      name: "value"
      t {
        data_type: 9
        raw_data: "\000"
      }
      type: TENSOR
    }
  }
  node {
    input: "copy_8"
    input: "layer3.0.conv1.weight"
    input: "_val_7"
    input: "_val_8"
    output: "convolution_10"
    name: "_aten_convolution_onnx_9"
    op_type: "_aten_convolution_onnx"
    attribute {
      name: "dilations"
      ints: 1
      ints: 1
      type: INTS
    }
    attribute {
      name: "groups"
      i: 1
      type: INT
    }
    attribute {
      name: "output_padding"
      ints: 0
      ints: 0
      type: INTS
    }
    attribute {
      name: "pads"
      ints: 1
      ints: 1
      ints: 1
      ints: 1
      type: INTS
    }
    attribute {
      name: "strides"
      ints: 2
      ints: 2
      type: INTS
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer3___0___bn1_1"
  input: "convolution_10"
  input: "layer3.0.bn1.weight"
  input: "layer3.0.bn1.bias"
  input: "layer3.0.bn1.running_mean"
  input: "layer3.0.bn1.running_var"
  output: "_native_batch_norm_legit_no_training_10"
  node {
    output: "_val_5"
    name: "Constant_0"
    op_type: "Constant"
    attribute {
      name: "value_ints"
      ints: 0
      ints: 2
      ints: 3
      type: INTS
    }
  }
  node {
    input: "convolution_10"
    input: "layer3.0.bn1.weight"
    input: "layer3.0.bn1.bias"
    input: "layer3.0.bn1.running_mean"
    input: "layer3.0.bn1.running_var"
    output: "_native_batch_norm_legit_no_training_10"
    output: "_native_batch_norm_legit_no_training_10_1"
    output: "_native_batch_norm_legit_no_training_10_2"
    name: "_aten_native_batch_norm_inference_onnx_1"
    op_type: "_aten_native_batch_norm_inference_onnx"
    attribute {
      name: "eps"
      f: 1e-05
      type: FLOAT
    }
    attribute {
      name: "momentum"
      f: 0.1
      type: FLOAT
    }
    attribute {
      name: "training"
      i: 0
      type: INT
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torch_nn_modules_activation_ReLU_getattr_L__self___layer3___0___relu_1"
  input: "getitem_32"
  output: "copy_9"
  node {
    input: "getitem_32"
    output: "relu_9"
    name: "aten_relu_0"
    op_type: "aten_relu"
    domain: "pkg.onnxscript.torch_lib"
  }
  node {
    input: "getitem_32"
    input: "relu_9"
    output: "copy_9"
    name: "aten_copy_1"
    op_type: "aten_copy"
    attribute {
      name: "non_blocking"
      i: 0
      type: INT
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torch_nn_modules_conv_Conv2d_getattr_L__self___layer3___0___conv2_1"
  input: "copy_9"
  input: "layer3.0.conv2.weight"
  output: "convolution_11"
  node {
    input: "layer3.0.conv2.weight"
    output: "_val_2"
    name: "Shape_2"
    op_type: "Shape"
    attribute {
      name: "end"
      i: 1
      type: INT
    }
    attribute {
      name: "start"
      i: 0
      type: INT
    }
  }
  node {
    output: "_val_3"
    name: "Constant_3"
    op_type: "Constant"
    attribute {
      name: "value_ints"
      ints: 1
      type: INTS
    }
  }
  node {
    input: "_val_2"
    input: "_val_3"
    output: "_val_4"
    name: "Expand_4"
    op_type: "Expand"
  }
  node {
    output: "_val_5"
    name: "Constant_5"
    op_type: "Constant"
    attribute {
      name: "value"
      t {
        data_type: 1
        raw_data: "\000\000\000\000"
      }
      type: TENSOR
    }
  }
  node {
    input: "_val_5"
    input: "copy_9"
    output: "_val_6"
    name: "CastLike_6"
    op_type: "CastLike"
  }
  node {
    input: "_val_6"
    input: "_val_4"
    output: "_val_7"
    name: "Expand_7"
    op_type: "Expand"
  }
  node {
    output: "_val_8"
    name: "Constant_8"
    op_type: "Constant"
    attribute {
      name: "value"
      t {
        data_type: 9
        raw_data: "\000"
      }
      type: TENSOR
    }
  }
  node {
    input: "copy_9"
    input: "layer3.0.conv2.weight"
    input: "_val_7"
    input: "_val_8"
    output: "convolution_11"
    name: "_aten_convolution_onnx_9"
    op_type: "_aten_convolution_onnx"
    attribute {
      name: "dilations"
      ints: 1
      ints: 1
      type: INTS
    }
    attribute {
      name: "groups"
      i: 1
      type: INT
    }
    attribute {
      name: "output_padding"
      ints: 0
      ints: 0
      type: INTS
    }
    attribute {
      name: "pads"
      ints: 1
      ints: 1
      ints: 1
      ints: 1
      type: INTS
    }
    attribute {
      name: "strides"
      ints: 1
      ints: 1
      type: INTS
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer3___0___bn2_1"
  input: "convolution_11"
  input: "layer3.0.bn2.weight"
  input: "layer3.0.bn2.bias"
  input: "layer3.0.bn2.running_mean"
  input: "layer3.0.bn2.running_var"
  output: "_native_batch_norm_legit_no_training_11"
  node {
    output: "_val_5"
    name: "Constant_0"
    op_type: "Constant"
    attribute {
      name: "value_ints"
      ints: 0
      ints: 2
      ints: 3
      type: INTS
    }
  }
  node {
    input: "convolution_11"
    input: "layer3.0.bn2.weight"
    input: "layer3.0.bn2.bias"
    input: "layer3.0.bn2.running_mean"
    input: "layer3.0.bn2.running_var"
    output: "_native_batch_norm_legit_no_training_11"
    output: "_native_batch_norm_legit_no_training_11_1"
    output: "_native_batch_norm_legit_no_training_11_2"
    name: "_aten_native_batch_norm_inference_onnx_1"
    op_type: "_aten_native_batch_norm_inference_onnx"
    attribute {
      name: "eps"
      f: 1e-05
      type: FLOAT
    }
    attribute {
      name: "momentum"
      f: 0.1
      type: FLOAT
    }
    attribute {
      name: "training"
      i: 0
      type: INT
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torch_nn_modules_conv_Conv2d_getattr_L__self___layer3___0___downsample_0_1"
  input: "copy_8"
  input: "layer3.0.downsample.0.weight"
  output: "convolution_12"
  node {
    input: "layer3.0.downsample.0.weight"
    output: "_val_2"
    name: "Shape_2"
    op_type: "Shape"
    attribute {
      name: "end"
      i: 1
      type: INT
    }
    attribute {
      name: "start"
      i: 0
      type: INT
    }
  }
  node {
    output: "_val_3"
    name: "Constant_3"
    op_type: "Constant"
    attribute {
      name: "value_ints"
      ints: 1
      type: INTS
    }
  }
  node {
    input: "_val_2"
    input: "_val_3"
    output: "_val_4"
    name: "Expand_4"
    op_type: "Expand"
  }
  node {
    output: "_val_5"
    name: "Constant_5"
    op_type: "Constant"
    attribute {
      name: "value"
      t {
        data_type: 1
        raw_data: "\000\000\000\000"
      }
      type: TENSOR
    }
  }
  node {
    input: "_val_5"
    input: "copy_8"
    output: "_val_6"
    name: "CastLike_6"
    op_type: "CastLike"
  }
  node {
    input: "_val_6"
    input: "_val_4"
    output: "_val_7"
    name: "Expand_7"
    op_type: "Expand"
  }
  node {
    output: "_val_8"
    name: "Constant_8"
    op_type: "Constant"
    attribute {
      name: "value"
      t {
        data_type: 9
        raw_data: "\000"
      }
      type: TENSOR
    }
  }
  node {
    input: "copy_8"
    input: "layer3.0.downsample.0.weight"
    input: "_val_7"
    input: "_val_8"
    output: "convolution_12"
    name: "_aten_convolution_onnx_9"
    op_type: "_aten_convolution_onnx"
    attribute {
      name: "dilations"
      ints: 1
      ints: 1
      type: INTS
    }
    attribute {
      name: "groups"
      i: 1
      type: INT
    }
    attribute {
      name: "output_padding"
      ints: 0
      ints: 0
      type: INTS
    }
    attribute {
      name: "pads"
      ints: 0
      ints: 0
      ints: 0
      ints: 0
      type: INTS
    }
    attribute {
      name: "strides"
      ints: 2
      ints: 2
      type: INTS
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer3___0___downsample_1_1"
  input: "convolution_12"
  input: "layer3.0.downsample.1.weight"
  input: "layer3.0.downsample.1.bias"
  input: "layer3.0.downsample.1.running_mean"
  input: "layer3.0.downsample.1.running_var"
  output: "_native_batch_norm_legit_no_training_12"
  node {
    output: "_val_5"
    name: "Constant_0"
    op_type: "Constant"
    attribute {
      name: "value_ints"
      ints: 0
      ints: 2
      ints: 3
      type: INTS
    }
  }
  node {
    input: "convolution_12"
    input: "layer3.0.downsample.1.weight"
    input: "layer3.0.downsample.1.bias"
    input: "layer3.0.downsample.1.running_mean"
    input: "layer3.0.downsample.1.running_var"
    output: "_native_batch_norm_legit_no_training_12"
    output: "_native_batch_norm_legit_no_training_12_1"
    output: "_native_batch_norm_legit_no_training_12_2"
    name: "_aten_native_batch_norm_inference_onnx_1"
    op_type: "_aten_native_batch_norm_inference_onnx"
    attribute {
      name: "eps"
      f: 1e-05
      type: FLOAT
    }
    attribute {
      name: "momentum"
      f: 0.1
      type: FLOAT
    }
    attribute {
      name: "training"
      i: 0
      type: INT
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torch_nn_modules_container_Sequential_getattr_L__self___layer3___0___downsample_1"
  input: "copy_8"
  input: "layer3.0.downsample.0.weight"
  input: "layer3.0.downsample.1.weight"
  input: "layer3.0.downsample.1.bias"
  input: "layer3.0.downsample.1.running_mean"
  input: "layer3.0.downsample.1.running_var"
  output: "getattr_l__self___layer3___0___downsample_1_1"
  node {
    input: "copy_8"
    input: "layer3.0.downsample.0.weight"
    output: "getattr_l__self___layer3___0___downsample_0_1"
    name: "torch_nn_modules_conv_Conv2d_getattr_L__self___layer3___0___downsample_0_1_0"
    op_type: "torch_nn_modules_conv_Conv2d_getattr_L__self___layer3___0___downsample_0_1"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  node {
    input: "getattr_l__self___layer3___0___downsample_0_1"
    input: "layer3.0.downsample.1.weight"
    input: "layer3.0.downsample.1.bias"
    input: "layer3.0.downsample.1.running_mean"
    input: "layer3.0.downsample.1.running_var"
    output: "getattr_l__self___layer3___0___downsample_1_1"
    name: "torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer3___0___downsample_1_1_1"
    op_type: "torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer3___0___downsample_1_1"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.torch.2.2.0a0+git4ab5507"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torch_nn_modules_activation_ReLU_getattr_L__self___layer3___0___relu_2"
  input: "add_4"
  output: "copy_10"
  node {
    input: "add_4"
    output: "relu_10"
    name: "aten_relu_0"
    op_type: "aten_relu"
    domain: "pkg.onnxscript.torch_lib"
  }
  node {
    input: "add_4"
    input: "relu_10"
    output: "copy_10"
    name: "aten_copy_1"
    op_type: "aten_copy"
    attribute {
      name: "non_blocking"
      i: 0
      type: INT
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torchvision_models_resnet_BasicBlock_layer3_0_1"
  input: "copy_8"
  input: "layer3.0.conv1.weight"
  input: "layer3.0.bn1.weight"
  input: "layer3.0.bn1.bias"
  input: "layer3.0.bn1.running_mean"
  input: "layer3.0.bn1.running_var"
  input: "layer3.0.conv2.weight"
  input: "layer3.0.bn2.weight"
  input: "layer3.0.bn2.bias"
  input: "layer3.0.bn2.running_mean"
  input: "layer3.0.bn2.running_var"
  input: "layer3.0.downsample.0.weight"
  input: "layer3.0.downsample.1.weight"
  input: "layer3.0.downsample.1.bias"
  input: "layer3.0.downsample.1.running_mean"
  input: "layer3.0.downsample.1.running_var"
  output: "getattr_l__self___layer3___0___relu_2"
  node {
    input: "copy_8"
    input: "layer3.0.conv1.weight"
    output: "getattr_l__self___layer3___0___conv1_1"
    name: "torch_nn_modules_conv_Conv2d_getattr_L__self___layer3___0___conv1_1_0"
    op_type: "torch_nn_modules_conv_Conv2d_getattr_L__self___layer3___0___conv1_1"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  node {
    input: "getattr_l__self___layer3___0___conv1_1"
    input: "layer3.0.bn1.weight"
    input: "layer3.0.bn1.bias"
    input: "layer3.0.bn1.running_mean"
    input: "layer3.0.bn1.running_var"
    output: "getattr_l__self___layer3___0___bn1_1"
    name: "torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer3___0___bn1_1_1"
    op_type: "torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer3___0___bn1_1"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  node {
    input: "getattr_l__self___layer3___0___bn1_1"
    output: "getattr_l__self___layer3___0___relu_1"
    name: "torch_nn_modules_activation_ReLU_getattr_L__self___layer3___0___relu_1_2"
    op_type: "torch_nn_modules_activation_ReLU_getattr_L__self___layer3___0___relu_1"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  node {
    input: "getattr_l__self___layer3___0___relu_1"
    input: "layer3.0.conv2.weight"
    output: "getattr_l__self___layer3___0___conv2_1"
    name: "torch_nn_modules_conv_Conv2d_getattr_L__self___layer3___0___conv2_1_3"
    op_type: "torch_nn_modules_conv_Conv2d_getattr_L__self___layer3___0___conv2_1"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  node {
    input: "getattr_l__self___layer3___0___conv2_1"
    input: "layer3.0.bn2.weight"
    input: "layer3.0.bn2.bias"
    input: "layer3.0.bn2.running_mean"
    input: "layer3.0.bn2.running_var"
    output: "getattr_l__self___layer3___0___bn2_1"
    name: "torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer3___0___bn2_1_4"
    op_type: "torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer3___0___bn2_1"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  node {
    input: "copy_8"
    input: "layer3.0.downsample.0.weight"
    input: "layer3.0.downsample.1.weight"
    input: "layer3.0.downsample.1.bias"
    input: "layer3.0.downsample.1.running_mean"
    input: "layer3.0.downsample.1.running_var"
    output: "getattr_l__self___layer3___0___downsample_1"
    name: "torch_nn_modules_container_Sequential_getattr_L__self___layer3___0___downsample_1_5"
    op_type: "torch_nn_modules_container_Sequential_getattr_L__self___layer3___0___downsample_1"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  node {
    input: "getattr_l__self___layer3___0___bn2_1"
    input: "getattr_l__self___layer3___0___downsample_1"
    output: "add_4"
    name: "aten_add_6"
    op_type: "aten_add"
    attribute {
      name: "alpha"
      f: 1.0
      type: FLOAT
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  node {
    input: "add_4"
    output: "getattr_l__self___layer3___0___relu_2"
    name: "torch_nn_modules_activation_ReLU_getattr_L__self___layer3___0___relu_2_7"
    op_type: "torch_nn_modules_activation_ReLU_getattr_L__self___layer3___0___relu_2"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  opset_import {
    domain: "pkg.torch.2.2.0a0+git4ab5507"
    version: 1
  }
  domain: "pkg.torchvision.0.16.0a0+0370134"
}
functions {
  name: "torch_nn_modules_conv_Conv2d_getattr_L__self___layer3___1___conv1_1"
  input: "copy_10"
  input: "layer3.1.conv1.weight"
  output: "convolution_13"
  node {
    input: "layer3.1.conv1.weight"
    output: "_val_2"
    name: "Shape_2"
    op_type: "Shape"
    attribute {
      name: "end"
      i: 1
      type: INT
    }
    attribute {
      name: "start"
      i: 0
      type: INT
    }
  }
  node {
    output: "_val_3"
    name: "Constant_3"
    op_type: "Constant"
    attribute {
      name: "value_ints"
      ints: 1
      type: INTS
    }
  }
  node {
    input: "_val_2"
    input: "_val_3"
    output: "_val_4"
    name: "Expand_4"
    op_type: "Expand"
  }
  node {
    output: "_val_5"
    name: "Constant_5"
    op_type: "Constant"
    attribute {
      name: "value"
      t {
        data_type: 1
        raw_data: "\000\000\000\000"
      }
      type: TENSOR
    }
  }
  node {
    input: "_val_5"
    input: "copy_10"
    output: "_val_6"
    name: "CastLike_6"
    op_type: "CastLike"
  }
  node {
    input: "_val_6"
    input: "_val_4"
    output: "_val_7"
    name: "Expand_7"
    op_type: "Expand"
  }
  node {
    output: "_val_8"
    name: "Constant_8"
    op_type: "Constant"
    attribute {
      name: "value"
      t {
        data_type: 9
        raw_data: "\000"
      }
      type: TENSOR
    }
  }
  node {
    input: "copy_10"
    input: "layer3.1.conv1.weight"
    input: "_val_7"
    input: "_val_8"
    output: "convolution_13"
    name: "_aten_convolution_onnx_9"
    op_type: "_aten_convolution_onnx"
    attribute {
      name: "dilations"
      ints: 1
      ints: 1
      type: INTS
    }
    attribute {
      name: "groups"
      i: 1
      type: INT
    }
    attribute {
      name: "output_padding"
      ints: 0
      ints: 0
      type: INTS
    }
    attribute {
      name: "pads"
      ints: 1
      ints: 1
      ints: 1
      ints: 1
      type: INTS
    }
    attribute {
      name: "strides"
      ints: 1
      ints: 1
      type: INTS
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer3___1___bn1_1"
  input: "convolution_13"
  input: "layer3.1.bn1.weight"
  input: "layer3.1.bn1.bias"
  input: "layer3.1.bn1.running_mean"
  input: "layer3.1.bn1.running_var"
  output: "_native_batch_norm_legit_no_training_13"
  node {
    output: "_val_5"
    name: "Constant_0"
    op_type: "Constant"
    attribute {
      name: "value_ints"
      ints: 0
      ints: 2
      ints: 3
      type: INTS
    }
  }
  node {
    input: "convolution_13"
    input: "layer3.1.bn1.weight"
    input: "layer3.1.bn1.bias"
    input: "layer3.1.bn1.running_mean"
    input: "layer3.1.bn1.running_var"
    output: "_native_batch_norm_legit_no_training_13"
    output: "_native_batch_norm_legit_no_training_13_1"
    output: "_native_batch_norm_legit_no_training_13_2"
    name: "_aten_native_batch_norm_inference_onnx_1"
    op_type: "_aten_native_batch_norm_inference_onnx"
    attribute {
      name: "eps"
      f: 1e-05
      type: FLOAT
    }
    attribute {
      name: "momentum"
      f: 0.1
      type: FLOAT
    }
    attribute {
      name: "training"
      i: 0
      type: INT
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torch_nn_modules_activation_ReLU_getattr_L__self___layer3___1___relu_1"
  input: "getitem_41"
  output: "copy_11"
  node {
    input: "getitem_41"
    output: "relu_11"
    name: "aten_relu_0"
    op_type: "aten_relu"
    domain: "pkg.onnxscript.torch_lib"
  }
  node {
    input: "getitem_41"
    input: "relu_11"
    output: "copy_11"
    name: "aten_copy_1"
    op_type: "aten_copy"
    attribute {
      name: "non_blocking"
      i: 0
      type: INT
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torch_nn_modules_conv_Conv2d_getattr_L__self___layer3___1___conv2_1"
  input: "copy_11"
  input: "layer3.1.conv2.weight"
  output: "convolution_14"
  node {
    input: "layer3.1.conv2.weight"
    output: "_val_2"
    name: "Shape_2"
    op_type: "Shape"
    attribute {
      name: "end"
      i: 1
      type: INT
    }
    attribute {
      name: "start"
      i: 0
      type: INT
    }
  }
  node {
    output: "_val_3"
    name: "Constant_3"
    op_type: "Constant"
    attribute {
      name: "value_ints"
      ints: 1
      type: INTS
    }
  }
  node {
    input: "_val_2"
    input: "_val_3"
    output: "_val_4"
    name: "Expand_4"
    op_type: "Expand"
  }
  node {
    output: "_val_5"
    name: "Constant_5"
    op_type: "Constant"
    attribute {
      name: "value"
      t {
        data_type: 1
        raw_data: "\000\000\000\000"
      }
      type: TENSOR
    }
  }
  node {
    input: "_val_5"
    input: "copy_11"
    output: "_val_6"
    name: "CastLike_6"
    op_type: "CastLike"
  }
  node {
    input: "_val_6"
    input: "_val_4"
    output: "_val_7"
    name: "Expand_7"
    op_type: "Expand"
  }
  node {
    output: "_val_8"
    name: "Constant_8"
    op_type: "Constant"
    attribute {
      name: "value"
      t {
        data_type: 9
        raw_data: "\000"
      }
      type: TENSOR
    }
  }
  node {
    input: "copy_11"
    input: "layer3.1.conv2.weight"
    input: "_val_7"
    input: "_val_8"
    output: "convolution_14"
    name: "_aten_convolution_onnx_9"
    op_type: "_aten_convolution_onnx"
    attribute {
      name: "dilations"
      ints: 1
      ints: 1
      type: INTS
    }
    attribute {
      name: "groups"
      i: 1
      type: INT
    }
    attribute {
      name: "output_padding"
      ints: 0
      ints: 0
      type: INTS
    }
    attribute {
      name: "pads"
      ints: 1
      ints: 1
      ints: 1
      ints: 1
      type: INTS
    }
    attribute {
      name: "strides"
      ints: 1
      ints: 1
      type: INTS
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer3___1___bn2_1"
  input: "convolution_14"
  input: "layer3.1.bn2.weight"
  input: "layer3.1.bn2.bias"
  input: "layer3.1.bn2.running_mean"
  input: "layer3.1.bn2.running_var"
  output: "_native_batch_norm_legit_no_training_14"
  node {
    output: "_val_5"
    name: "Constant_0"
    op_type: "Constant"
    attribute {
      name: "value_ints"
      ints: 0
      ints: 2
      ints: 3
      type: INTS
    }
  }
  node {
    input: "convolution_14"
    input: "layer3.1.bn2.weight"
    input: "layer3.1.bn2.bias"
    input: "layer3.1.bn2.running_mean"
    input: "layer3.1.bn2.running_var"
    output: "_native_batch_norm_legit_no_training_14"
    output: "_native_batch_norm_legit_no_training_14_1"
    output: "_native_batch_norm_legit_no_training_14_2"
    name: "_aten_native_batch_norm_inference_onnx_1"
    op_type: "_aten_native_batch_norm_inference_onnx"
    attribute {
      name: "eps"
      f: 1e-05
      type: FLOAT
    }
    attribute {
      name: "momentum"
      f: 0.1
      type: FLOAT
    }
    attribute {
      name: "training"
      i: 0
      type: INT
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torch_nn_modules_activation_ReLU_getattr_L__self___layer3___1___relu_2"
  input: "add_5"
  output: "copy_12"
  node {
    input: "add_5"
    output: "relu_12"
    name: "aten_relu_0"
    op_type: "aten_relu"
    domain: "pkg.onnxscript.torch_lib"
  }
  node {
    input: "add_5"
    input: "relu_12"
    output: "copy_12"
    name: "aten_copy_1"
    op_type: "aten_copy"
    attribute {
      name: "non_blocking"
      i: 0
      type: INT
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torchvision_models_resnet_BasicBlock_layer3_1_1"
  input: "copy_10"
  input: "layer3.1.conv1.weight"
  input: "layer3.1.bn1.weight"
  input: "layer3.1.bn1.bias"
  input: "layer3.1.bn1.running_mean"
  input: "layer3.1.bn1.running_var"
  input: "layer3.1.conv2.weight"
  input: "layer3.1.bn2.weight"
  input: "layer3.1.bn2.bias"
  input: "layer3.1.bn2.running_mean"
  input: "layer3.1.bn2.running_var"
  output: "getattr_l__self___layer3___1___relu_2"
  node {
    input: "copy_10"
    input: "layer3.1.conv1.weight"
    output: "getattr_l__self___layer3___1___conv1_1"
    name: "torch_nn_modules_conv_Conv2d_getattr_L__self___layer3___1___conv1_1_0"
    op_type: "torch_nn_modules_conv_Conv2d_getattr_L__self___layer3___1___conv1_1"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  node {
    input: "getattr_l__self___layer3___1___conv1_1"
    input: "layer3.1.bn1.weight"
    input: "layer3.1.bn1.bias"
    input: "layer3.1.bn1.running_mean"
    input: "layer3.1.bn1.running_var"
    output: "getattr_l__self___layer3___1___bn1_1"
    name: "torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer3___1___bn1_1_1"
    op_type: "torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer3___1___bn1_1"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  node {
    input: "getattr_l__self___layer3___1___bn1_1"
    output: "getattr_l__self___layer3___1___relu_1"
    name: "torch_nn_modules_activation_ReLU_getattr_L__self___layer3___1___relu_1_2"
    op_type: "torch_nn_modules_activation_ReLU_getattr_L__self___layer3___1___relu_1"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  node {
    input: "getattr_l__self___layer3___1___relu_1"
    input: "layer3.1.conv2.weight"
    output: "getattr_l__self___layer3___1___conv2_1"
    name: "torch_nn_modules_conv_Conv2d_getattr_L__self___layer3___1___conv2_1_3"
    op_type: "torch_nn_modules_conv_Conv2d_getattr_L__self___layer3___1___conv2_1"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  node {
    input: "getattr_l__self___layer3___1___conv2_1"
    input: "layer3.1.bn2.weight"
    input: "layer3.1.bn2.bias"
    input: "layer3.1.bn2.running_mean"
    input: "layer3.1.bn2.running_var"
    output: "getattr_l__self___layer3___1___bn2_1"
    name: "torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer3___1___bn2_1_4"
    op_type: "torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer3___1___bn2_1"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  node {
    input: "getattr_l__self___layer3___1___bn2_1"
    input: "copy_10"
    output: "add_5"
    name: "aten_add_5"
    op_type: "aten_add"
    attribute {
      name: "alpha"
      f: 1.0
      type: FLOAT
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  node {
    input: "add_5"
    output: "getattr_l__self___layer3___1___relu_2"
    name: "torch_nn_modules_activation_ReLU_getattr_L__self___layer3___1___relu_2_6"
    op_type: "torch_nn_modules_activation_ReLU_getattr_L__self___layer3___1___relu_2"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  opset_import {
    domain: "pkg.torch.2.2.0a0+git4ab5507"
    version: 1
  }
  domain: "pkg.torchvision.0.16.0a0+0370134"
}
functions {
  name: "torch_nn_modules_container_Sequential_layer3_1"
  input: "copy_8"
  input: "layer3.0.conv1.weight"
  input: "layer3.0.bn1.weight"
  input: "layer3.0.bn1.bias"
  input: "layer3.0.bn1.running_mean"
  input: "layer3.0.bn1.running_var"
  input: "layer3.0.conv2.weight"
  input: "layer3.0.bn2.weight"
  input: "layer3.0.bn2.bias"
  input: "layer3.0.bn2.running_mean"
  input: "layer3.0.bn2.running_var"
  input: "layer3.0.downsample.0.weight"
  input: "layer3.0.downsample.1.weight"
  input: "layer3.0.downsample.1.bias"
  input: "layer3.0.downsample.1.running_mean"
  input: "layer3.0.downsample.1.running_var"
  input: "layer3.1.conv1.weight"
  input: "layer3.1.bn1.weight"
  input: "layer3.1.bn1.bias"
  input: "layer3.1.bn1.running_mean"
  input: "layer3.1.bn1.running_var"
  input: "layer3.1.conv2.weight"
  input: "layer3.1.bn2.weight"
  input: "layer3.1.bn2.bias"
  input: "layer3.1.bn2.running_mean"
  input: "layer3.1.bn2.running_var"
  output: "layer3_1_1"
  node {
    input: "copy_8"
    input: "layer3.0.conv1.weight"
    input: "layer3.0.bn1.weight"
    input: "layer3.0.bn1.bias"
    input: "layer3.0.bn1.running_mean"
    input: "layer3.0.bn1.running_var"
    input: "layer3.0.conv2.weight"
    input: "layer3.0.bn2.weight"
    input: "layer3.0.bn2.bias"
    input: "layer3.0.bn2.running_mean"
    input: "layer3.0.bn2.running_var"
    input: "layer3.0.downsample.0.weight"
    input: "layer3.0.downsample.1.weight"
    input: "layer3.0.downsample.1.bias"
    input: "layer3.0.downsample.1.running_mean"
    input: "layer3.0.downsample.1.running_var"
    output: "layer3_0_1"
    name: "torchvision_models_resnet_BasicBlock_layer3_0_1_0"
    op_type: "torchvision_models_resnet_BasicBlock_layer3_0_1"
    domain: "pkg.torchvision.0.16.0a0+0370134"
  }
  node {
    input: "layer3_0_1"
    input: "layer3.1.conv1.weight"
    input: "layer3.1.bn1.weight"
    input: "layer3.1.bn1.bias"
    input: "layer3.1.bn1.running_mean"
    input: "layer3.1.bn1.running_var"
    input: "layer3.1.conv2.weight"
    input: "layer3.1.bn2.weight"
    input: "layer3.1.bn2.bias"
    input: "layer3.1.bn2.running_mean"
    input: "layer3.1.bn2.running_var"
    output: "layer3_1_1"
    name: "torchvision_models_resnet_BasicBlock_layer3_1_1_1"
    op_type: "torchvision_models_resnet_BasicBlock_layer3_1_1"
    domain: "pkg.torchvision.0.16.0a0+0370134"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.torchvision.0.16.0a0+0370134"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torch_nn_modules_conv_Conv2d_getattr_L__self___layer4___0___conv1_1"
  input: "copy_12"
  input: "layer4.0.conv1.weight"
  output: "convolution_15"
  node {
    input: "layer4.0.conv1.weight"
    output: "_val_2"
    name: "Shape_2"
    op_type: "Shape"
    attribute {
      name: "end"
      i: 1
      type: INT
    }
    attribute {
      name: "start"
      i: 0
      type: INT
    }
  }
  node {
    output: "_val_3"
    name: "Constant_3"
    op_type: "Constant"
    attribute {
      name: "value_ints"
      ints: 1
      type: INTS
    }
  }
  node {
    input: "_val_2"
    input: "_val_3"
    output: "_val_4"
    name: "Expand_4"
    op_type: "Expand"
  }
  node {
    output: "_val_5"
    name: "Constant_5"
    op_type: "Constant"
    attribute {
      name: "value"
      t {
        data_type: 1
        raw_data: "\000\000\000\000"
      }
      type: TENSOR
    }
  }
  node {
    input: "_val_5"
    input: "copy_12"
    output: "_val_6"
    name: "CastLike_6"
    op_type: "CastLike"
  }
  node {
    input: "_val_6"
    input: "_val_4"
    output: "_val_7"
    name: "Expand_7"
    op_type: "Expand"
  }
  node {
    output: "_val_8"
    name: "Constant_8"
    op_type: "Constant"
    attribute {
      name: "value"
      t {
        data_type: 9
        raw_data: "\000"
      }
      type: TENSOR
    }
  }
  node {
    input: "copy_12"
    input: "layer4.0.conv1.weight"
    input: "_val_7"
    input: "_val_8"
    output: "convolution_15"
    name: "_aten_convolution_onnx_9"
    op_type: "_aten_convolution_onnx"
    attribute {
      name: "dilations"
      ints: 1
      ints: 1
      type: INTS
    }
    attribute {
      name: "groups"
      i: 1
      type: INT
    }
    attribute {
      name: "output_padding"
      ints: 0
      ints: 0
      type: INTS
    }
    attribute {
      name: "pads"
      ints: 1
      ints: 1
      ints: 1
      ints: 1
      type: INTS
    }
    attribute {
      name: "strides"
      ints: 2
      ints: 2
      type: INTS
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer4___0___bn1_1"
  input: "convolution_15"
  input: "layer4.0.bn1.weight"
  input: "layer4.0.bn1.bias"
  input: "layer4.0.bn1.running_mean"
  input: "layer4.0.bn1.running_var"
  output: "_native_batch_norm_legit_no_training_15"
  node {
    output: "_val_5"
    name: "Constant_0"
    op_type: "Constant"
    attribute {
      name: "value_ints"
      ints: 0
      ints: 2
      ints: 3
      type: INTS
    }
  }
  node {
    input: "convolution_15"
    input: "layer4.0.bn1.weight"
    input: "layer4.0.bn1.bias"
    input: "layer4.0.bn1.running_mean"
    input: "layer4.0.bn1.running_var"
    output: "_native_batch_norm_legit_no_training_15"
    output: "_native_batch_norm_legit_no_training_15_1"
    output: "_native_batch_norm_legit_no_training_15_2"
    name: "_aten_native_batch_norm_inference_onnx_1"
    op_type: "_aten_native_batch_norm_inference_onnx"
    attribute {
      name: "eps"
      f: 1e-05
      type: FLOAT
    }
    attribute {
      name: "momentum"
      f: 0.1
      type: FLOAT
    }
    attribute {
      name: "training"
      i: 0
      type: INT
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torch_nn_modules_activation_ReLU_getattr_L__self___layer4___0___relu_1"
  input: "getitem_47"
  output: "copy_13"
  node {
    input: "getitem_47"
    output: "relu_13"
    name: "aten_relu_0"
    op_type: "aten_relu"
    domain: "pkg.onnxscript.torch_lib"
  }
  node {
    input: "getitem_47"
    input: "relu_13"
    output: "copy_13"
    name: "aten_copy_1"
    op_type: "aten_copy"
    attribute {
      name: "non_blocking"
      i: 0
      type: INT
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torch_nn_modules_conv_Conv2d_getattr_L__self___layer4___0___conv2_1"
  input: "copy_13"
  input: "layer4.0.conv2.weight"
  output: "convolution_16"
  node {
    input: "layer4.0.conv2.weight"
    output: "_val_2"
    name: "Shape_2"
    op_type: "Shape"
    attribute {
      name: "end"
      i: 1
      type: INT
    }
    attribute {
      name: "start"
      i: 0
      type: INT
    }
  }
  node {
    output: "_val_3"
    name: "Constant_3"
    op_type: "Constant"
    attribute {
      name: "value_ints"
      ints: 1
      type: INTS
    }
  }
  node {
    input: "_val_2"
    input: "_val_3"
    output: "_val_4"
    name: "Expand_4"
    op_type: "Expand"
  }
  node {
    output: "_val_5"
    name: "Constant_5"
    op_type: "Constant"
    attribute {
      name: "value"
      t {
        data_type: 1
        raw_data: "\000\000\000\000"
      }
      type: TENSOR
    }
  }
  node {
    input: "_val_5"
    input: "copy_13"
    output: "_val_6"
    name: "CastLike_6"
    op_type: "CastLike"
  }
  node {
    input: "_val_6"
    input: "_val_4"
    output: "_val_7"
    name: "Expand_7"
    op_type: "Expand"
  }
  node {
    output: "_val_8"
    name: "Constant_8"
    op_type: "Constant"
    attribute {
      name: "value"
      t {
        data_type: 9
        raw_data: "\000"
      }
      type: TENSOR
    }
  }
  node {
    input: "copy_13"
    input: "layer4.0.conv2.weight"
    input: "_val_7"
    input: "_val_8"
    output: "convolution_16"
    name: "_aten_convolution_onnx_9"
    op_type: "_aten_convolution_onnx"
    attribute {
      name: "dilations"
      ints: 1
      ints: 1
      type: INTS
    }
    attribute {
      name: "groups"
      i: 1
      type: INT
    }
    attribute {
      name: "output_padding"
      ints: 0
      ints: 0
      type: INTS
    }
    attribute {
      name: "pads"
      ints: 1
      ints: 1
      ints: 1
      ints: 1
      type: INTS
    }
    attribute {
      name: "strides"
      ints: 1
      ints: 1
      type: INTS
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer4___0___bn2_1"
  input: "convolution_16"
  input: "layer4.0.bn2.weight"
  input: "layer4.0.bn2.bias"
  input: "layer4.0.bn2.running_mean"
  input: "layer4.0.bn2.running_var"
  output: "_native_batch_norm_legit_no_training_16"
  node {
    output: "_val_5"
    name: "Constant_0"
    op_type: "Constant"
    attribute {
      name: "value_ints"
      ints: 0
      ints: 2
      ints: 3
      type: INTS
    }
  }
  node {
    input: "convolution_16"
    input: "layer4.0.bn2.weight"
    input: "layer4.0.bn2.bias"
    input: "layer4.0.bn2.running_mean"
    input: "layer4.0.bn2.running_var"
    output: "_native_batch_norm_legit_no_training_16"
    output: "_native_batch_norm_legit_no_training_16_1"
    output: "_native_batch_norm_legit_no_training_16_2"
    name: "_aten_native_batch_norm_inference_onnx_1"
    op_type: "_aten_native_batch_norm_inference_onnx"
    attribute {
      name: "eps"
      f: 1e-05
      type: FLOAT
    }
    attribute {
      name: "momentum"
      f: 0.1
      type: FLOAT
    }
    attribute {
      name: "training"
      i: 0
      type: INT
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torch_nn_modules_conv_Conv2d_getattr_L__self___layer4___0___downsample_0_1"
  input: "copy_12"
  input: "layer4.0.downsample.0.weight"
  output: "convolution_17"
  node {
    input: "layer4.0.downsample.0.weight"
    output: "_val_2"
    name: "Shape_2"
    op_type: "Shape"
    attribute {
      name: "end"
      i: 1
      type: INT
    }
    attribute {
      name: "start"
      i: 0
      type: INT
    }
  }
  node {
    output: "_val_3"
    name: "Constant_3"
    op_type: "Constant"
    attribute {
      name: "value_ints"
      ints: 1
      type: INTS
    }
  }
  node {
    input: "_val_2"
    input: "_val_3"
    output: "_val_4"
    name: "Expand_4"
    op_type: "Expand"
  }
  node {
    output: "_val_5"
    name: "Constant_5"
    op_type: "Constant"
    attribute {
      name: "value"
      t {
        data_type: 1
        raw_data: "\000\000\000\000"
      }
      type: TENSOR
    }
  }
  node {
    input: "_val_5"
    input: "copy_12"
    output: "_val_6"
    name: "CastLike_6"
    op_type: "CastLike"
  }
  node {
    input: "_val_6"
    input: "_val_4"
    output: "_val_7"
    name: "Expand_7"
    op_type: "Expand"
  }
  node {
    output: "_val_8"
    name: "Constant_8"
    op_type: "Constant"
    attribute {
      name: "value"
      t {
        data_type: 9
        raw_data: "\000"
      }
      type: TENSOR
    }
  }
  node {
    input: "copy_12"
    input: "layer4.0.downsample.0.weight"
    input: "_val_7"
    input: "_val_8"
    output: "convolution_17"
    name: "_aten_convolution_onnx_9"
    op_type: "_aten_convolution_onnx"
    attribute {
      name: "dilations"
      ints: 1
      ints: 1
      type: INTS
    }
    attribute {
      name: "groups"
      i: 1
      type: INT
    }
    attribute {
      name: "output_padding"
      ints: 0
      ints: 0
      type: INTS
    }
    attribute {
      name: "pads"
      ints: 0
      ints: 0
      ints: 0
      ints: 0
      type: INTS
    }
    attribute {
      name: "strides"
      ints: 2
      ints: 2
      type: INTS
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer4___0___downsample_1_1"
  input: "convolution_17"
  input: "layer4.0.downsample.1.weight"
  input: "layer4.0.downsample.1.bias"
  input: "layer4.0.downsample.1.running_mean"
  input: "layer4.0.downsample.1.running_var"
  output: "_native_batch_norm_legit_no_training_17"
  node {
    output: "_val_5"
    name: "Constant_0"
    op_type: "Constant"
    attribute {
      name: "value_ints"
      ints: 0
      ints: 2
      ints: 3
      type: INTS
    }
  }
  node {
    input: "convolution_17"
    input: "layer4.0.downsample.1.weight"
    input: "layer4.0.downsample.1.bias"
    input: "layer4.0.downsample.1.running_mean"
    input: "layer4.0.downsample.1.running_var"
    output: "_native_batch_norm_legit_no_training_17"
    output: "_native_batch_norm_legit_no_training_17_1"
    output: "_native_batch_norm_legit_no_training_17_2"
    name: "_aten_native_batch_norm_inference_onnx_1"
    op_type: "_aten_native_batch_norm_inference_onnx"
    attribute {
      name: "eps"
      f: 1e-05
      type: FLOAT
    }
    attribute {
      name: "momentum"
      f: 0.1
      type: FLOAT
    }
    attribute {
      name: "training"
      i: 0
      type: INT
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torch_nn_modules_container_Sequential_getattr_L__self___layer4___0___downsample_1"
  input: "copy_12"
  input: "layer4.0.downsample.0.weight"
  input: "layer4.0.downsample.1.weight"
  input: "layer4.0.downsample.1.bias"
  input: "layer4.0.downsample.1.running_mean"
  input: "layer4.0.downsample.1.running_var"
  output: "getattr_l__self___layer4___0___downsample_1_1"
  node {
    input: "copy_12"
    input: "layer4.0.downsample.0.weight"
    output: "getattr_l__self___layer4___0___downsample_0_1"
    name: "torch_nn_modules_conv_Conv2d_getattr_L__self___layer4___0___downsample_0_1_0"
    op_type: "torch_nn_modules_conv_Conv2d_getattr_L__self___layer4___0___downsample_0_1"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  node {
    input: "getattr_l__self___layer4___0___downsample_0_1"
    input: "layer4.0.downsample.1.weight"
    input: "layer4.0.downsample.1.bias"
    input: "layer4.0.downsample.1.running_mean"
    input: "layer4.0.downsample.1.running_var"
    output: "getattr_l__self___layer4___0___downsample_1_1"
    name: "torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer4___0___downsample_1_1_1"
    op_type: "torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer4___0___downsample_1_1"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.torch.2.2.0a0+git4ab5507"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torch_nn_modules_activation_ReLU_getattr_L__self___layer4___0___relu_2"
  input: "add_6"
  output: "copy_14"
  node {
    input: "add_6"
    output: "relu_14"
    name: "aten_relu_0"
    op_type: "aten_relu"
    domain: "pkg.onnxscript.torch_lib"
  }
  node {
    input: "add_6"
    input: "relu_14"
    output: "copy_14"
    name: "aten_copy_1"
    op_type: "aten_copy"
    attribute {
      name: "non_blocking"
      i: 0
      type: INT
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torchvision_models_resnet_BasicBlock_layer4_0_1"
  input: "copy_12"
  input: "layer4.0.conv1.weight"
  input: "layer4.0.bn1.weight"
  input: "layer4.0.bn1.bias"
  input: "layer4.0.bn1.running_mean"
  input: "layer4.0.bn1.running_var"
  input: "layer4.0.conv2.weight"
  input: "layer4.0.bn2.weight"
  input: "layer4.0.bn2.bias"
  input: "layer4.0.bn2.running_mean"
  input: "layer4.0.bn2.running_var"
  input: "layer4.0.downsample.0.weight"
  input: "layer4.0.downsample.1.weight"
  input: "layer4.0.downsample.1.bias"
  input: "layer4.0.downsample.1.running_mean"
  input: "layer4.0.downsample.1.running_var"
  output: "getattr_l__self___layer4___0___relu_2"
  node {
    input: "copy_12"
    input: "layer4.0.conv1.weight"
    output: "getattr_l__self___layer4___0___conv1_1"
    name: "torch_nn_modules_conv_Conv2d_getattr_L__self___layer4___0___conv1_1_0"
    op_type: "torch_nn_modules_conv_Conv2d_getattr_L__self___layer4___0___conv1_1"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  node {
    input: "getattr_l__self___layer4___0___conv1_1"
    input: "layer4.0.bn1.weight"
    input: "layer4.0.bn1.bias"
    input: "layer4.0.bn1.running_mean"
    input: "layer4.0.bn1.running_var"
    output: "getattr_l__self___layer4___0___bn1_1"
    name: "torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer4___0___bn1_1_1"
    op_type: "torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer4___0___bn1_1"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  node {
    input: "getattr_l__self___layer4___0___bn1_1"
    output: "getattr_l__self___layer4___0___relu_1"
    name: "torch_nn_modules_activation_ReLU_getattr_L__self___layer4___0___relu_1_2"
    op_type: "torch_nn_modules_activation_ReLU_getattr_L__self___layer4___0___relu_1"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  node {
    input: "getattr_l__self___layer4___0___relu_1"
    input: "layer4.0.conv2.weight"
    output: "getattr_l__self___layer4___0___conv2_1"
    name: "torch_nn_modules_conv_Conv2d_getattr_L__self___layer4___0___conv2_1_3"
    op_type: "torch_nn_modules_conv_Conv2d_getattr_L__self___layer4___0___conv2_1"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  node {
    input: "getattr_l__self___layer4___0___conv2_1"
    input: "layer4.0.bn2.weight"
    input: "layer4.0.bn2.bias"
    input: "layer4.0.bn2.running_mean"
    input: "layer4.0.bn2.running_var"
    output: "getattr_l__self___layer4___0___bn2_1"
    name: "torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer4___0___bn2_1_4"
    op_type: "torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer4___0___bn2_1"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  node {
    input: "copy_12"
    input: "layer4.0.downsample.0.weight"
    input: "layer4.0.downsample.1.weight"
    input: "layer4.0.downsample.1.bias"
    input: "layer4.0.downsample.1.running_mean"
    input: "layer4.0.downsample.1.running_var"
    output: "getattr_l__self___layer4___0___downsample_1"
    name: "torch_nn_modules_container_Sequential_getattr_L__self___layer4___0___downsample_1_5"
    op_type: "torch_nn_modules_container_Sequential_getattr_L__self___layer4___0___downsample_1"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  node {
    input: "getattr_l__self___layer4___0___bn2_1"
    input: "getattr_l__self___layer4___0___downsample_1"
    output: "add_6"
    name: "aten_add_6"
    op_type: "aten_add"
    attribute {
      name: "alpha"
      f: 1.0
      type: FLOAT
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  node {
    input: "add_6"
    output: "getattr_l__self___layer4___0___relu_2"
    name: "torch_nn_modules_activation_ReLU_getattr_L__self___layer4___0___relu_2_7"
    op_type: "torch_nn_modules_activation_ReLU_getattr_L__self___layer4___0___relu_2"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  opset_import {
    domain: "pkg.torch.2.2.0a0+git4ab5507"
    version: 1
  }
  domain: "pkg.torchvision.0.16.0a0+0370134"
}
functions {
  name: "torch_nn_modules_conv_Conv2d_getattr_L__self___layer4___1___conv1_1"
  input: "copy_14"
  input: "layer4.1.conv1.weight"
  output: "convolution_18"
  node {
    input: "layer4.1.conv1.weight"
    output: "_val_2"
    name: "Shape_2"
    op_type: "Shape"
    attribute {
      name: "end"
      i: 1
      type: INT
    }
    attribute {
      name: "start"
      i: 0
      type: INT
    }
  }
  node {
    output: "_val_3"
    name: "Constant_3"
    op_type: "Constant"
    attribute {
      name: "value_ints"
      ints: 1
      type: INTS
    }
  }
  node {
    input: "_val_2"
    input: "_val_3"
    output: "_val_4"
    name: "Expand_4"
    op_type: "Expand"
  }
  node {
    output: "_val_5"
    name: "Constant_5"
    op_type: "Constant"
    attribute {
      name: "value"
      t {
        data_type: 1
        raw_data: "\000\000\000\000"
      }
      type: TENSOR
    }
  }
  node {
    input: "_val_5"
    input: "copy_14"
    output: "_val_6"
    name: "CastLike_6"
    op_type: "CastLike"
  }
  node {
    input: "_val_6"
    input: "_val_4"
    output: "_val_7"
    name: "Expand_7"
    op_type: "Expand"
  }
  node {
    output: "_val_8"
    name: "Constant_8"
    op_type: "Constant"
    attribute {
      name: "value"
      t {
        data_type: 9
        raw_data: "\000"
      }
      type: TENSOR
    }
  }
  node {
    input: "copy_14"
    input: "layer4.1.conv1.weight"
    input: "_val_7"
    input: "_val_8"
    output: "convolution_18"
    name: "_aten_convolution_onnx_9"
    op_type: "_aten_convolution_onnx"
    attribute {
      name: "dilations"
      ints: 1
      ints: 1
      type: INTS
    }
    attribute {
      name: "groups"
      i: 1
      type: INT
    }
    attribute {
      name: "output_padding"
      ints: 0
      ints: 0
      type: INTS
    }
    attribute {
      name: "pads"
      ints: 1
      ints: 1
      ints: 1
      ints: 1
      type: INTS
    }
    attribute {
      name: "strides"
      ints: 1
      ints: 1
      type: INTS
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer4___1___bn1_1"
  input: "convolution_18"
  input: "layer4.1.bn1.weight"
  input: "layer4.1.bn1.bias"
  input: "layer4.1.bn1.running_mean"
  input: "layer4.1.bn1.running_var"
  output: "_native_batch_norm_legit_no_training_18"
  node {
    output: "_val_5"
    name: "Constant_0"
    op_type: "Constant"
    attribute {
      name: "value_ints"
      ints: 0
      ints: 2
      ints: 3
      type: INTS
    }
  }
  node {
    input: "convolution_18"
    input: "layer4.1.bn1.weight"
    input: "layer4.1.bn1.bias"
    input: "layer4.1.bn1.running_mean"
    input: "layer4.1.bn1.running_var"
    output: "_native_batch_norm_legit_no_training_18"
    output: "_native_batch_norm_legit_no_training_18_1"
    output: "_native_batch_norm_legit_no_training_18_2"
    name: "_aten_native_batch_norm_inference_onnx_1"
    op_type: "_aten_native_batch_norm_inference_onnx"
    attribute {
      name: "eps"
      f: 1e-05
      type: FLOAT
    }
    attribute {
      name: "momentum"
      f: 0.1
      type: FLOAT
    }
    attribute {
      name: "training"
      i: 0
      type: INT
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torch_nn_modules_activation_ReLU_getattr_L__self___layer4___1___relu_1"
  input: "getitem_56"
  output: "copy_15"
  node {
    input: "getitem_56"
    output: "relu_15"
    name: "aten_relu_0"
    op_type: "aten_relu"
    domain: "pkg.onnxscript.torch_lib"
  }
  node {
    input: "getitem_56"
    input: "relu_15"
    output: "copy_15"
    name: "aten_copy_1"
    op_type: "aten_copy"
    attribute {
      name: "non_blocking"
      i: 0
      type: INT
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torch_nn_modules_conv_Conv2d_getattr_L__self___layer4___1___conv2_1"
  input: "copy_15"
  input: "layer4.1.conv2.weight"
  output: "convolution_19"
  node {
    input: "layer4.1.conv2.weight"
    output: "_val_2"
    name: "Shape_2"
    op_type: "Shape"
    attribute {
      name: "end"
      i: 1
      type: INT
    }
    attribute {
      name: "start"
      i: 0
      type: INT
    }
  }
  node {
    output: "_val_3"
    name: "Constant_3"
    op_type: "Constant"
    attribute {
      name: "value_ints"
      ints: 1
      type: INTS
    }
  }
  node {
    input: "_val_2"
    input: "_val_3"
    output: "_val_4"
    name: "Expand_4"
    op_type: "Expand"
  }
  node {
    output: "_val_5"
    name: "Constant_5"
    op_type: "Constant"
    attribute {
      name: "value"
      t {
        data_type: 1
        raw_data: "\000\000\000\000"
      }
      type: TENSOR
    }
  }
  node {
    input: "_val_5"
    input: "copy_15"
    output: "_val_6"
    name: "CastLike_6"
    op_type: "CastLike"
  }
  node {
    input: "_val_6"
    input: "_val_4"
    output: "_val_7"
    name: "Expand_7"
    op_type: "Expand"
  }
  node {
    output: "_val_8"
    name: "Constant_8"
    op_type: "Constant"
    attribute {
      name: "value"
      t {
        data_type: 9
        raw_data: "\000"
      }
      type: TENSOR
    }
  }
  node {
    input: "copy_15"
    input: "layer4.1.conv2.weight"
    input: "_val_7"
    input: "_val_8"
    output: "convolution_19"
    name: "_aten_convolution_onnx_9"
    op_type: "_aten_convolution_onnx"
    attribute {
      name: "dilations"
      ints: 1
      ints: 1
      type: INTS
    }
    attribute {
      name: "groups"
      i: 1
      type: INT
    }
    attribute {
      name: "output_padding"
      ints: 0
      ints: 0
      type: INTS
    }
    attribute {
      name: "pads"
      ints: 1
      ints: 1
      ints: 1
      ints: 1
      type: INTS
    }
    attribute {
      name: "strides"
      ints: 1
      ints: 1
      type: INTS
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer4___1___bn2_1"
  input: "convolution_19"
  input: "layer4.1.bn2.weight"
  input: "layer4.1.bn2.bias"
  input: "layer4.1.bn2.running_mean"
  input: "layer4.1.bn2.running_var"
  output: "_native_batch_norm_legit_no_training_19"
  node {
    output: "_val_5"
    name: "Constant_0"
    op_type: "Constant"
    attribute {
      name: "value_ints"
      ints: 0
      ints: 2
      ints: 3
      type: INTS
    }
  }
  node {
    input: "convolution_19"
    input: "layer4.1.bn2.weight"
    input: "layer4.1.bn2.bias"
    input: "layer4.1.bn2.running_mean"
    input: "layer4.1.bn2.running_var"
    output: "_native_batch_norm_legit_no_training_19"
    output: "_native_batch_norm_legit_no_training_19_1"
    output: "_native_batch_norm_legit_no_training_19_2"
    name: "_aten_native_batch_norm_inference_onnx_1"
    op_type: "_aten_native_batch_norm_inference_onnx"
    attribute {
      name: "eps"
      f: 1e-05
      type: FLOAT
    }
    attribute {
      name: "momentum"
      f: 0.1
      type: FLOAT
    }
    attribute {
      name: "training"
      i: 0
      type: INT
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torch_nn_modules_activation_ReLU_getattr_L__self___layer4___1___relu_2"
  input: "add_7"
  output: "copy_16"
  node {
    input: "add_7"
    output: "relu_16"
    name: "aten_relu_0"
    op_type: "aten_relu"
    domain: "pkg.onnxscript.torch_lib"
  }
  node {
    input: "add_7"
    input: "relu_16"
    output: "copy_16"
    name: "aten_copy_1"
    op_type: "aten_copy"
    attribute {
      name: "non_blocking"
      i: 0
      type: INT
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "torchvision_models_resnet_BasicBlock_layer4_1_1"
  input: "copy_14"
  input: "layer4.1.conv1.weight"
  input: "layer4.1.bn1.weight"
  input: "layer4.1.bn1.bias"
  input: "layer4.1.bn1.running_mean"
  input: "layer4.1.bn1.running_var"
  input: "layer4.1.conv2.weight"
  input: "layer4.1.bn2.weight"
  input: "layer4.1.bn2.bias"
  input: "layer4.1.bn2.running_mean"
  input: "layer4.1.bn2.running_var"
  output: "getattr_l__self___layer4___1___relu_2"
  node {
    input: "copy_14"
    input: "layer4.1.conv1.weight"
    output: "getattr_l__self___layer4___1___conv1_1"
    name: "torch_nn_modules_conv_Conv2d_getattr_L__self___layer4___1___conv1_1_0"
    op_type: "torch_nn_modules_conv_Conv2d_getattr_L__self___layer4___1___conv1_1"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  node {
    input: "getattr_l__self___layer4___1___conv1_1"
    input: "layer4.1.bn1.weight"
    input: "layer4.1.bn1.bias"
    input: "layer4.1.bn1.running_mean"
    input: "layer4.1.bn1.running_var"
    output: "getattr_l__self___layer4___1___bn1_1"
    name: "torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer4___1___bn1_1_1"
    op_type: "torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer4___1___bn1_1"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  node {
    input: "getattr_l__self___layer4___1___bn1_1"
    output: "getattr_l__self___layer4___1___relu_1"
    name: "torch_nn_modules_activation_ReLU_getattr_L__self___layer4___1___relu_1_2"
    op_type: "torch_nn_modules_activation_ReLU_getattr_L__self___layer4___1___relu_1"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  node {
    input: "getattr_l__self___layer4___1___relu_1"
    input: "layer4.1.conv2.weight"
    output: "getattr_l__self___layer4___1___conv2_1"
    name: "torch_nn_modules_conv_Conv2d_getattr_L__self___layer4___1___conv2_1_3"
    op_type: "torch_nn_modules_conv_Conv2d_getattr_L__self___layer4___1___conv2_1"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  node {
    input: "getattr_l__self___layer4___1___conv2_1"
    input: "layer4.1.bn2.weight"
    input: "layer4.1.bn2.bias"
    input: "layer4.1.bn2.running_mean"
    input: "layer4.1.bn2.running_var"
    output: "getattr_l__self___layer4___1___bn2_1"
    name: "torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer4___1___bn2_1_4"
    op_type: "torch_nn_modules_batchnorm_BatchNorm2d_getattr_L__self___layer4___1___bn2_1"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  node {
    input: "getattr_l__self___layer4___1___bn2_1"
    input: "copy_14"
    output: "add_7"
    name: "aten_add_5"
    op_type: "aten_add"
    attribute {
      name: "alpha"
      f: 1.0
      type: FLOAT
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  node {
    input: "add_7"
    output: "getattr_l__self___layer4___1___relu_2"
    name: "torch_nn_modules_activation_ReLU_getattr_L__self___layer4___1___relu_2_6"
    op_type: "torch_nn_modules_activation_ReLU_getattr_L__self___layer4___1___relu_2"
    domain: "pkg.torch.2.2.0a0+git4ab5507"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  opset_import {
    domain: "pkg.torch.2.2.0a0+git4ab5507"
    version: 1
  }
  domain: "pkg.torchvision.0.16.0a0+0370134"
}
functions {
  name: "torch_nn_modules_container_Sequential_layer4_1"
  input: "copy_12"
  input: "layer4.0.conv1.weight"
  input: "layer4.0.bn1.weight"
  input: "layer4.0.bn1.bias"
  input: "layer4.0.bn1.running_mean"
  input: "layer4.0.bn1.running_var"
  input: "layer4.0.conv2.weight"
  input: "layer4.0.bn2.weight"
  input: "layer4.0.bn2.bias"
  input: "layer4.0.bn2.running_mean"
  input: "layer4.0.bn2.running_var"
  input: "layer4.0.downsample.0.weight"
  input: "layer4.0.downsample.1.weight"
  input: "layer4.0.downsample.1.bias"
  input: "layer4.0.downsample.1.running_mean"
  input: "layer4.0.downsample.1.running_var"
  input: "layer4.1.conv1.weight"
  input: "layer4.1.bn1.weight"
  input: "layer4.1.bn1.bias"
  input: "layer4.1.bn1.running_mean"
  input: "layer4.1.bn1.running_var"
  input: "layer4.1.conv2.weight"
  input: "layer4.1.bn2.weight"
  input: "layer4.1.bn2.bias"
  input: "layer4.1.bn2.running_mean"
  input: "layer4.1.bn2.running_var"
  output: "layer4_1_1"
  node {
    input: "copy_12"
    input: "layer4.0.conv1.weight"
    input: "layer4.0.bn1.weight"
    input: "layer4.0.bn1.bias"
    input: "layer4.0.bn1.running_mean"
    input: "layer4.0.bn1.running_var"
    input: "layer4.0.conv2.weight"
    input: "layer4.0.bn2.weight"
    input: "layer4.0.bn2.bias"
    input: "layer4.0.bn2.running_mean"
    input: "layer4.0.bn2.running_var"
    input: "layer4.0.downsample.0.weight"
    input: "layer4.0.downsample.1.weight"
    input: "layer4.0.downsample.1.bias"
    input: "layer4.0.downsample.1.running_mean"
    input: "layer4.0.downsample.1.running_var"
    output: "layer4_0_1"
    name: "torchvision_models_resnet_BasicBlock_layer4_0_1_0"
    op_type: "torchvision_models_resnet_BasicBlock_layer4_0_1"
    domain: "pkg.torchvision.0.16.0a0+0370134"
  }
  node {
    input: "layer4_0_1"
    input: "layer4.1.conv1.weight"
    input: "layer4.1.bn1.weight"
    input: "layer4.1.bn1.bias"
    input: "layer4.1.bn1.running_mean"
    input: "layer4.1.bn1.running_var"
    input: "layer4.1.conv2.weight"
    input: "layer4.1.bn2.weight"
    input: "layer4.1.bn2.bias"
    input: "layer4.1.bn2.running_mean"
    input: "layer4.1.bn2.running_var"
    output: "layer4_1_1"
    name: "torchvision_models_resnet_BasicBlock_layer4_1_1_1"
    op_type: "torchvision_models_resnet_BasicBlock_layer4_1_1"
    domain: "pkg.torchvision.0.16.0a0+0370134"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.torchvision.0.16.0a0+0370134"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "aten_mean_dim"
  input: "self"
  input: "dim"
  output: "result_10"
  node {
    input: "self"
    output: "tmp"
    name: "n0"
    op_type: "Shape"
  }
  node {
    input: "tmp"
    output: "tmp_0"
    name: "n1"
    op_type: "Size"
  }
  node {
    output: "int64_0"
    name: "n2"
    op_type: "Constant"
    attribute {
      name: "value"
      t {
        data_type: 7
        int64_data: 0
        name: "int64_0"
      }
      type: TENSOR
    }
  }
  node {
    input: "int64_0"
    input: "tmp_0"
    output: "int64_0_cast"
    name: "n3"
    op_type: "CastLike"
  }
  node {
    input: "tmp_0"
    input: "int64_0_cast"
    output: "cond"
    name: "n4"
    op_type: "Equal"
  }
  node {
    input: "cond"
    output: "result_10"
    name: "n5"
    op_type: "If"
    attribute {
      name: "then_branch"
      g {
        node {
          input: "self"
          output: "result"
          name: "n0"
          op_type: "Identity"
        }
        name: "thenGraph_5"
        output {
          name: "result"
        }
      }
      type: GRAPH
    }
    attribute {
      name: "else_branch"
      g {
        node {
          input: "dim"
          output: "tmp_1"
          name: "n0"
          op_type: "Shape"
        }
        node {
          input: "tmp_1"
          output: "tmp_2"
          name: "n1"
          op_type: "Size"
        }
        node {
          output: "int64_0_3"
          name: "n2"
          op_type: "Constant"
          attribute {
            name: "value"
            t {
              data_type: 7
              int64_data: 0
              name: "int64_0_3"
            }
            type: TENSOR
          }
        }
        node {
          input: "int64_0_3"
          input: "tmp_2"
          output: "int64_0_3_cast"
          name: "n3"
          op_type: "CastLike"
        }
        node {
          input: "tmp_2"
          input: "int64_0_3_cast"
          output: "cond_4"
          name: "n4"
          op_type: "Equal"
        }
        node {
          input: "cond_4"
          output: "dim_8"
          name: "n5"
          op_type: "If"
          attribute {
            name: "then_branch"
            g {
              node {
                output: "int64_0_5"
                name: "n0"
                op_type: "Constant"
                attribute {
                  name: "value"
                  t {
                    data_type: 7
                    int64_data: 0
                    name: "int64_0_5"
                  }
                  type: TENSOR
                }
              }
              node {
                input: "dim"
                input: "int64_0_5"
                output: "dim_6"
                name: "n1"
                op_type: "Unsqueeze"
              }
              name: "thenGraph_8"
              output {
                name: "dim_6"
              }
            }
            type: GRAPH
          }
          attribute {
            name: "else_branch"
            g {
              node {
                input: "dim"
                output: "dim_7"
                name: "n0"
                op_type: "Identity"
              }
              name: "elseGraph_8"
              output {
                name: "dim_7"
              }
            }
            type: GRAPH
          }
        }
        node {
          input: "self"
          input: "dim_8"
          output: "result_9"
          name: "n6"
          op_type: "ReduceMean"
          attribute {
            name: "keepdims"
            type: INT
            ref_attr_name: "keepdim"
          }
        }
        name: "elseGraph_5"
        output {
          name: "result_9"
        }
      }
      type: GRAPH
    }
  }
  doc_string: "mean.dim(Tensor self, int[1]? dim, bool keepdim=False, *, ScalarType? dtype=None) -> Tensor"
  opset_import {
    domain: ""
    version: 18
  }
  domain: "pkg.onnxscript.torch_lib"
  attribute_proto {
    name: "keepdim"
    i: 0
    type: INT
  }
}
functions {
  name: "torch_nn_modules_pooling_AdaptiveAvgPool2d_avgpool_1"
  input: "copy_16"
  output: "mean"
  node {
    output: "_val_1"
    name: "Constant_1"
    op_type: "Constant"
    attribute {
      name: "value"
      t {
        dims: 2
        data_type: 7
        raw_data: "\377\377\377\377\377\377\377\377\376\377\377\377\377\377\377\377"
      }
      type: TENSOR
    }
  }
  node {
    input: "copy_16"
    input: "_val_1"
    output: "mean"
    name: "aten_mean_dim_2"
    op_type: "aten_mean_dim"
    attribute {
      name: "keepdim"
      i: 1
      type: INT
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "aten_t"
  input: "self"
  output: "result_1"
  node {
    input: "self"
    output: "tmp"
    name: "n0"
    op_type: "Shape"
  }
  node {
    input: "tmp"
    output: "rank"
    name: "n1"
    op_type: "Size"
  }
  node {
    output: "int64_2"
    name: "n2"
    op_type: "Constant"
    attribute {
      name: "value"
      t {
        data_type: 7
        int64_data: 2
        name: "int64_2"
      }
      type: TENSOR
    }
  }
  node {
    input: "int64_2"
    input: "rank"
    output: "int64_2_cast"
    name: "n3"
    op_type: "CastLike"
  }
  node {
    input: "rank"
    input: "int64_2_cast"
    output: "cond"
    name: "n4"
    op_type: "Equal"
  }
  node {
    input: "cond"
    output: "result_1"
    name: "n5"
    op_type: "If"
    attribute {
      name: "then_branch"
      g {
        node {
          input: "self"
          output: "result"
          name: "n0"
          op_type: "Transpose"
          attribute {
            name: "perm"
            ints: 1
            ints: 0
            type: INTS
          }
        }
        name: "thenGraph_6"
        output {
          name: "result"
        }
      }
      type: GRAPH
    }
    attribute {
      name: "else_branch"
      g {
        node {
          input: "self"
          output: "result_0"
          name: "n0"
          op_type: "Identity"
        }
        name: "elseGraph_6"
        output {
          name: "result_0"
        }
      }
      type: GRAPH
    }
  }
  doc_string: "t(Tensor(a) self) -> Tensor(a)"
  opset_import {
    domain: ""
    version: 18
  }
  domain: "pkg.onnxscript.torch_lib"
}
functions {
  name: "aten_addmm"
  input: "self"
  input: "mat1"
  input: "mat2"
  output: "return_val"
  node {
    input: "mat1"
    input: "mat2"
    input: "self"
    output: "return_val"
    name: "n0"
    op_type: "Gemm"
    attribute {
      name: "alpha"
      type: FLOAT
      ref_attr_name: "alpha"
    }
    attribute {
      name: "beta"
      type: FLOAT
      ref_attr_name: "beta"
    }
  }
  doc_string: "addmm(Tensor self, Tensor mat1, Tensor mat2, *, Scalar beta=1, Scalar alpha=1) -> Tensor"
  opset_import {
    domain: ""
    version: 18
  }
  domain: "pkg.onnxscript.torch_lib"
  attribute_proto {
    name: "beta"
    f: 1.0
    type: FLOAT
  }
  attribute_proto {
    name: "alpha"
    f: 1.0
    type: FLOAT
  }
}
functions {
  name: "torch_nn_modules_linear_Linear_fc_1"
  input: "view"
  input: "fc.weight"
  input: "fc.bias"
  output: "addmm"
  node {
    input: "fc.weight"
    output: "t"
    name: "aten_t_0"
    op_type: "aten_t"
    domain: "pkg.onnxscript.torch_lib"
  }
  node {
    input: "fc.bias"
    input: "view"
    input: "t"
    output: "addmm"
    name: "aten_addmm_1"
    op_type: "aten_addmm"
    attribute {
      name: "alpha"
      f: 1.0
      type: FLOAT
    }
    attribute {
      name: "beta"
      f: 1.0
      type: FLOAT
    }
    domain: "pkg.onnxscript.torch_lib"
  }
  opset_import {
    domain: ""
    version: 18
  }
  opset_import {
    domain: "pkg.onnxscript.torch_lib"
    version: 1
  }
  domain: "pkg.torch.2.2.0a0+git4ab5507"
}
functions {
  name: "aten_view"
  input: "self"
  input: "size"
  output: "return_val"
  node {
    input: "size"
    output: "size_0"
    name: "n0"
    op_type: "Cast"
    attribute {
      name: "to"
      i: 7
      type: INT
    }
  }
  node {
    input: "self"
    input: "size_0"
    output: "return_val"
    name: "n1"
    op_type: "Reshape"
  }
  doc_string: "view(Tensor(a) self, SymInt[] size) -> Tensor(a)"
  opset_import {
    domain: ""
    version: 18
  }
  domain: "pkg.onnxscript.torch_lib"
}
functions {
  name: "Rank"
  input: "input"
  output: "return_val"
  node {
    input: "input"
    output: "tmp"
    name: "n0"
    op_type: "Shape"
  }
  node {
    input: "tmp"
    output: "return_val"
    name: "n1"
    op_type: "Size"
  }
  doc_string: "Take the rank of the input tensor."
  opset_import {
    domain: ""
    version: 18
  }
  domain: "pkg.onnxscript.torch_lib.common"
}
functions {
  name: "IsScalar"
  input: "input"
  output: "return_val"
  node {
    input: "input"
    output: "tmp"
    name: "n0"
    op_type: "Shape"
  }
  node {
    input: "tmp"
    output: "tmp_0"
    name: "n1"
    op_type: "Size"
  }
  node {
    output: "tmp_1"
    name: "n2"
    op_type: "Constant"
    attribute {
      name: "value_int"
      i: 0
      type: INT
    }
  }
  node {
    input: "tmp_0"
    input: "tmp_1"
    output: "return_val"
    name: "n3"
    op_type: "Equal"
  }
  doc_string: "Return whether the input has rank 0, or is a scalar."
  opset_import {
    domain: ""
    version: 18
  }
  domain: "pkg.onnxscript.torch_lib.common"
}
